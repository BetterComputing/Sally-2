;********************************************************
;*							*
;*							*
;********************************************************
;
;
;
INIT:	DI
	XOR	A
INIT1:	DEC	A
	JR	NZ,INIT1	;DO NOTHING FOR 1 MILLISECOND

	LD	HL,INITAB
	LD	B,ITBLEN/2	;SEND INITIAL POOP TO PROGRAMABLE I/O'S
INIT2:	LD	C,(HL)
	INC	HL
	OUTI
	JR	NZ,INIT2
;
;
;	PERFORM READ/WRITE TEST OF TOP 4K RAM
;
RAMTST:	LD	HL,MONITOR
	LD	A,1
RTST1:	LD	B,16
RTST2:	LD	(HL),A		;WRITE TEST BYTE INTO MONITOR/GLOBALS
	RLCA			;ROTATE BIT PATTERN IN A
	INC	L		;BUMP L TO DO INNER LOOP 256 TIMES
	JR	NZ,RTST2
	INC	H
	DJNZ	RTST2		;REPEAT 16 TIMES FOR 4096 BYTES

	LD	C,16
RTST3:	DEC	HL
	RRCA
	CP	(HL)		;VERIFY THAT TEST PATTERN IS WRITTEN
	JR	NZ,$		;STICK FOREVER IF MONITOR RAM FAILURE
	DJNZ	RTST3
	DEC	C
	JR	NZ,RTST3

	ADD	A,A
	JR	NZ,RTST1	;DO 8 PASSES OVER MEMORY
;
;	NOW COPY MONITOR AND VARIABLES TO HIGH RAM
;
	LD	HL,MONCOPY
	LD	DE,MONITOR
	LD	BC,MONSIZE
	LDIR			;COPY RESIDENT CODE INTO RAM

	LD	HL,VARCOPY
	LD	DE,GLBVARS
	LD	BC,GLBSIZE
	LDIR			;INITIALIZE GLOBAL VARIABLES
	XOR	A
ZEROS:	LD	(DE),A
	INC	E
	JR	NZ,ZEROS	;FILL REST OF SCRATCHPAD WITH ZEROS
;
;	ESTABLISH STACK AND INTERRUPT VECTOR BASE
;
	LD	SP,KEYBUF+16	;TEMP PLACE FOR STACK
	LD	A,HIGH RAM
	LD	I,A		;POINT I REGISTER TO VECTOR TABLE
	IM	2		;SELECT VECTORED INTERRUPTS
;
;	RESTORE ALL DRIVES TO TRACK ZERO AND TEST FOR ON-LINE STATUS
;
REST:	LD	A,01001111B	;INITIAL DRIVE PATTERN (ALL SELECTED)
	OUT	(LATCH),A
	LD	D,A		;KEEP PATTERN IN D
	LD	B,5
REST1:	LD	A,STEPIN+HLOAD+3
	CALL	TYP1CMD		;STEP IN 5 TIMES AS PRECAUTION FOR
	DJNZ	REST1		; DRIVES THAT GET BEHIND TK0 SENSOR
	LD	B,100		;DO 100 STEPS TOWARD TRACK ZERO
REST2:	LD	A,D
	OUT	(LATCH),A	;ISSUE SELECTS AND PAUSE A BIT
	EX	(SP),HL
	EX	(SP),HL
	LD	A,STEPOUT+HLOAD+3
	CALL	TYP1CMD		;ISSUE STEP OUT COMMAND TO DRIVES

	LD	E,00000001B	;PREPARE TO TEST TK0 INDICATORS
REST3:	LD	A,E
	OR	01000000B
	OUT	(LATCH),A	;SELECT ONE DRIVE AT A TIME
	EX	(SP),HL
	EX	(SP),HL
	CALL	FORCE		;FORCE INTERRUPT TO SET TYPE 1 STATUS
	BIT	2,A
	JR	Z,REST3A	;JUMP IF TRACK ZERO NOT INDICATED
	LD	A,E
	CPL
	AND	D		;ELSE RESET SELECT BIT FOR DRIVE IN D
	LD	D,A
REST3A:	SLA	E		;ADVANCE SELECT BIT
	BIT	4,E
	JR	Z,REST3		;DO SAME FOR ALL 4 DRIVES
	DJNZ	REST2		;THEN REPEAT STEP OUT 100 TIMES

	call	shutdown	;unload the heads and deselect the drives
	LD	HL,DMATRIX+DSKBITS
	LD	BC,16
	LD	A,4		;PREP TO SET FLAGS FOR DRIVES PRESENT
REST4:	RR	D
	JR	C,REST4A	;JUMP IF DRIVE(N) NOT AT TRACK ZERO
	SET	PRESENT,(HL)	;ELSE SET BIT IN ARRAY(HL)
REST4A:	ADD	HL,BC
	DEC	A
	JR	NZ,REST4	;DO FOR ALL 4 DRIVES
;
	LD	SP,IOBUFF	;NEW PLACE FOR STACK
	JP	EMULATOR	;GO INITIALIZE FOR ATARI OR CP/M
;
;
;
INITAB:	DEFB	ATROUT,1	;SET ATART OUTPUT TO MARK STATE
	DEFB	SEROUT,1	;SET RS232 OUTPUT TO MARK STATE
	defb	ctc0,00000011b	;reset ctc0
	defb	ctc0,low ctcvec	;output base ctc interupt vector
	DEFB	CTC1,00000111B	;PUT CTC1 IN TIMER MODE
	DEFB	CTC1,1		;DIVIDE BY 1
	defb	ctc2,00000011b	;reset ctc2
	defb	ctc3,00000011b	;reset ctc3
	DEFB	CDMUX,1		;SET MUX TO PASS ATARI DATA
	DEFB	LATCH,00000000B	;ZEROS TO DRIVE SELECT LATCH
	DEFB	CMDREG,FINCMD	;FORCE DISK CONTROLLER INTERRUPT
ITBLEN	EQU	$-INITAB
;
;
;
;
;
;
