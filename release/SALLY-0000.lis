SALLY-0000.asm:
     1                          
     2                          		include "SALLY-CONST.asm"
SALLY-CONST.asm:
     1                          LF		equ	0ah
     2                          CR		equ	0dh
     3                          
     4                          VARS		equ	0ff80h
     5                          echo		equ	0
     6                          sum		equ	1
     7                          addr		equ	2
     8                          
     9                          ;--------------------------------------------------
    10                          ; baudrate for console-io
    11                          ; 26 =  9600 baud
    12                          ; 13 = 19200 baud
    13                          ;--------------------------------------------------
    14                          CONBAUD		equ	26
    15                          
    16                          ;--------------------------------------------------
    17                          ; 16 bytes keyboard buffer
    18                          ;--------------------------------------------------
    19                          KEYBUF		equ	0ff00h
    20                          
    21                          ;--------------------------------------------------
    22                          ; NMI Vector
    23                          ;--------------------------------------------------
    24                          NMIVEC		equ	066h
    25                          
    26                          ;--------------------------------------------------
    27                          ; FF10: Interrupt Table
    28                          ;--------------------------------------------------
    29                          TC0INTVEC	equ	0ff10h
    30                          TC1INTVEC	equ	0ff12h
    31                          TC2INTVEC	equ	0ff14h
    32                          TC3INTVEC	equ	0ff16h
    33                          
    34                          ;--------------------------------------------------
    35                          ; Out - ports equations, Disk-Control
    36                          ;--------------------------------------------------
    37                          DISKCTRL	equ	030h				;7 = S/D\, 6 = S/B\, 5 = side, 4 = RES\, 3-0 = DSEL 4-1
    38                          
    39                          ;--------------------------------------------------
    40                          ; In/Out - ports equations, WD177x FDC
    41                          ;--------------------------------------------------
    42                          FDCSTAT		equ	040h
    43                          FDCCMD		equ	040h
    44                          FDCTRK		equ	041h
    45                          FDCSEC		equ	042h
    46                          FDCDAT		equ	043h
    47                          
    48                          ;--------------------------------------------------
    49                          ; Out - ports equations, RS232, SIO, ROM, INDEX
    50                          ;--------------------------------------------------
    51                          SIOOUT		equ	050h
    52                          RS232TX		equ	051h
    53                          ROMSWITCH	equ	052h
    54                          STROBE		equ	053h
    55                          RESIDX		equ	054h
    56                          RS232DTR	equ	055h
    57                          SETIDX		equ	056h
    58                          CMDSIO		equ	057h				;0 = CMD, 1 = SIOOUT
    59                          
    60                          RS232		equ	050h
    61                          SIOIN		equ	070h
    62                          
    63                          TC0		equ	080h
    64                          TC1		equ	081h
    65                          TC2		equ	082h
    66                          TC3		equ	083h
    67                          
    68                          DDEVIC		equ	0c2fbh
    69                          DCOMND		equ	0c2fch
    70                          DAUX1		equ	0c2fdh
    71                          DAUX2		equ	0c2feh
    72                          DCHECK		equ	0c2ffh
    73                          
    74                          PERCOMBLOCKS	equ	0ff56h
    75                          
SALLY-0000.asm:
     3                          
     4                          ;--------------------------------------------------
     5                          ; Code executed after Reset
     6                          ;--------------------------------------------------
     7                          		ORG	00000h
     8                          ;
     9   000000 f3              		di      				; disable interrupt
    10   000001 af              		xor     a				; set a to zero
    11   000002 3d              restime:	dec     a				; do 256 times nothing
    12   000003 20fd            		jr      nz, restime			; loop
    13                          
    14   000005 21a300          		ld      hl, portval			; init 11 ports with values at 0a3h
    15                          ;		ld      b, 0bh
    16   000008 060a            		ld      b, 10				;no FORCE
    17   00000a 4e              portinit:	ld      c, (hl)
    18   00000b 23              		inc     hl
    19   00000c eda3            		outi
    20   00000e 20fa            		jr      nz, portinit			; loop
    21                          
    22                          
    23   000010 2100f0          		ld      hl,0f000h          		;test ram @F000-FFFF
    24   000013 3e01            		ld      a, 01h             		;write 1,2,4,8,16,32,64,128
    25   000015 0610            testram2:	ld      b, 10h
    26   000017 77              testram:	ld      (hl),a
    27   000018 07              		rlca
    28   000019 2c              		inc     l
    29   00001a 20fb            		jr      nz, testram
    30   00001c 24              		inc     h
    31   00001d 10f8            		djnz    testram
    32                          
    33   00001f 0e10            		ld      c, 10h
    34   000021 2b              testram1:	dec     hl
    35   000022 0f              		rrca
    36   000023 be              		cp      (hl)
    37   000024 20fe            ramerr:		jr      nz, ramerr			; if error, loop forever
    38   000026 10f9            		djnz    testram1
    39   000028 0d              		dec     c
    40   000029 20f6            		jr      nz, testram1
    41   00002b 87              		add     a, a
    42   00002c 20e7            		jr      nz, testram2
    43                          
    44   00002e 21b900          		ld      hl, sallycode			; copy BIOS from $00b9 to $f000
    45   000031 1100f0          		ld      de, 0f000h			; length efc
    46   000034 01fc0e          		ld      bc, 0efch
    47   000037 edb0            		ldir
    48   000039 21b50f          		ld      hl, sallycode + 0efch		; sallycode + 0fb5h - 0b9h ; copy from fb5 to $ff20
    49   00003c 1120ff          		ld      de, 0ff20h			; length $2F
    50   00003f 012f00          		ld      bc, 002fh
    51   000042 edb0            		ldir
    52                          
    53   000044 af              		xor     a				; fill up to $FFFF with zeros
    54   000045 12              ramfill:	ld      (de),a
    55   000046 1c              		inc     e
    56   000047 20fc            		jr      nz, ramfill
    57                          
    58   000049 3110ff          		ld      sp, 0ff10h			; stack-pointer to 0ff10h
    59                          
    60   00004c 3eff            		ld      a, 0ffh				; load interrupt-vector register
    61   00004e ed47            		ld      i, a				; with 0ffh
    62   000050 ed5e            		im      2				; enable interrupt mode 2 (vectored)
    63                          
    64                          ;--------------------------------------------------
    65                          ; step 5 times in and then out to trk00
    66                          ; set bit 6 for each online floppy in ff5eh
    67                          ; percom block (16 bytes, byte 8 bit 6)
    68                          ;--------------------------------------------------
    69   000052 3e4f            		ld      a, 4fh				; select drive 1-4, Motor off, side 0, B/S=1, DD
    70   000054 d330            		out     (DISKCTRL),a
    71                          
    72   000056 57              		ld      d, a				; d = 4fh
    73   000057 0605            		ld      b, 5				; step 5 times
    74                          stepin:
    75   000059 3e4b            		ld      a, 4bh				; 4b = 0100 1011 = step-in
    76   00005b cd6bf3          		call    0f36bh				; write A to FDC command and wait
    77   00005e 10f9            		djnz    stepin
    78                          
    79   000060 0664            		ld      b, 64h				; seek track 00 for all 4 drives
    80   000062 7a              outloop1:	ld      a, d				; select all drives
    81   000063 d330            		out     (DISKCTRL),a
    82   000065 e3              		ex      (sp),hl				; ???
    83   000066 e3              		ex      (sp),hl				; ???
    84   000067 3e6b            		ld      a, 6bh				; step out
    85   000069 cd6bf3          		call    0f36bh				; write A to FDC command and wait
    86                          
    87   00006c 1e01            		ld      e, 01h
    88   00006e 7b              outloop:	ld      a, e
    89   00006f f640            		or      40h
    90   000071 d330            		out     (DISKCTRL), a			; select one drive
    91   000073 e3              		ex      (sp), hl
    92   000074 e3              		ex      (sp), hl
    93   000075 cd91f3          		call    0f391h				; stop command, get status
    94   000078 cb57            		bit     2, a
    95   00007a 2804            		jr      z, excldrv			; bit not set, not at track 00
    96   00007c 7b              		ld      a, e				; drive at track 00
    97   00007d 2f              		cpl     				; exclude drive from seeking
    98   00007e a2              		and     d
    99   00007f 57              		ld      d, a
   100                          excldrv:
   101   000080 cb23            		sla     e
   102   000082 cb63            		bit     4, e
   103   000084 28e8            		jr      z, outloop			; status checked for all 4 drives?
   104   000086 10da            		djnz    outloop1			; step out again
   105                          
   106   000088 cd68f0          		call    0f068h				; deselect floppies and seek current track?
   107                          
   108   00008b 215eff          		ld      hl, 0ff5eh			; set bit for each connected floppy?
   109   00008e 011000          		ld      bc, 0010h
   110   000091 3e04            		ld      a, 04h
   111   000093 cb1a            nextdrv:	rr      d
   112   000095 3802            		jr      c, noset
   113   000097 cbf6            		set     6, (hl)
   114   000099 09              noset:		add     hl, bc
   115   00009a 3d              		dec     a
   116   00009b 20f6            		jr      nz, nextdrv
   117                          
   118   00009d 3100c1          		ld      sp, 0c100h			; set stack to 0c100h
   119   0000a0 c362f7          		jp      0f762h				; jump to code in DRAM
   120                          ;		jp	0f003h
   121                          ;--------------------------------------------------
   122                          ; 11 times port:value
   123                          ;--------------------------------------------------
   124   0000a3 5001            portval:	db	050h, 001h			;Bit0	set ATARI DATA
   125   0000a5 5101            		db	051h, 001h			;Bit1	set RS232 TX
   126   0000a7 8003            		db	080h, 003h			;CTC	Channel 0 reset
   127   0000a9 8010            		db 	080h, 010h			;CTC	Channel 0 interrupt vector
   128   0000ab 8107            		db	081h, 007h			;CTC	Channel 1 reset + set time constant
   129   0000ad 8101            		db	081h, 001h			;CTC	Channel 1 time contant
   130   0000af 8203            		db	082h, 003h			;CTC	Channel 2 reset
   131   0000b1 8303            		db	083h, 003h			;CTC	Channel 3 reset
   132   0000b3 5701            		db	057h, 001h			;Bit7	ATARI RXD
   133   0000b5 3000            		db	030h, 000h			;DSE	Floppy Control (74LS273)
   134   0000b7 40d0            		db	040h, 0d0h			;DWR/DRW	FDC read-write	d0 = force int (with no interrupt)
   135                          
   136                          sallycode	equ	ASMPC
   137                          
