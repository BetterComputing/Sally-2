SALLY-0000.asm:
     1                          
     2                          		include "SALLY-CONST.asm"
SALLY-CONST.asm:
     1                          LF		equ	0ah
     2                          CR		equ	0dh
     3                          
     4                          VARS		equ	0ff80h
     5                          echo		equ	0
     6                          sum		equ	1
     7                          addr		equ	2
     8                          
     9                          ;--------------------------------------------------
    10                          ; baudrate for console-io
    11                          ; 26 =  9600 baud
    12                          ; 13 = 19200 baud
    13                          ;--------------------------------------------------
    14                          CONBAUD		equ	26
    15                          
    16                          ;--------------------------------------------------
    17                          ; 16 bytes keyboard buffer
    18                          ;--------------------------------------------------
    19                          KEYBUF		equ	0ff00h
    20                          ;--------------------------------------------------
    21                          ; FF10: Interrupt Table
    22                          ;--------------------------------------------------
    23                          TC0INTVEC	equ	0ff10h
    24                          TC1INTVEC	equ	0ff12h
    25                          TC2INTVEC	equ	0ff14h
    26                          TC3INTVEC	equ	0ff16h
    27                          
    28                          ;--------------------------------------------------
    29                          ; Out - ports equations, Disk-Control
    30                          ;--------------------------------------------------
    31                          DISKCTRL	equ	030h				;7 = S/D\, 6 = S/B\, 5 = side, 4 = RES\, 3-0 = DSEL 4-1
    32                          
    33                          ;--------------------------------------------------
    34                          ; In/Out - ports equations, WD177x FDC
    35                          ;--------------------------------------------------
    36                          FDCSTAT		equ	040h
    37                          FDCCMD		equ	040h
    38                          FDCTRK		equ	041h
    39                          FDCSEC		equ	042h
    40                          FDCDAT		equ	043h
    41                          
    42                          ;--------------------------------------------------
    43                          ; Out - ports equations, RS232, SIO, ROM, INDEX
    44                          ;--------------------------------------------------
    45                          SIOOUT		equ	050h
    46                          RS232TX		equ	051h
    47                          ROMSWITCH	equ	052h
    48                          STROBE		equ	053h
    49                          RESIDX		equ	054h
    50                          RS232DTR	equ	055h
    51                          SETIDX		equ	056h
    52                          CMDSIO		equ	057h				;0 = CMD, 1 = SIOOUT
    53                          
    54                          RS232		equ	050h
    55                          SIOIN		equ	070h
    56                          
    57                          TC0		equ	080h
    58                          TC1		equ	081h
    59                          TC2		equ	082h
    60                          TC3		equ	083h
    61                          
    62                          DDEVIC		equ	0c2fbh
    63                          DCOMND		equ	0c2fch
    64                          DAUX1		equ	0c2fdh
    65                          DAUX2		equ	0c2feh
    66                          DCHECK		equ	0c2ffh
    67                          
    68                          PERCOMBLOCKS	equ	0ff56h
    69                          
SALLY-0000.asm:
     3                          
     4                          ;--------------------------------------------------
     5                          ; Code executed after Reset
     6                          ;--------------------------------------------------
     7                          		ORG	00000h
     8                          ;
     9   000000 f3              		di      				; disable interrupt
    10   000001 af              		xor     a				; set a to zero
    11   000002 3d              restime:	dec     a				; do 256 times nothing
    12   000003 20fd            		jr      nz, restime			; loop
    13                          
    14   000005 21a300          		ld      hl, portval			; init 11 ports with values at 0a3h
    15   000008 060b            		ld      b, 0bh
    16   00000a 4e              portinit:	ld      c, (hl)
    17   00000b 23              		inc     hl
    18   00000c eda3            		outi
    19   00000e 20fa            		jr      nz, portinit			; loop
    20                          
    21                          
    22   000010 2100f0          		ld      hl,0f000h          		;test ram @F000-FFFF
    23   000013 3e01            		ld      a, 01h             		;write 1,2,4,8,16,32,64,128
    24   000015 0610            testram2:	ld      b, 10h
    25   000017 77              testram:	ld      (hl),a
    26   000018 07              		rlca
    27   000019 2c              		inc     l
    28   00001a 20fb            		jr      nz, testram
    29   00001c 24              		inc     h
    30   00001d 10f8            		djnz    testram
    31                          
    32   00001f 0e10            		ld      c, 10h
    33   000021 2b              testram1:	dec     hl
    34   000022 0f              		rrca
    35   000023 be              		cp      (hl)
    36   000024 20fe            ramerr:		jr      nz, ramerr			; if error, loop forever
    37   000026 10f9            		djnz    testram1
    38   000028 0d              		dec     c
    39   000029 20f6            		jr      nz, testram1
    40   00002b 87              		add     a, a
    41   00002c 20e7            		jr      nz, testram2
    42                          
    43   00002e 21b900          		ld      hl, sallycode			; copy BIOS from $00b9 to $f000
    44   000031 1100f0          		ld      de, 0f000h			; length efc
    45   000034 01fc0e          		ld      bc, 0efch
    46   000037 edb0            		ldir
    47   000039 21b50f          		ld      hl, sallycode + 0efch		; sallycode + 0fb5h - 0b9h ; copy from fb5 to $ff20
    48   00003c 1120ff          		ld      de, 0ff20h			; length $2F
    49   00003f 012f00          		ld      bc, 002fh
    50   000042 edb0            		ldir
    51                          
    52   000044 af              		xor     a				; fill up to $FFFF with zeros
    53   000045 12              ramfill:	ld      (de),a
    54   000046 1c              		inc     e
    55   000047 20fc            		jr      nz, ramfill
    56                          
    57   000049 3110ff          		ld      sp, 0ff10h			; stack-pointer to 0ff10h
    58                          
    59   00004c 3eff            		ld      a, 0ffh				; load interrupt-vector register
    60   00004e ed47            		ld      i, a				; with 0ffh
    61   000050 ed5e            		im      2				; enable interrupt mode 2 (vectored)
    62                          
    63                          ;--------------------------------------------------
    64                          ; step 5 times in and then out to trk00
    65                          ; set bit 6 for each online floppy in ff5eh
    66                          ; percom block (16 bytes, byte 8 bit 6)
    67                          ;--------------------------------------------------
    68   000052 3e4f            		ld      a, 4fh				; select drive 1-4, Motor off, side 0, B/S=1, DD
    69   000054 d330            		out     (DISKCTRL),a
    70                          
    71   000056 57              		ld      d, a				; d = 4fh
    72   000057 0605            		ld      b, 5				; step 5 times
    73                          stepin:
    74   000059 3e4b            		ld      a, 4bh				; 4b = 0100 1011 = step-in
    75   00005b cd6bf3          		call    0f36bh				; write A to FDC command and wait
    76   00005e 10f9            		djnz    stepin
    77                          
    78   000060 0664            		ld      b, 64h				; seek track 00 for all 4 drives
    79   000062 7a              outloop1:	ld      a, d				; select all drives
    80   000063 d330            		out     (DISKCTRL),a
    81   000065 e3              		ex      (sp),hl				; ???
    82   000066 e3              		ex      (sp),hl				; ???
    83   000067 3e6b            		ld      a, 6bh				; step out
    84   000069 cd6bf3          		call    0f36bh				; write A to FDC command and wait
    85                          
    86   00006c 1e01            		ld      e, 01h
    87   00006e 7b              outloop:	ld      a, e
    88   00006f f640            		or      40h
    89   000071 d330            		out     (DISKCTRL), a			; select one drive
    90   000073 e3              		ex      (sp), hl
    91   000074 e3              		ex      (sp), hl
    92   000075 cd91f3          		call    0f391h				; stop command, get status
    93   000078 cb57            		bit     2, a
    94   00007a 2804            		jr      z, excldrv			; bit not set, not at track 00
    95   00007c 7b              		ld      a, e				; drive at track 00
    96   00007d 2f              		cpl     				; exclude drive from seeking
    97   00007e a2              		and     d
    98   00007f 57              		ld      d, a
    99                          excldrv:
   100   000080 cb23            		sla     e
   101   000082 cb63            		bit     4, e
   102   000084 28e8            		jr      z, outloop			; status checked for all 4 drives?
   103   000086 10da            		djnz    outloop1			; step out again
   104                          
   105   000088 cd68f0          		call    0f068h				; deselect floppies and seek current track?
   106                          
   107   00008b 215eff          		ld      hl, 0ff5eh			; set bit for each connected floppy?
   108   00008e 011000          		ld      bc, 0010h
   109   000091 3e04            		ld      a, 04h
   110   000093 cb1a            nextdrv:	rr      d
   111   000095 3802            		jr      c, noset
   112   000097 cbf6            		set     6, (hl)
   113   000099 09              noset:		add     hl, bc
   114   00009a 3d              		dec     a
   115   00009b 20f6            		jr      nz, nextdrv
   116                          
   117   00009d 3100c1          		ld      sp, 0c100h			; set stack to 0c100h
   118                          ;		jp      0f762h				; jump to code in DRAM
   119   0000a0 c303f0          		jp	0f003h
   120                          ;--------------------------------------------------
   121                          ; 11 times port:value
   122                          ;--------------------------------------------------
   123   0000a3 5001            portval:	db	050h, 001h			;Bit0	set ATARI DATA
   124   0000a5 5101            		db	051h, 001h			;Bit1	set RS232 TX
   125   0000a7 8003            		db	080h, 003h			;CTC	Channel 0 reset
   126   0000a9 8010            		db 	080h, 010h			;CTC	Channel 0 interrupt vector
   127   0000ab 8107            		db	081h, 007h			;CTC	Channel 1 reset + set time constant
   128   0000ad 8101            		db	081h, 001h			;CTC	Channel 1 time contant
   129   0000af 8203            		db	082h, 003h			;CTC	Channel 2 reset
   130   0000b1 8303            		db	083h, 003h			;CTC	Channel 3 reset
   131   0000b3 5701            		db	057h, 001h			;Bit7	ATARI RXD
   132   0000b5 3000            		db	030h, 000h			;DSE	Floppy Control (74LS273)
   133   0000b7 40d0            		db	040h, 0d0h			;DWR/DRW	FDC read-write	d0 = force int (with no interrupt)
   134                          
   135                          sallycode	equ	ASMPC
   136                          
