rolli-0000.asm:
     1                          
     2                          RIDCMD		equ	11000000B	;READ ID COMMAND
     3                          RDCMD		equ	10000000B	;READ COMMAND
     4                          WRTCMD		equ	10100000B	;WRITE COMMAND
     5                          FINCMD		equ	11010000B	;FORCE INTERRUPT COMMAND
     6                          SKCMD		equ	00010000B	;SEEK COMMAND
     7                          RSTCMD		equ	00000000B	;RESTORE COMMAND
     8                          STEPOUT		equ	01100000B	;STEP OUT COMMAND
     9                          STEPIN		equ	01000000B	;STEP IN COMMAND
    10                          HLOAD		equ	00000000B	;HEAD LOAD BIT FOR TYPE 1 COMMANDS
    11                          
    12                          ;
    13                          ;	... DATA STRUCTURE FOR DISK I/O CONTROL BLOCK ...
    14                          ;
    15                          DSKOP		equ	0		;DISK OPERATION CODE
    16                          DSKDRV		equ	1		;DRIVE# (WITH SIDE# IN BIT 7)
    17                          DSKTRK		equ	2		;TRACK#
    18                          DSKSEC		equ	3		;SECTOR#
    19                          DSKPTR		equ	4		;READ/WRITE POINTER
    20                          DSKAUX		equ	6		;AUXILLIARY PARAMETERS (2 BYTES)
    21                          DSKSTS		equ	8		;OPERATION COMPLETION STATUS
    22                          
    23                          TSTRDY		EQU	0				;SELECT DRIVE AND TEST READY
    24                          GETSEC		EQU	1				;READ SECTOR
    25                          PUTSEC		EQU	2				;WRITE SECTOR
    26                          GETID		EQU	3				;READ ID MARK
    27                          
    28                          DISKV		equ	0f00fh
    29                          
    30                          putaddr		equ	0f493h
    31                          puthex		equ	0f498h
    32                          coninit		equ	0f5fch
    33                          conin		equ	0f640h
    34                          conout		equ	0f650h
    35                          SELECT		equ	0f110h
    36                          RESTORE		equ	0f23bh
    37                          SEEKTRK		equ	0f1fch
    38                          RWDISK		equ	0f2b6h
    39                          RENEW		equ	0f018h
    40                          WATCHDOG	equ	0f3a8h
    41                          RECOVER		equ	0f30fh
    42                          ACTIVON		equ	0f03ch
    43                          
    44                          CFRAME		equ	IOBUFF+LEN-5
    45                          iobuflenhi	equ	(IOBUFF+LEN) / 256
    46                          
    47                          DISKID		equ	0f82bh
    48                          DISKTAB		equ	0f83dh
    49                          DRVINDEX	equ	0fc28h
    50                          SENDBUFF	equ	0f66ch
    51                          SENDACK		equ	0fc4ah
    52                          HASPARMS	equ	0fbd3h
    53                          DISKREAD	equ	0f9d4h
    54                          DISKWRITE	equ	0f948h
    55                          XMITBUF		equ	0f684h
    56                          RXBLOCK		equ	0f6d9h
    57                          CMDWAIT		equ	0f7e2h
    58                          EMULATOR	equ	0f762h
    59                          SPIN		equ	0f15dh
    60                          PUTPARAMS	equ	0fc23h
    61                          GETPARAMS	equ	0fbe7h
    62                          LOGON		equ	0f77eh
    63                          
    64                          TRKBUF		equ	00800h
    65                          
    66                          DEBUG		equ	0f9d4h
    67                          
    68                          SIONORMAL	equ	40
    69                          SIOFAST		equ	8
    70                          
    71                          		include "equs.mac"
equs.mac:
     1                          KEYBUF		equ	0ff00h		;16 byte keyboard input fifo
     2                          CTCVEC		equ	0ff10h		;8 word interrupt vector table
     3                          ;
     4                          ;
     5                          ;
     6                          PRINTER		equ	020h		;PRINTER OUTPUT/INPUTS
     7                          LATCH		equ	030h		;DRIVE CONTROL LATCH
     8                          WD179X		equ	040h		;WD TYPE DISK CONTROLLER
     9                          ;
    10                          ;	EQUATES FOR DISK CONTROLLER PORTS AND COMMAND CODES
    11                          ;
    12                          STSREG		equ	WD179X+0	;STATUS REGISTER
    13                          CMDREG		equ	WD179X+0	;COMMAND REGISTER
    14                          TRKREG		equ	WD179X+1	;TRACK REGISTER
    15                          SECREG		equ	WD179X+2	;SECTOR REGISTER
    16                          DATREG		equ	WD179X+3	;DATA REGISTER;
    17                          
    18                          SERIN		equ	050h		;RS232 SERIAL INPUT
    19                          ;
    20                          ATROUT		equ	050h		;ATARI SERIAL OUTPUT
    21                          SEROUT		equ	051h		;RS232 SERIAL OUTPUT
    22                          BANKSW		equ	052h		;ROM BANKSWITCH BIT
    23                          STROBE		equ	053h		;PRINTER STROBE
    24                          INDXCLR		equ	054h		;INDEX CONTROL FLOP CLEAR
    25                          DTR		equ	055h		;DTR OUTPUT CONTROL
    26                          INDXSET		equ	056h		;INDEX CONTROL FLOP SET
    27                          CDMUX		equ	057h		;ATARI CMD/DATA MUX CONTROL
    28                          ;
    29                          ATARI		equ	070h		;ATARI INPUT BITS PORT
    30                          CTC0		equ	080h		;ZILOG COUNTER/TIMER
    31                          CTC1		equ	081h
    32                          CTC2		equ	082h
    33                          CTC3		equ	083h
    34                          ;
    35                          NULL		equ	000h
    36                          CR		equ	00dh
    37                          LF		equ	00ah
    38                          ;
    39                          
rolli-0000.asm:
    72                          		include "global.mac"
global.mac:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	GLOBAL VARIABLES FOR ATARI Z80 ROM		*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          glbvars		equ	0ff20h
     8                          ;
     9                          ;	... GLOBAL VARIABLES FOR PHYSICAL DISK HANDLER ...
    10                          ;
    11                          ;DRVTAB:	DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    12                          ;		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    13                          ;RATES:		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    14                          ;UNIT:		DEFB	0		;CURRENTLY SELECTED DISK#
    15                          ;TRACK:		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    16                          ;DRVOFF:	DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    17                          ;OUTCPY:	DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    18                          ;PERIOD:	DEFW	0		;DISK SPIN PERIOD
    19                          ;HLDTIM:	DEFB	50		;HEAD LOAD DELAY
    20                          ;RWMAX:		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    21                          ;		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    22                          
    23                          DRVTAB:		equ	glbvars		;HEAD POSITIONS FOR 4 DRIVES
    24                          					;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    25                          RATES:		equ	DRVTAB+8	;SETTLING DELAYS / STEP RATES TABLE
    26                          UNIT:		equ	RATES+4		;CURRENTLY SELECTED DISK#
    27                          TRACK:		equ	UNIT+1		;TRACK POSITION OF SELECTED DRIVE
    28                          DRVOFF:		equ	TRACK+1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    29                          OUTCPY:		equ 	DRVOFF+1	;COPY OF DISK CONTROL LATCH
    30                          PERIOD:		equ	OUTCPY+1	;DISK SPIN PERIOD
    31                          HLDTIM:		equ	PERIOD+2	;HEAD LOAD DELAY
    32                          RWMAX:		equ	HLDTIM+1	;MAX NUMBER OF READ/WRITE RETRIES
    33                          EXPANSION	equ	RWMAX+1		;ROOM FOR EXPANSION
    34                          ;
    35                          ;
    36                          ;	... GLOBAL VARIABLES FOR ATARI HANDLER ...
    37                          ;
    38                          ;IDPTR:		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    39                          ;FSMVEC:	DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    40                          ;EXTVEC:	DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    41                          ;NEWLIN:	DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    42                          ;PSMSG:		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    43                          ;PMASKS:	DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    44                          ;		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    45                          ;FMTPTR:	DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    46                          ;PBASE:		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    47                          ;PSIZE:		DEFW	4095		;MAX BUFFER INDEX OFFSET
    48                          ;
    49                          ;glbsize	equ	$-glbvars		;length of initialized variables
    50                          ;        DEFB    73h			; **** Exists in original ROM? ****
    51                          IDPTR:		equ	EXPANSION+4	;POINTER TO DEVICE ID TABLE
    52                          FSMVEC:		equ 	IDPTR+2		;POINTER FOR ATARI TASK STATE MACHINE
    53                          EXTVEC:		equ	FSMVEC+2	;POINTER FOR EXTRA TASK PROCESSOR
    54                          NEWLIN:		equ	EXTVEC+2	;PRINTER NEWLINE CHARACTERS
    55                          PSMSG:		equ	NEWLIN+5	;PRINTER STATUS FRAME
    56                          PMASKS:		equ	PSMSG+4		;MASK ALL BITS BUT 'BUSY'
    57                          					;COMPARE TO ZERO FOR READY
    58                          FMTPTR:		equ	PMASKS+2	;POINTER TO STANDARD FORMAT TABLES
    59                          PBASE:		equ	FMTPTR+2	;PUT PRINT BUFFER AFTER HERE
    60                          PSIZE:		equ	PBASE+2		;MAX BUFFER INDEX OFFSET
    61                          
    62                          glbsize		equ	$-glbvars	;length of initialized variables
    63                          ;
    64                          ;
    65                          ;	*** UNINITIALIZED SCRATCH VARIABLES COME AFTER HERE ***
    66                          ;
    67                          PCOUNT:		EQU 	PSIZE+2		;BYTECOUNT FOR BUFFER
    68                          PINP:		EQU 	PCOUNT+2	;INPUT OFFSET
    69                          POUT:		EQU 	PINP+2		;OUTPUT OFFSET
    70                          CMDFLG:		EQU 	POUT+2		;COMMAND FRAME READY FLAG FROM IRQ
    71                          DMATRIX:	EQU 	CMDFLG+1    	;DRIVE POOP TABLES
    72                          OLDPTR:		EQU 	DMATRIX+64	;POINTER TO FIRST DRIVE ACCESSED
    73                          DKIOCB:		EQU 	OLDPTR+2	;DISK I/O COMMAND BLOCK
    74                          DRWCMD:		EQU 	DKIOCB+16	;R/W COMMAND FROM ATARI TO 'DISKIO'
    75                          LOGSIZ:		EQU 	DRWCMD+1	;LOGICAL SECTOR LENGTH FOR XFER
    76                          IDBUF:		EQU	LOGSIZ+2	;BUFFER FOR ID MARK READS
    77                          IOPTR:		EQU 	IDBUF+8		;ATARI BLOCK INPUT POINTER
    78                          VFLAG:		EQU 	IOPTR+2		;VERIFY FLAG FOR DISK WRITES
    79                          
    80                          ;
    81                          ;
    82                          ;	... VARIABLES FOR DISK FORMAT FUNCTION ...
    83                          ;
    84                          FMTSTUFF	EQU	VFLAG+1
    85                          FRMPTR:		EQU 	VFLAG+1			;POINTER TO FORMAT DATA TABLE
    86                          SKWPTR:		EQU 	FRMPTR+2		;POINTER TO SKEW TABLE
    87                          NSECTS:		EQU 	SKWPTR+2		;NUMBER OF SECTORS
    88                          TRKSIZ:		EQU 	NSECTS+1		;TRACK LENGTH IN BYTES
    89                          FMTLEN		EQU	(TRKSIZ+2)-FMTSTUFF
    90                          
    91                          sides:		EQU 	TRKSIZ+2		;copy of 'nsides' for drive#
    92                          tracks:		EQU 	sides+1			;copy of 'ntrks' for drive#
    93                          SEQNUM:		EQU 	tracks+1		;TEMP SECTOR SEQUENCE NUMBER
    94                          SEQPTR:		EQU 	SEQNUM+2		;TEMP ERROR LOG TABLE POINTER
    95                          TRKPTR:		EQU 	SEQPTR+2		;POINTER TO START OF TRACK IMAGE
    96                          
    97                          ;
    98                          ;	... LOCAL VARIABLES FOR DISK HANDLER ...
    99                          ;
   100                          CMDBYT:		EQU 	TRKPTR+2		;COMMAND BYTE FOR READS/WRITES
   101                          RWTRY:		EQU	CMDBYT+1		;READ/WRITE RETRY COUNT
   102                          TICKS:		EQU	RWTRY+1			;FREE RUNNING MILISECOND COUNTER
   103                          DRVTMR:		EQU	TICKS+2			;DISK ACTIVITY TIMER
   104                          ;
   105                          ;
   106                          ;
   107                          ;
   108                          IOBUFF		EQU	0C100H			;ATARI I/O BUFFER
   109                          LEN		EQU	512
   110                          ;
   111                          ;TRKBUF		EQU	IOBUFF+LEN		;TRACK BUFFER FOR READS
   112                          ;
   113                          
   114                          ;
   115                          ;
   116                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
   117                          ;
   118                          NTRKS	EQU	0		;NUMBER OF TRACKS
   119                          STEPRT	EQU	1		;STEP RATE
   120                          NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
   121                          NSIDES	EQU	4		;NUMBER OF SIDES
   122                          MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
   123                          SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
   124                          DSKBITS	EQU	8		;MISC NAUGHTY BITS
   125                          SPARE0	EQU	9
   126                          SPARE1	EQU	10
   127                          SPARE2	EQU	11
   128                          
   129                          CMDSTS	EQU	12		;COMMAND STATUS
   130                          HDWSTS	EQU	13		;HARDWARE STATUS
   131                          
   132                          FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
   133                          SPARE3	EQU	15
   134                          ;
   135                          ;
   136                          ;	EQUATES FOR BITS IN 'MEDIA' BYTE
   137                          ;
   138                          SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
   139                          DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
   140                          ;
   141                          ;
   142                          ;	EQUATES FOR BITS IN 'DSKBITS' BYTE
   143                          ;
   144                          PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
   145                          ;
   146                          ;
   147                          ;	EQUATES FOR BITS IN 'CMDSTS' BYTE
   148                          ;
   149                          BADCMD	EQU	0		;BAD COMMAND FRAME BIT
   150                          BADDAT	EQU	1		;BAD DATA FRAME BIT
   151                          BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
   152                          WRPROT	EQU	3		;WRITE PROTECTED BIT
   153                          ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
   154                          SEC256	EQU	5		;LONG/SHORT SECTOR BIT
   155                          ;
   156                          ;
   157                          ;	EQUATES FOR BITS IN 'FLAGS' BYTE
   158                          ;
   159                          FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
   160                          CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
   161                          
rolli-0000.asm:
    73                          
    74                          ;--------------------------------------------------
    75                          ; Code executed after Reset
    76                          ;--------------------------------------------------
    77                          		ORG	00000h
    78                          ;
    79   000000 f3              reset:		di      				;disable interrupt
    80   000001 af              		xor     a				;set a to zero
    81   000002 3d              restime:	dec     a				;do 256 times nothing
    82   000003 20fd            		jr      nz, restime			;loop
    83                          
    84   000005 219504          		ld      hl, portval			;init 11 ports with values at 0a3h
    85   000008 060b            		ld      b, 0bh
    86   00000a 4e              portinit:	ld      c, (hl)
    87   00000b 23              		inc     hl
    88   00000c eda3            		outi
    89   00000e 20fa            		jr      nz, portinit			; loop
    90                          
    91                          
    92   000010 2100f0          		ld      hl,0f000h          		;test ram @F000-FFFF
    93   000013 3e01            		ld      a, 01h             		;write 1,2,4,8,16,32,64,128
    94   000015 0610            testram2:	ld      b, 10h
    95   000017 77              testram:	ld      (hl),a
    96   000018 07              		rlca
    97   000019 2c              		inc     l
    98   00001a 20fb            		jr      nz, testram
    99   00001c 24              		inc     h
   100   00001d 10f8            		djnz    testram
   101                          
   102   00001f 0e10            		ld      c, 10h
   103   000021 2b              testram1:	dec     hl
   104   000022 0f              		rrca
   105   000023 be              		cp      (hl)
   106   000024 20fe            ramerr:		jr      nz, ramerr			;if error, loop forever
   107   000026 10f9            		djnz    testram1
   108   000028 0d              		dec     c
   109   000029 20f6            		jr      nz, testram1
   110   00002b 87              		add     a, a
   111   00002c 20e7            		jr      nz, testram2
   112                          
   113   00002e 21ab04          		ld      hl, sallycode			;copy BIOS 0f000h
   114   000031 1100f0          		ld      de, 0f000h			;length always 0f00h
   115   000034 01000f          		ld      bc, 00f00h
   116   000037 edb0            		ldir
   117   000039 21a713          		ld      hl, sallycode+0efch		;copy initial values to 0ff20h
   118   00003c 1120ff          		ld      de, 0ff20h			;length $2F
   119   00003f 012f00          		ld      bc, 002fh
   120   000042 edb0            		ldir
   121                          
   122   000044 af              		xor     a				;fill up to $FFFF with zeros
   123   000045 12              ramfill:	ld      (de),a
   124   000046 1c              		inc     e
   125   000047 20fc            		jr      nz, ramfill
   126                          
   127   000049 3110ff          		ld      sp, 0ff10h			;stack-pointer to 0ff10h
   128                          
   129   00004c 3eff            		ld      a, 0ffh				;load interrupt-vector register
   130   00004e ed47            		ld      i, a				;with 0ffh
   131   000050 ed5e            		im      2				;enable interrupt mode 2 (vectored)
   132                          
   133                          ;--------------------------------------------------
   134                          ; step 5 times in and then out to trk00
   135                          ; set bit 6 for each online floppy in ff5eh
   136                          ; percom block (16 bytes, byte 8 bit 6)
   137                          ;--------------------------------------------------
   138   000052 3e4f            		ld      a, 4fh				;select drive 1-4, Motor off, side 0, B/S=1, DD
   139   000054 d330            		out     (LATCH),a
   140                          
   141   000056 57              		ld      d, a				;d = 4fh
   142   000057 0605            		ld      b, 5				;step 5 times
   143                          stepin:
   144   000059 3e49            		ld      a, 49h				;4b = 0100 1011 = step-in
   145   00005b cd8704          		call    CMDOUT				;write A to FDC command and wait
   146   00005e 10f9            		djnz    stepin
   147                          
   148   000060 0664            		ld      b, 64h				;seek track 00 for all 4 drives
   149   000062 7a              outloop1:	ld      a, d				;select all drives
   150   000063 d330            		out     (LATCH),a
   151   000065 e3              		ex      (sp),hl				;???
   152   000066 e3              		ex      (sp),hl				;???
   153   000067 3e69            		ld      a, 69h				;step out
   154   000069 cd8704          		call    CMDOUT				;write A to FDC command and wait
   155                          
   156   00006c 1e01            		ld      e, 01h
   157   00006e 7b              outloop:	ld      a, e
   158   00006f f640            		or      40h
   159   000071 d330            		out     (LATCH), a			;select one drive
   160   000073 e3              		ex      (sp), hl
   161   000074 e3              		ex      (sp), hl
   162                          ;		call    0f391h				;stop command, get status
   163   000075 db40            		in	a, (STSREG)
   164   000077 cb57            		bit     2, a
   165   000079 2804            		jr      z, excldrv			;bit not set, not at track 00
   166   00007b 7b              		ld      a, e				;drive at track 00
   167   00007c 2f              		cpl     				;exclude drive from seeking
   168   00007d a2              		and     d
   169   00007e 57              		ld      d, a
   170                          excldrv:
   171   00007f cb23            		sla     e
   172   000081 cb63            		bit     4, e
   173   000083 28e9            		jr      z, outloop			;status checked for all 4 drives?
   174   000085 10db            		djnz    outloop1			;step out again
   175                          
   176                          ;		call    0f068h				;deselect floppies and seek current track?
   177   000087 3e50            		ld	a, 50h				;reset FDC and deselct
   178   000089 d330            		out	(LATCH), a
   179   00008b 3e40            		ld	a, 40h				;reset FDC and deselct
   180   00008d d330            		out	(LATCH), a
   181                          
   182   00008f 215eff          		ld      hl, 0ff5eh			;set bit for each connected floppy?
   183   000092 011000          		ld      bc, 0010h
   184   000095 3e04            		ld      a, 04h
   185   000097 cb1a            nextdrv:	rr      d
   186   000099 3802            		jr      c, noset
   187   00009b cbf6            		set     6, (hl)
   188   00009d 09              noset:		add     hl, bc
   189   00009e 3d              		dec     a
   190   00009f 20f6            		jr      nz, nextdrv
   191                          
   192                          
   193   0000a1 210000          		ld	hl, 00000h			; source
   194   0000a4 110080          		ld	de, 08000h			; dest
   195   0000a7 010020          		ld	bc, 02000h
   196   0000aa edb0            		ldir
   197   0000ac 21b200          		ld	hl, code8000
   198   0000af cbfc            		set	7, h
   199   0000b1 e9              		jp	(hl)
   200   0000b2 3e01            code8000:	ld	a, 1
   201   0000b4 d352            		out	(BANKSW), a
   202   0000b6 210080          		ld	hl, 08000h
   203   0000b9 110000          		ld	de, 00000h
   204   0000bc 010020          		ld	bc, 02000h
   205   0000bf edb0            		ldir
   206   0000c1 c3c400          		jp	code0000
   207                          
   208                          code0000:
   209   0000c4 3100c1          		ld      sp, 0c100h			;set stack to 0c100h
   210                          
   211                          main:
   212                          ;--------------------------------------------------
   213                          ; firmware patch
   214                          ;--------------------------------------------------
   215   0000c7 21ffff          		ld	hl, 0ffffh			;reset drive / track buffer
   216   0000ca 22ca02          		ld	(drive), hl
   217                          
   218   0000cd 213ff8          		ld	hl, DISKTAB+2
   219   0000d0 117303          		ld	de, disktab+3
   220   0000d3 011500          		ld	bc, 3*7
   221   0000d6 edb0            		ldir
   222                          
   223   0000d8 210800          		ld	hl, 8
   224   0000db 227003          		ld	(disktab),hl
   225   0000de 3e3f            		ld	a, '?'
   226   0000e0 327203          		ld	(disktab+2), a
   227   0000e3 eb              		ex	de, hl
   228                          
   229   0000e4 3edf            		ld	a, getspeed & 255
   230   0000e6 77              		ld	(hl), a
   231   0000e7 23              		inc	hl
   232   0000e8 3e02            		ld	a, getspeed / 256
   233   0000ea 77              		ld	(hl), a
   234                          
   235   0000eb 217003          		ld	hl, disktab
   236   0000ee 222bf8          		ld	(DISKID), hl
   237   0000f1 222df8          		ld	(DISKID+2), hl
   238   0000f4 222ff8          		ld	(DISKID+4), hl
   239   0000f7 2231f8          		ld	(DISKID+6), hl
   240                          
   241   0000fa 3e28            		ld	a, SIONORMAL
   242   0000fc 329003          		ld	(pokeydiv), a
   243                          
   244   0000ff 3ec3            		ld	a, 0c3h				;'JP' instruction
   245   000101 3284f6          		ld	(XMITBUF), a
   246   000104 32d9f6          		ld	(RXBLOCK), a
   247   000107 32e2f7          		ld	(CMDWAIT), a
   248   00010a 327ef7          		ld	(LOGON), a
   249                          
   250   00010d 210e03          		ld	hl, xmitbuf
   251   000110 2285f6          		ld	(XMITBUF+1), hl
   252   000113 215903          		ld	hl, rxblock
   253   000116 22daf6          		ld	(RXBLOCK+1), hl
   254   000119 21f502          		ld	hl, cmdwait
   255   00011c 22e3f7          		ld	(CMDWAIT+1), hl
   256   00011f 213802          		ld	hl, diskread
   257   000122 22d5f9          		ld	(DISKREAD+1), hl
   258   000125 21df01          		ld	hl, diskwrite
   259   000128 2249f9          		ld	(DISKWRITE+1), hl
   260   00012b 213401          		ld	hl, logon
   261   00012e 227ff7          		ld	(LOGON+1), hl
   262   000131 c362f7          		jp	EMULATOR
   263                          
   264                          
   265   000134 3233ff          logon:		LD	(RWMAX),A			;DO LESS RETRIES IN ATARI MODE
   266                          
   267   000137 3ec3            		ld	a, 0c3h				;'JP' instruction
   268   000139 325df1          		ld	(SPIN), a
   269   00013c 217f01          		ld	hl, spin
   270   00013f 225ef1          		ld	(SPIN+1), hl
   271                          
   272                          ;		ld	hl, getparams
   273                          ;		ld	(GETPARAMS+1), hl
   274   000142 c381f7          		jp	LOGON+3
   275                          
   276                          
   277   000145 3e4e            getparams:	ld	a, 'N'
   278   000147 cd4a04          		call	serout
   279   00014a 3afbc2          		ld	a, (CFRAME)
   280   00014d cd4a04          		call	serout
   281   000150 cd1f04          		call	sercr
   282   000153 c328fc          		jp	0fc28h
   283                          
   284                          
   285                          
   286                          
   287   000156 3e4f            putparams:	ld	a, 'O'
   288   000158 cd4a04          		call	serout
   289   00015b e5              		push	hl
   290   00015c fde5            		push	iy
   291   00015e e1              		pop	hl
   292   00015f c5              		push	bc
   293                          
   294   000160 3afbc2          		ld	a, (CFRAME)
   295   000163 cd4a04          		call	serout
   296   000166 cd1704          		call	serspace
   297   000169 060c            		ld	b, 12
   298   00016b 7e              putparams2:	ld	a, (hl)
   299   00016c cd3104          		call	serhex
   300   00016f cd1704          		call	serspace
   301   000172 23              		inc	hl
   302   000173 10f6            		djnz	putparams2
   303   000175 c1              		pop	bc
   304   000176 e1              		pop	hl
   305   000177 cd1f04          putparams1:	call	sercr
   306   00017a edb0            		ldir
   307   00017c c354fc          		jp	0fc54h
   308                          ;
   309                          ;
   310                          ;
   311   00017f cb70            spin:		bit	6, b
   312   000181 284d            		jr	z, spin1
   313                          
   314   000183 c5              		push	bc
   315   000184 d5              		push	de
   316   000185 e5              		push	hl
   317   000186 dde5            		push	ix
   318                          
   319   000188 78              		ld	a, b
   320                          ;		call	serhex
   321                          
   322   000189 cbb7            		res	6, a
   323   00018b d330            		out	(LATCH), a
   324                          
   325   00018d dde5            		push	ix				;load hl with ix
   326   00018f e1              		pop	hl
   327   000190 11d602          		ld	de, dcb
   328   000193 010900          		ld	bc, 9
   329   000196 edb0            		ldir					;copy dcb
   330                          
   331   000198 dd21d602        spin3:		ld	ix, dcb
   332   00019c 21d601          		ld	hl, id
   333   00019f 22da02          		ld	(dcb + DSKPTR), hl
   334   0001a2 210600          		ld	hl, 6
   335   0001a5 22dc02          		ld	(dcb + DSKAUX), hl
   336   0001a8 3ec0            		ld	a, RIDCMD
   337   0001aa 32d602          		ld	(dcb + DSKOP), a
   338   0001ad 32c5ff          		ld	(CMDBYT), a
   339   0001b0 3e18            		ld	a, 018h
   340   0001b2 32f6f0          		ld	(0f0f6h), a
   341   0001b5 cdc5f0          		call	0f0c5h				;DISK3: READ 6 BYTE ID RECORD
   342   0001b8 cdc5f0          		call	0f0c5h				;DISK3: READ 6 BYTE ID RECORD
   343   0001bb cdc5f0          		call	0f0c5h				;DISK3: READ 6 BYTE ID RECORD
   344   0001be 3e28            		ld	a, 028h
   345   0001c0 32f6f0          		ld	(0f0f6h), a
   346                          
   347                          ;		ld	b, 6
   348                          ;		ld	hl, id
   349                          ;spin2:	ld	a, (hl)
   350                          ;		call	serhex
   351                          ;		inc	hl
   352                          ;		djnz	spin2
   353                          ;		call	sercr
   354                          ;		jp	spin3
   355                          
   356   0001c3 dde1            		pop	ix
   357   0001c5 e1              		pop	hl
   358   0001c6 d1              		pop	de
   359   0001c7 c1              		pop	bc
   360                          
   361   0001c8 3ade02          		ld	a, (dcb + DSKSTS)
   362                          ;		call	serhex
   363   0001cb b7              		or	a
   364   0001cc 2002            		jr	nz, spin1
   365   0001ce cbb0            		res	6, b
   366                          spin1:
   367   0001d0 78              		ld	a, b
   368                          ;		call	serhex
   369                          ;		call	sercr
   370   0001d1 1600            		ld	d, 0
   371   0001d3 c360f1          		jp	0f160h
   372                          
   373   0001d6 000000000000    id:		dw	0, 0, 0
   374                          
   375                          ;		ld	a, (IX+DSKSTS)
   376                          ;		call	serhex
   377                          ;		ld	a, (IX+DSKPTR+1)
   378                          ;		call	serhex
   379                          ;		ld	a, (IX+DSKPTR)
   380                          ;		call	serhex
   381   0001dc c38403          		jp	0f0384h
   382                          
   383                          ;--------------------------------------------------
   384                          ; diskwrite: write through sector
   385                          ;--------------------------------------------------
   386                          diskwrite:
   387                          ;		ld	a, 'W'
   388                          ;		call	debug
   389                          
   390                          ;		jp	DISKV
   391                          
   392   0001df cdbd02          		call	checktrack
   393   0001e2 2010            		jr	nz, diskwrite1
   394                          
   395   0001e4 cda802          		call	compbufadr
   396   0001e7 eb              		ex	de, hl
   397   0001e8 dd6605          		ld	h, (ix + DSKPTR+1)
   398   0001eb dd6e04          		ld	l, (ix + DSKPTR)
   399   0001ee ed4ba9ff        		ld	bc, (LOGSIZ)
   400   0001f2 edb0            		ldir
   401                          
   402   0001f4 c30ff0          diskwrite1:	jp	DISKV
   403                          
   404                          
   405   0001f7 cd4a04          debug:		call	serout
   406   0001fa dd7e01          		ld	a, (ix + DSKDRV)
   407   0001fd cd3104          		call	serhex
   408   000200 3e74            		ld	a, 't'
   409   000202 cd4a04          		call	serout
   410   000205 dd7e02          		ld	a, (ix + DSKTRK)
   411   000208 cd3104          		call	serhex
   412   00020b 3e73            		ld	a, 's'
   413   00020d cd4a04          		call	serout
   414   000210 dd7e03          		ld	a, (ix + DSKSEC)
   415   000213 cd3104          		call	serhex
   416                          
   417   000216 cd1704          		call	serspace
   418   000219 3afec2          		ld	a, (CFRAME+3)
   419   00021c cd3104          		call	serhex
   420   00021f 3afdc2          		ld	a, (CFRAME+2)
   421   000222 cd3104          		call	serhex
   422   000225 cd1704          		call	serspace
   423   000228 fd7e03          		ld	a, (IY+NSECS+1)
   424   00022b cd3104          		call	serhex
   425   00022e fd7e00          		ld	a, (iy+NTRKS)
   426   000231 cd3104          		call	serhex
   427                          
   428   000234 cd1f04          		call	sercr
   429   000237 c9              		ret
   430                          ;--------------------------------------------------
   431                          ; diskread: cache a track
   432                          ;--------------------------------------------------
   433                          diskread:
   434                          ;		ld	a, 'R'
   435                          ;		call	debug
   436                          
   437   000238 cdbd02          		call	checktrack
   438   00023b 284c            		jr	z, match
   439                          
   440   00023d ed53ca02        		ld	(drive), de			;save new drive and track
   441   000241 dde5            		push	ix				;save ix
   442                          
   443   000243 dde5            		push	ix				;load hl with ix
   444   000245 e1              		pop	hl
   445   000246 11d602          		ld	de, dcb
   446   000249 010900          		ld	bc, 9
   447   00024c edb0            		ldir					;copy dcb
   448                          
   449   00024e 0600            		ld	b, 0				;compute skew-list from media type
   450   000250 fd4e05          		ld	c, (iy + MEDIA)
   451   000253 21ce02          		ld	hl, skewtab
   452   000256 09              		add	hl, bc
   453   000257 7e              		ld	a, (hl)
   454   000258 23              		inc	hl
   455   000259 66              		ld	h, (hl)
   456   00025a 6f              		ld	l, a
   457   00025b 22cc02          		ld	(secptr), hl
   458                          
   459   00025e dd21d602        		ld	ix, dcb				;load ix with new dcb
   460   000262 fd4603          		ld	b, (iy + NSECS+1)
   461                          
   462   000265 2acc02          readtrack:	ld	hl, (secptr)
   463   000268 7e              		ld	a, (hl)
   464   000269 32d902          		ld	(dcb + DSKSEC), a
   465   00026c 23              		inc	hl
   466   00026d 22cc02          		ld	(secptr), hl
   467                          
   468   000270 c5              		push	bc
   469   000271 cda802          		call	compbufadr
   470   000274 22da02          		ld	(dcb + DSKPTR), hl
   471                          
   472   000277 cd0ff0          		call	DISKV
   473                          
   474   00027a c1              		pop	bc
   475   00027b 3ade02          		ld	a, (dcb + DSKSTS)		;error occured?
   476   00027e b7              		or	a
   477   00027f 2804            		jr	z, readtrack6			;no
   478   000281 dde1            		pop	ix				;yes, store in original dcb
   479   000283 1814            		jr	match2
   480   000285 10de            readtrack6:	djnz	readtrack
   481   000287 dde1            		pop	ix
   482                          
   483   000289 cda802          match:		call	compbufadr
   484   00028c dd5605          		ld	d, (ix + DSKPTR+1)
   485   00028f dd5e04          		ld	e, (ix + DSKPTR)
   486   000292 ed4ba9ff        		ld	bc, (LOGSIZ)
   487   000296 edb0            		ldir
   488                          
   489   000298 af              		xor	a
   490   000299 dd7708          match2:		ld	(ix + DSKSTS), a
   491                          
   492   00029c db43            		in	a, (DATREG)				;keeps motor spinning
   493   00029e d341            		out	(TRKREG), a
   494   0002a0 3e10            		ld	a, SKCMD
   495   0002a2 cd8704          		call	CMDOUT
   496                          
   497   0002a5 c33cf0          		jp	ACTIVON
   498                          
   499                          
   500                          
   501   0002a8 210008          compbufadr:	ld	hl, TRKBUF
   502   0002ab dd4603          		ld	b, (ix + DSKSEC)
   503   0002ae 05              		dec	b
   504   0002af 0e00            		ld	c, 0
   505   0002b1 3adc02          		ld	a, (dcb + DSKAUX)
   506   0002b4 b7              		or	a
   507   0002b5 2804            		jr	z, compbufadr1
   508   0002b7 cb38            		srl	b
   509   0002b9 cb19            		rr	c
   510   0002bb 09              compbufadr1:	add	hl, bc
   511   0002bc c9              		ret
   512                          
   513   0002bd 2aca02          checktrack:	ld	hl, (drive)
   514   0002c0 dd5602          		ld	d, (ix + DSKTRK)		;high
   515   0002c3 dd5e01          		ld	e, (ix + DSKDRV)		;low
   516   0002c6 b7              		or	a				;clear carry
   517   0002c7 ed52            		sbc	hl, de
   518   0002c9 c9              		ret
   519                          
   520   0002ca ff              drive:		db	255
   521   0002cb ff              track:		db	255
   522   0002cc 0000            secptr:		dw	0
   523                          
   524                          SKEWSD		equ	0fe56h
   525                          SKEW13		equ	0fec8h
   526                          SKEWDD		equ	0fe68h
   527                          SKEW17		equ	0fee2h
   528                          
   529   0002ce 56fe            skewtab:	dw	SKEWSD
   530   0002d0 c8fe            		dw	SKEW13
   531   0002d2 68fe            		dw	SKEWDD
   532   0002d4 e2fe            		dw	SKEW17
   533                          ;
   534                          ;
   535                          ;
   536   0002d6 00              dcb:		db	0				;DISK OPERATION CODE
   537   0002d7 00              		db	0				;DRIVE# (WITH SIDE# IN BIT 7)
   538   0002d8 00              		db	0				;TRACK#
   539   0002d9 00              		db	0				;SECTOR#
   540   0002da 0000            		dw	0				;READ/WRITE POINTER
   541   0002dc 0000            		dw	0				;AUXILLIARY PARAMETERS (2 BYTES)
   542   0002de 00              		db	0				;OPERATION COMPLETION STATUS
   543                          
   544                          ;--------------------------------------------------
   545                          ; get Pokeydivisor command '?'
   546                          ;--------------------------------------------------
   547                          getspeed:
   548                          ;		ld	a, '?'
   549                          ;		call	serout
   550                          
   551   0002df cd28fc          		call	DRVINDEX			;POINT IY TO DRIVE'S DATA AREA
   552   0002e2 d8              		ret	C				;EXIT IF NOT A DRIVE IN OUR BOX
   553                          
   554                          ;		call	HASPARMS
   555                          ;		ret	Z				;EXIT IF DISK PARAMS NOT KNOWN
   556                          
   557   0002e3 cd4afc          		call	SENDACK				;SEND 'ACK' FOR COMMAND FRAME
   558                          
   559   0002e6 21ffc2          		ld	hl, IOBUFF+LEN-1
   560   0002e9 3608            		ld	(hl), SIOFAST
   561   0002eb 114300          		ld	de, 'C'
   562   0002ee cd6cf6          		call	SENDBUFF			;SEND 'C' AND PARAMS DATA FRAME
   563   0002f1 c9              		ret
   564   0002f2 c39103          		jp	togglebaud
   565                          
   566                          
   567                          
   568                          ;--------------------------------------------------
   569                          ; cmdwait
   570                          ;--------------------------------------------------
   571   0002f5 3a55ff          cmdwait:	ld	a, (CMDFLG)
   572   0002f8 b7                              or	a				;SEE IF COMMAND FRAME HAS ARRIVED
   573   0002f9 c8                              ret	z				;EXIT IF NOTHING HAS HAPPENED
   574                          
   575                          ;		call	sercmd				;5-byte command frame
   576                          
   577   0002fa 3a55ff          		ld	a, (CMDFLG)
   578                          ;		call	serhex
   579   0002fd fe01                            cp	1
   580                          
   581   0002ff f3              		di					;ELSE RESET INTERRUPT AND START AGAIN
   582   000300 3e03                            ld	a, 00000011B
   583   000302 d380                            out	(CTC0),A
   584   000304 fb                              ei
   585                          
   586   000305 caf3f7                          jp	z, 0f7f3h			;good cmd-frame
   587                          
   588   000308 cd9103          		call	togglebaud
   589   00030b c309f8          		jp	0f809h
   590                          
   591                          
   592                          
   593                          ;--------------------------------------------------
   594                          ; xmitbuf
   595                          ;--------------------------------------------------
   596                          xmitbuf:
   597   00030e f3              		di
   598   00030f 3a9003          		ld	a, (pokeydiv)			;is fast?
   599   000312 fe28            		cp	SIONORMAL
   600   000314 2006            		jr	nz, xmitfast			;yes, jump
   601   000316 0115f7          		ld	bc, 0f715h
   602   000319 c388f6          		jp	XMITBUF+4
   603                          
   604                          xmitfast:
   605   00031c 3e07            		ld	a, 00000111B			;CTC1 4uS pulses (4Mhz / 1*16)
   606   00031e d381            		out	(CTC1), a
   607   000320 3e01            		ld	a, 1
   608   000322 d381            		out	(CTC1), a
   609                          
   610   000324 7e              xmitfast1:	ld	a, (hl)				;7
   611   000325 23              		inc	hl				;6
   612   000326 aa              		xor	d				;4
   613   000327 4f              		ld	c, a				;4
   614   000328 83              		add	a, e				;4
   615   000329 ce00            		adc	0				;7
   616   00032b 5f              		ld	e, a				;4
   617   00032c cd3a03          		call	fastsend			;17 send byte in c
   618   00032f 7c              		ld	a, h				;4
   619   000330 fec3            		cp	iobuflenhi			;7
   620   000332 38f0            		jr	c, xmitfast1			;12/7 loop if buffer end not reached
   621                          
   622   000334 3e03            		ld	a, 00000011B
   623   000336 d381            		out	(CTC1), a
   624   000338 fb              		ei
   625   000339 c9              		ret
   626                          
   627   00033a af              fastsend:	xor	a
   628   00033b d350            		out	(ATROUT), a
   629                          
   630   00033d dde5            		push	ix				;15
   631   00033f dde1            		pop	ix				;14
   632   000341 79              		ld	a, c				;4
   633   000342 0608            		ld	b, 8				;7
   634   000344 03              		inc	bc				;6
   635   000345 00              		nop					;4
   636                          
   637   000346 00              fastsend1:	nop					;4
   638   000347 fe01            		cp	1				;7
   639   000349 d350            		out	(ATROUT), a			;11
   640   00034b 0f              		rrca					;4
   641   00034c dde5            		push	ix				;15
   642   00034e dde1            		pop	ix				;14
   643   000350 10f4            		djnz	fastsend1			;13 / 8
   644                          
   645   000352 ed5f            		ld	a, r				;9
   646   000354 3e01            		ld	a, 1				;7
   647   000356 d350            		out	(ATROUT), a			;11
   648   000358 c9              		ret					;10
   649                          
   650                          ;--------------------------------------------------
   651                          ; rxblock
   652                          ;--------------------------------------------------
   653   000359 3a9003          rxblock:	ld	a, (pokeydiv)			;is fast?
   654   00035c fe28            		cp	SIONORMAL
   655   00035e ca6a03          		jp	z, rxblock1
   656                          
   657   000361 cdb103          		call	fastrecv			;yes, fast speed
   658   000364 3e03            		ld	a, 00000011B			;reset timer
   659   000366 d383            		out	(CTC3), a
   660   000368 4a              		ld	c, d				;checksum in c
   661   000369 c9              		ret
   662                          
   663   00036a 010000          rxblock1:	ld	bc, 0				;no, normal speed
   664   00036d c307f7          		jp	0f707h
   665                          
   666                          ;
   667                          ; 32 bytes for disktab
   668                          ;
   669   000370 0000000000000000disktab:	dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
   670   000380 0000000000000000		dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
   671                          
   672   000390 28              pokeydiv:	db	SIONORMAL
   673                          
   674                          ;--------------------------------------------------
   675                          ; togglebaud
   676                          ;--------------------------------------------------
   677   000391 3a9003          togglebaud:	ld	a, (pokeydiv)
   678   000394 fe28            		cp	SIONORMAL
   679   000396 3e08            		ld	a, SIOFAST
   680   000398 2802            		jr	z, togglebaud1
   681   00039a 3e28            		ld	a, SIONORMAL
   682   00039c 329003          togglebaud1:	ld	(pokeydiv), a
   683   00039f c9              		ret
   684                          ;		push	af
   685                          ;		ld	a, 'B'
   686                          ;		call	serout
   687                          ;		pop	af
   688                          ;		call	serhex
   689                          ;		jp	sercr
   690                          
   691                          
   692                          
   693                          
   694   0003a0 2100c1          clear:		ld	hl, IOBUFF
   695   0003a3 af              clear1:		xor	a
   696   0003a4 77              		ld	(hl), a
   697   0003a5 23              		inc	hl
   698   0003a6 7c              		ld	a, h
   699   0003a7 fec3            		cp 	iobuflenhi
   700   0003a9 20f8            		jr	nz, clear1
   701   0003ab c9              		ret
   702                          
   703                          
   704                          
   705                          
   706                          ;--------------------------------------------------
   707                          ; set 4ms watchdog
   708                          ;--------------------------------------------------
   709   0003ac f1              irq4ms:		pop	af				;pop irq-addr
   710   0003ad b7              		or	a				;clear carry
   711   0003ae fb              irq4ms1:	ei
   712   0003af ed4d            		reti
   713                          
   714                          ;--------------------------------------------------
   715                          ; SIO receive 57600 baud
   716                          ;--------------------------------------------------
   717                          fastrecv:
   718   0003b1 f3              		di
   719   0003b2 01ac03          		ld	bc, irq4ms
   720   0003b5 ed4316ff        		ld	(CTCVEC+6),bc			;SET VECTOR TO irq4ms ROUTINE
   721   0003b9 018300          		ld	bc, CTC3			;clear b, load c with CTC3
   722   0003bc 11a700          		ld	de, 10100111B			;clear d, load e with a7h
   723   0003bf ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
   724   0003c1 ed49            		out	(c), c
   725   0003c3 fb              		ei
   726                          
   727   0003c4 db70            fastrecv1:	in	a, (ATARI)			;11
   728   0003c6 17              		rla					;4
   729   0003c7 dac403          		jp	c, fastrecv1			;10	NEW BYTE IS COMING IF START BIT LOW
   730                          							;14-25 / 7
   731   0003ca 7a              		ld	a, d				;4
   732   0003cb 80              		add	a, b				;4
   733   0003cc ce00            		adc	a, 0				;7 ACCUMULATE CHECKSUM ATARI STYLE
   734   0003ce 57              		ld	d, a				;4
   735                          
   736   0003cf 067f            		ld	b, 07fh				;7
   737   0003d1 c3d603          		jp	fastrecv2a			;10 = 50
   738                          ;
   739                          ; SERIAL->PARALLEL CONVERSION AT 17,36 MICROSECONDS PER BIT
   740                          ;
   741   0003d4 f5              fastrecv2:	push	af				;11
   742   0003d5 f1              		pop	af				;10
   743   0003d6 7e              fastrecv2a:	ld	a, (hl)				;7
   744   0003d7 7e              		ld	a, (hl)				;7
   745                          
   746   0003d8 db70            		in	a, (ATARI)			;11 CYCLES
   747   0003da 17              		rla					; 4 CYCLES
   748   0003db cb18            		rr	b				; 8 CYCLES
   749   0003dd 38f5            		jr	c, fastrecv2			;12/7 = 70 / 65 cycles
   750                          
   751   0003df 70              		ld	(hl), b				;7 THEN STORE IN MEMORY BUFFER @HL
   752   0003e0 23              		inc	hl				;6
   753   0003e1 7c              		ld	a, h				;4
   754   0003e2 fec3            		cp	iobuflenhi			;7
   755   0003e4 3f              		ccf					;4
   756   0003e5 d8              		ret	c				;5 RETURN WITH CARRY SET IF BUFFER FILLED
   757                          
   758   0003e6 ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
   759   0003e8 ed49            		out	(c), c				;12 COUNT MOD 256
   760                          
   761   0003ea c3c403          		jp	fastrecv1			;10
   762                          
   763                          
   764   0003ed e5              serdumpcpl:	push	hl
   765   0003ee f5                              push	af
   766   0003ef c5                              push	bc
   767   0003f0 d5                              push	de
   768   0003f1 16ff            		ld	d, 255
   769   0003f3 180f            		jr	serdump1
   770                          
   771                          ;--------------------------------------------------
   772                          ; RS232 sercmd
   773                          ;--------------------------------------------------
   774   0003f5 e5              sercmd:		push	hl
   775   0003f6 21fbc2          		ld	hl, CFRAME
   776   0003f9 cd1f04          		call	sercr
   777   0003fc 1801            		jr	serdump2
   778                          
   779                          ;--------------------------------------------------
   780                          ; RS232 dump
   781                          ;--------------------------------------------------
   782   0003fe e5              serdump:	push	hl
   783   0003ff f5              serdump2:	push	af
   784   000400 c5              		push	bc
   785   000401 d5              		push	de
   786                          
   787   000402 1600            		ld	d, 0
   788                          
   789   000404 7e              serdump1:	ld	a, (hl)
   790   000405 aa              		xor 	d
   791   000406 cd3104          		call	serhex
   792   000409 cd1704          		call	serspace
   793   00040c 23              		inc	hl
   794   00040d 7c              		ld	a, h
   795   00040e fec3            		cp	a, 0c3h
   796   000410 38f2            		jr	c, serdump1
   797                          
   798   000412 d1              		pop	de
   799   000413 c1              		pop	bc
   800   000414 f1              		pop	af
   801   000415 e1              		pop	hl
   802   000416 c9              		ret
   803                          
   804                          ;--------------------------------------------------
   805                          ; RS232 <space>
   806                          ;--------------------------------------------------
   807   000417 f5              serspace:	push	af
   808   000418 3e20            		ld	a, ' '
   809   00041a cd4a04          		call	serout
   810   00041d f1              		pop	af
   811   00041e c9              		ret
   812                          
   813                          ;--------------------------------------------------
   814                          ; RS232 <CR>
   815                          ;--------------------------------------------------
   816   00041f f5              sercr:		push	af
   817   000420 3e0d            		ld	a, '\r'
   818   000422 cd4a04          		call	serout
   819   000425 f1              		pop	af
   820   000426 c9              		ret
   821                          
   822                          ;--------------------------------------------------
   823                          ; RS232 output HL in hex
   824                          ;--------------------------------------------------
   825   000427 7c              seraddr:	ld	a, h
   826   000428 cd3104          		call	serhex
   827   00042b 7d              		ld	a, l
   828   00042c cd3104          		call	serhex
   829   00042f 18e6            		jr	serspace
   830                          ;--------------------------------------------------
   831                          ; RS232 output A in hex
   832                          ;--------------------------------------------------
   833   000431 f5              serhex:		push	af
   834   000432 f5              		push	af
   835   000433 0f              		rrca
   836   000434 0f              		rrca
   837   000435 0f              		rrca
   838   000436 0f              		rrca
   839   000437 cd4004          		call	sernib
   840   00043a f1              		pop	af
   841   00043b cd4004          		call	sernib
   842   00043e f1              		pop	af
   843   00043f c9              		ret
   844                          
   845   000440 e60f            sernib:		and	0fh
   846   000442 c630            		add	'0'
   847   000444 fe3a            		cp	'9' + 1
   848   000446 3802            		jr	c, sernib1
   849   000448 c607            		add	7
   850                          sernib1:
   851                          ;--------------------------------------------------
   852                          ; RS232 out	208 T-States
   853                          ;--------------------------------------------------
   854                          serout:
   855   00044a f5              		push	af
   856   00044b c5              		push	bc
   857   00044c 47              		ld	b, a
   858   00044d af              		xor	a
   859   00044e f3              		di
   860   00044f d351            		out	(SEROUT), a			;startbit
   861   000451 cd8104          		call	time19600			;17
   862                          
   863   000454 78              		ld	a, b
   864   000455 0608            		ld	b, 8				;7
   865   000457 d351            serout1:	out	(SEROUT), a			;11
   866   000459 cd8104          		call	time19600			;17
   867   00045c 0f              		rrca					;4
   868   00045d 10f8            		djnz	serout1				;8
   869   00045f fb              		ei
   870   000460 3e01            		ld	a, 1				;7
   871   000462 d351            		out	(SEROUT), a			;11
   872   000464 cd8104          		call	time19600			;17
   873                          
   874   000467 c1              		pop	bc
   875   000468 f1              		pop	af
   876   000469 c9              		ret
   877                          
   878                          
   879                          ;--------------------------------------------------
   880                          ; RS232 in	208 T-States
   881                          ;--------------------------------------------------
   882   00046a c5              serin:		push	bc
   883   00046b db50            serin2:		in	a, (SERIN)
   884   00046d 07              		rlca
   885   00046e 38fb            		jr	c, serin2
   886                          
   887   000470 e3              		ex	(sp), hl			;19, 4.75uS
   888   000471 e3              		ex	(sp), hl			;19  9uS
   889                          
   890   000472 0680            		ld	b, 80h
   891   000474 cd8104          serin1:		call	time19600
   892   000477 db50            		in	a, (SERIN)
   893   000479 07              		rlca
   894   00047a cb18            		rr	b
   895   00047c 30f6            		jr	nc, serin1
   896                          
   897   00047e 78              		ld	a, b
   898   00047f c1              		pop	bc
   899   000480 c9              		ret
   900                          
   901   000481 0e09            time19600:	ld	c, 9				;4
   902   000483 0d              time19600a:	dec	c				;4
   903   000484 20fd            		jr	nz, time19600a			;12/7
   904   000486 c9              		ret					;10
   905                          
   906                          CMDOUT:
   907   000487 d340            		OUT	(CMDREG),A			;OUTPUT DISK CONTROLLER COMMAND BYTE
   908   000489 3e0e            CMDT1:		LD	A,14
   909   00048b 3d              CMDT2:		DEC	A
   910   00048c 20fd            		JR	NZ,CMDT2			;DELAY 56 MICROSECONDS
   911   00048e db40            CMDT3:		in	a, (STSREG)
   912   000490 cb47            		bit	0, a
   913   000492 20fa            		jr	nz, CMDT3
   914   000494 c9              		RET
   915                          
   916                          ;--------------------------------------------------
   917                          ; 11 times port:value
   918                          ;--------------------------------------------------
   919   000495 5001            portval:	db	050h, 001h			;Bit0	set ATARI DATA
   920   000497 5101            		db	051h, 001h			;Bit1	set RS232 TX
   921   000499 8003            		db	080h, 003h			;CTC	Channel 0 reset
   922   00049b 8010            		db 	080h, 010h			;CTC	Channel 0 interrupt vector
   923   00049d 8107            		db	081h, 007h			;CTC	Channel 1 reset + set time constant
   924   00049f 8101            		db	081h, 001h			;CTC	Channel 1 time contant
   925   0004a1 8203            		db	082h, 003h			;CTC	Channel 2 reset
   926   0004a3 8303            		db	083h, 003h			;CTC	Channel 3 reset
   927   0004a5 5701            		db	057h, 001h			;Bit7	ATARI RXD
   928   0004a7 3050            		db	030h, 050h			;DRIVE CONTROL reset FDC
   929   0004a9 3040            		db	030h, 040h			;DRIVE CONTROL 8Mhz
   930                          
   931                          sallycode	equ	ASMPC
   932                          
