rolli-0000.asm:
     1                          
     2                          RIDCMD		equ	11000000B	;READ ID COMMAND
     3                          RDCMD		equ	10000000B	;READ COMMAND
     4                          WRTCMD		equ	10100000B	;WRITE COMMAND
     5                          FINCMD		equ	11010000B	;FORCE INTERRUPT COMMAND
     6                          SKCMD		equ	00010000B	;SEEK COMMAND
     7                          RSTCMD		equ	00000000B	;RESTORE COMMAND
     8                          STEPOUT		equ	01100000B	;STEP OUT COMMAND
     9                          STEPIN		equ	01000000B	;STEP IN COMMAND
    10                          HLOAD		equ	00000000B	;HEAD LOAD BIT FOR TYPE 1 COMMANDS
    11                          
    12                          ;
    13                          ;	... DATA STRUCTURE FOR DISK I/O CONTROL BLOCK ...
    14                          ;
    15                          DSKOP		equ	0		;DISK OPERATION CODE
    16                          DSKDRV		equ	1		;DRIVE# (WITH SIDE# IN BIT 7)
    17                          DSKTRK		equ	2		;TRACK#
    18                          DSKSEC		equ	3		;SECTOR#
    19                          DSKPTR		equ	4		;READ/WRITE POINTER
    20                          DSKAUX		equ	6		;AUXILLIARY PARAMETERS (2 BYTES)
    21                          DSKSTS		equ	8		;OPERATION COMPLETION STATUS
    22                          
    23                          TSTRDY		EQU	0				;SELECT DRIVE AND TEST READY
    24                          GETSEC		EQU	1				;READ SECTOR
    25                          PUTSEC		EQU	2				;WRITE SECTOR
    26                          GETID		EQU	3				;READ ID MARK
    27                          
    28                          DISKV		equ	0f00fh
    29                          
    30                          putaddr		equ	0f493h
    31                          puthex		equ	0f498h
    32                          coninit		equ	0f5fch
    33                          conin		equ	0f640h
    34                          conout		equ	0f650h
    35                          SELECT		equ	0f110h
    36                          RESTORE		equ	0f23bh
    37                          SEEKTRK		equ	0f1fch
    38                          RWDISK		equ	0f2b6h
    39                          RENEW		equ	0f018h
    40                          WATCHDOG	equ	0f3a8h
    41                          RECOVER		equ	0f30fh
    42                          ACTIVON		equ	0f03ch
    43                          
    44                          CFRAME		equ	IOBUFF+LEN-5
    45                          iobuflenhi	equ	(IOBUFF+LEN) / 256
    46                          
    47                          DISKID		equ	0f82bh
    48                          DISKTAB		equ	0f83dh
    49                          DRVINDEX	equ	0fc28h
    50                          SENDBUFF	equ	0f66ch
    51                          SENDACK		equ	0fc4ah
    52                          HASPARMS	equ	0fbd3h
    53                          DISKREAD	equ	0f9d4h
    54                          DISKWRITE	equ	0f948h
    55                          XMITBUF		equ	0f684h
    56                          RXBLOCK		equ	0f6d9h
    57                          CMDWAIT		equ	0f7e2h
    58                          EMULATOR	equ	0f762h
    59                          
    60                          TRKBUF		equ	00800h
    61                          SKEWDD		equ	0fe68h
    62                          
    63                          DEBUG		equ	0f9d4h
    64                          
    65                          SIONORMAL	equ	40
    66                          SIOFAST		equ	8
    67                          
    68                          		include "equs.mac"
equs.mac:
     1                          KEYBUF		equ	0ff00h		;16 byte keyboard input fifo
     2                          CTCVEC		equ	0ff10h		;8 word interrupt vector table
     3                          ;
     4                          ;
     5                          ;
     6                          PRINTER		equ	020h		;PRINTER OUTPUT/INPUTS
     7                          LATCH		equ	030h		;DRIVE CONTROL LATCH
     8                          WD179X		equ	040h		;WD TYPE DISK CONTROLLER
     9                          ;
    10                          ;	EQUATES FOR DISK CONTROLLER PORTS AND COMMAND CODES
    11                          ;
    12                          STSREG		equ	WD179X+0	;STATUS REGISTER
    13                          CMDREG		equ	WD179X+0	;COMMAND REGISTER
    14                          TRKREG		equ	WD179X+1	;TRACK REGISTER
    15                          SECREG		equ	WD179X+2	;SECTOR REGISTER
    16                          DATREG		equ	WD179X+3	;DATA REGISTER;
    17                          
    18                          SERIN		equ	050h		;RS232 SERIAL INPUT
    19                          ;
    20                          ATROUT		equ	050h		;ATARI SERIAL OUTPUT
    21                          SEROUT		equ	051h		;RS232 SERIAL OUTPUT
    22                          BANKSW		equ	052h		;ROM BANKSWITCH BIT
    23                          STROBE		equ	053h		;PRINTER STROBE
    24                          INDXCLR		equ	054h		;INDEX CONTROL FLOP CLEAR
    25                          DTR		equ	055h		;DTR OUTPUT CONTROL
    26                          INDXSET		equ	056h		;INDEX CONTROL FLOP SET
    27                          CDMUX		equ	057h		;ATARI CMD/DATA MUX CONTROL
    28                          ;
    29                          ATARI		equ	070h		;ATARI INPUT BITS PORT
    30                          CTC0		equ	080h		;ZILOG COUNTER/TIMER
    31                          CTC1		equ	081h
    32                          CTC2		equ	082h
    33                          CTC3		equ	083h
    34                          ;
    35                          NULL		equ	000h
    36                          CR		equ	00dh
    37                          LF		equ	00ah
    38                          ;
    39                          
rolli-0000.asm:
    69                          		include "global.mac"
global.mac:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	GLOBAL VARIABLES FOR ATARI Z80 ROM		*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          glbvars		equ	0ff20h
     8                          ;
     9                          ;	... GLOBAL VARIABLES FOR PHYSICAL DISK HANDLER ...
    10                          ;
    11                          ;DRVTAB:	DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    12                          ;		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    13                          ;RATES:		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    14                          ;UNIT:		DEFB	0		;CURRENTLY SELECTED DISK#
    15                          ;TRACK:		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    16                          ;DRVOFF:	DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    17                          ;OUTCPY:	DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    18                          ;PERIOD:	DEFW	0		;DISK SPIN PERIOD
    19                          ;HLDTIM:	DEFB	50		;HEAD LOAD DELAY
    20                          ;RWMAX:		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    21                          ;		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    22                          
    23                          DRVTAB:		equ	glbvars		;HEAD POSITIONS FOR 4 DRIVES
    24                          					;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    25                          RATES:		equ	DRVTAB+8	;SETTLING DELAYS / STEP RATES TABLE
    26                          UNIT:		equ	RATES+4		;CURRENTLY SELECTED DISK#
    27                          TRACK:		equ	UNIT+1		;TRACK POSITION OF SELECTED DRIVE
    28                          DRVOFF:		equ	TRACK+1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    29                          OUTCPY:		equ 	DRVOFF+1	;COPY OF DISK CONTROL LATCH
    30                          PERIOD:		equ	OUTCPY+1	;DISK SPIN PERIOD
    31                          HLDTIM:		equ	PERIOD+2	;HEAD LOAD DELAY
    32                          RWMAX:		equ	HLDTIM+1	;MAX NUMBER OF READ/WRITE RETRIES
    33                          EXPANSION	equ	RWMAX+1		;ROOM FOR EXPANSION
    34                          ;
    35                          ;
    36                          ;	... GLOBAL VARIABLES FOR ATARI HANDLER ...
    37                          ;
    38                          ;IDPTR:		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    39                          ;FSMVEC:	DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    40                          ;EXTVEC:	DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    41                          ;NEWLIN:	DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    42                          ;PSMSG:		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    43                          ;PMASKS:	DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    44                          ;		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    45                          ;FMTPTR:	DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    46                          ;PBASE:		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    47                          ;PSIZE:		DEFW	4095		;MAX BUFFER INDEX OFFSET
    48                          ;
    49                          ;glbsize	equ	$-glbvars		;length of initialized variables
    50                          ;        DEFB    73h			; **** Exists in original ROM? ****
    51                          IDPTR:		equ	EXPANSION+4	;POINTER TO DEVICE ID TABLE
    52                          FSMVEC:		equ 	IDPTR+2		;POINTER FOR ATARI TASK STATE MACHINE
    53                          EXTVEC:		equ	FSMVEC+2	;POINTER FOR EXTRA TASK PROCESSOR
    54                          NEWLIN:		equ	EXTVEC+2	;PRINTER NEWLINE CHARACTERS
    55                          PSMSG:		equ	NEWLIN+5	;PRINTER STATUS FRAME
    56                          PMASKS:		equ	PSMSG+4		;MASK ALL BITS BUT 'BUSY'
    57                          					;COMPARE TO ZERO FOR READY
    58                          FMTPTR:		equ	PMASKS+2	;POINTER TO STANDARD FORMAT TABLES
    59                          PBASE:		equ	FMTPTR+2	;PUT PRINT BUFFER AFTER HERE
    60                          PSIZE:		equ	PBASE+2		;MAX BUFFER INDEX OFFSET
    61                          
    62                          glbsize		equ	$-glbvars	;length of initialized variables
    63                          ;
    64                          ;
    65                          ;	*** UNINITIALIZED SCRATCH VARIABLES COME AFTER HERE ***
    66                          ;
    67                          PCOUNT:		EQU 	PSIZE+2		;BYTECOUNT FOR BUFFER
    68                          PINP:		EQU 	PCOUNT+2	;INPUT OFFSET
    69                          POUT:		EQU 	PINP+2		;OUTPUT OFFSET
    70                          CMDFLG:		EQU 	POUT+2		;COMMAND FRAME READY FLAG FROM IRQ
    71                          DMATRIX:	EQU 	CMDFLG+1    	;DRIVE POOP TABLES
    72                          OLDPTR:		EQU 	DMATRIX+64	;POINTER TO FIRST DRIVE ACCESSED
    73                          DKIOCB:		EQU 	OLDPTR+2	;DISK I/O COMMAND BLOCK
    74                          DRWCMD:		EQU 	DKIOCB+16	;R/W COMMAND FROM ATARI TO 'DISKIO'
    75                          LOGSIZ:		EQU 	DRWCMD+1	;LOGICAL SECTOR LENGTH FOR XFER
    76                          IDBUF:		EQU	LOGSIZ+2	;BUFFER FOR ID MARK READS
    77                          IOPTR:		EQU 	IDBUF+8		;ATARI BLOCK INPUT POINTER
    78                          VFLAG:		EQU 	IOPTR+2		;VERIFY FLAG FOR DISK WRITES
    79                          
    80                          ;
    81                          ;
    82                          ;	... VARIABLES FOR DISK FORMAT FUNCTION ...
    83                          ;
    84                          FMTSTUFF	EQU	VFLAG+1
    85                          FRMPTR:		EQU 	VFLAG+1			;POINTER TO FORMAT DATA TABLE
    86                          SKWPTR:		EQU 	FRMPTR+2		;POINTER TO SKEW TABLE
    87                          NSECTS:		EQU 	SKWPTR+2		;NUMBER OF SECTORS
    88                          TRKSIZ:		EQU 	NSECTS+1		;TRACK LENGTH IN BYTES
    89                          FMTLEN		EQU	(TRKSIZ+2)-FMTSTUFF
    90                          
    91                          sides:		EQU 	TRKSIZ+2		;copy of 'nsides' for drive#
    92                          tracks:		EQU 	sides+1			;copy of 'ntrks' for drive#
    93                          SEQNUM:		EQU 	tracks+1		;TEMP SECTOR SEQUENCE NUMBER
    94                          SEQPTR:		EQU 	SEQNUM+2		;TEMP ERROR LOG TABLE POINTER
    95                          TRKPTR:		EQU 	SEQPTR+2		;POINTER TO START OF TRACK IMAGE
    96                          
    97                          ;
    98                          ;	... LOCAL VARIABLES FOR DISK HANDLER ...
    99                          ;
   100                          CMDBYT:		EQU 	TRKPTR+2		;COMMAND BYTE FOR READS/WRITES
   101                          RWTRY:		EQU	CMDBYT+1		;READ/WRITE RETRY COUNT
   102                          TICKS:		EQU	RWTRY+1			;FREE RUNNING MILISECOND COUNTER
   103                          DRVTMR:		EQU	TICKS+2			;DISK ACTIVITY TIMER
   104                          ;
   105                          ;
   106                          ;
   107                          ;
   108                          IOBUFF		EQU	0C100H			;ATARI I/O BUFFER
   109                          LEN		EQU	512
   110                          ;
   111                          ;TRKBUF		EQU	IOBUFF+LEN		;TRACK BUFFER FOR READS
   112                          ;
   113                          
   114                          ;
   115                          ;
   116                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
   117                          ;
   118                          NTRKS	EQU	0		;NUMBER OF TRACKS
   119                          STEPRT	EQU	1		;STEP RATE
   120                          NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
   121                          NSIDES	EQU	4		;NUMBER OF SIDES
   122                          MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
   123                          SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
   124                          DSKBITS	EQU	8		;MISC NAUGHTY BITS
   125                          SPARE0	EQU	9
   126                          SPARE1	EQU	10
   127                          SPARE2	EQU	11
   128                          
   129                          CMDSTS	EQU	12		;COMMAND STATUS
   130                          HDWSTS	EQU	13		;HARDWARE STATUS
   131                          
   132                          FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
   133                          SPARE3	EQU	15
   134                          ;
   135                          ;
   136                          ;	EQUATES FOR BITS IN 'MEDIA' BYTE
   137                          ;
   138                          SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
   139                          DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
   140                          ;
   141                          ;
   142                          ;	EQUATES FOR BITS IN 'DSKBITS' BYTE
   143                          ;
   144                          PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
   145                          ;
   146                          ;
   147                          ;	EQUATES FOR BITS IN 'CMDSTS' BYTE
   148                          ;
   149                          BADCMD	EQU	0		;BAD COMMAND FRAME BIT
   150                          BADDAT	EQU	1		;BAD DATA FRAME BIT
   151                          BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
   152                          WRPROT	EQU	3		;WRITE PROTECTED BIT
   153                          ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
   154                          SEC256	EQU	5		;LONG/SHORT SECTOR BIT
   155                          ;
   156                          ;
   157                          ;	EQUATES FOR BITS IN 'FLAGS' BYTE
   158                          ;
   159                          FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
   160                          CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
   161                          
rolli-0000.asm:
    70                          
    71                          ;--------------------------------------------------
    72                          ; Code executed after Reset
    73                          ;--------------------------------------------------
    74                          		ORG	00000h
    75                          ;
    76   000000 f3              reset:		di      				;disable interrupt
    77   000001 af              		xor     a				;set a to zero
    78   000002 3d              restime:	dec     a				;do 256 times nothing
    79   000003 20fd            		jr      nz, restime			;loop
    80                          
    81   000005 219903          		ld      hl, portval			;init 11 ports with values at 0a3h
    82   000008 060b            		ld      b, 0bh
    83   00000a 4e              portinit:	ld      c, (hl)
    84   00000b 23              		inc     hl
    85   00000c eda3            		outi
    86   00000e 20fa            		jr      nz, portinit			; loop
    87                          
    88                          
    89   000010 2100f0          		ld      hl,0f000h          		;test ram @F000-FFFF
    90   000013 3e01            		ld      a, 01h             		;write 1,2,4,8,16,32,64,128
    91   000015 0610            testram2:	ld      b, 10h
    92   000017 77              testram:	ld      (hl),a
    93   000018 07              		rlca
    94   000019 2c              		inc     l
    95   00001a 20fb            		jr      nz, testram
    96   00001c 24              		inc     h
    97   00001d 10f8            		djnz    testram
    98                          
    99   00001f 0e10            		ld      c, 10h
   100   000021 2b              testram1:	dec     hl
   101   000022 0f              		rrca
   102   000023 be              		cp      (hl)
   103   000024 20fe            ramerr:		jr      nz, ramerr			;if error, loop forever
   104   000026 10f9            		djnz    testram1
   105   000028 0d              		dec     c
   106   000029 20f6            		jr      nz, testram1
   107   00002b 87              		add     a, a
   108   00002c 20e7            		jr      nz, testram2
   109                          
   110   00002e 21af03          		ld      hl, sallycode			;copy BIOS 0f000h
   111   000031 1100f0          		ld      de, 0f000h			;length always 0f00h
   112   000034 01000f          		ld      bc, 00f00h
   113   000037 edb0            		ldir
   114   000039 21ab12          		ld      hl, sallycode+0efch		;copy initial values to 0ff20h
   115   00003c 1120ff          		ld      de, 0ff20h			;length $2F
   116   00003f 012f00          		ld      bc, 002fh
   117   000042 edb0            		ldir
   118                          
   119   000044 af              		xor     a				;fill up to $FFFF with zeros
   120   000045 12              ramfill:	ld      (de),a
   121   000046 1c              		inc     e
   122   000047 20fc            		jr      nz, ramfill
   123                          
   124   000049 3110ff          		ld      sp, 0ff10h			;stack-pointer to 0ff10h
   125                          
   126   00004c 3eff            		ld      a, 0ffh				;load interrupt-vector register
   127   00004e ed47            		ld      i, a				;with 0ffh
   128   000050 ed5e            		im      2				;enable interrupt mode 2 (vectored)
   129                          
   130                          ;--------------------------------------------------
   131                          ; step 5 times in and then out to trk00
   132                          ; set bit 6 for each online floppy in ff5eh
   133                          ; percom block (16 bytes, byte 8 bit 6)
   134                          ;--------------------------------------------------
   135   000052 3e4f            		ld      a, 4fh				;select drive 1-4, Motor off, side 0, B/S=1, DD
   136   000054 d330            		out     (LATCH),a
   137                          
   138   000056 57              		ld      d, a				;d = 4fh
   139   000057 0605            		ld      b, 5				;step 5 times
   140                          stepin:
   141   000059 3e49            		ld      a, 49h				;4b = 0100 1011 = step-in
   142   00005b cd8b03          		call    CMDOUT				;write A to FDC command and wait
   143   00005e 10f9            		djnz    stepin
   144                          
   145   000060 0664            		ld      b, 64h				;seek track 00 for all 4 drives
   146   000062 7a              outloop1:	ld      a, d				;select all drives
   147   000063 d330            		out     (LATCH),a
   148   000065 e3              		ex      (sp),hl				;???
   149   000066 e3              		ex      (sp),hl				;???
   150   000067 3e69            		ld      a, 69h				;step out
   151   000069 cd8b03          		call    CMDOUT				;write A to FDC command and wait
   152                          
   153   00006c 1e01            		ld      e, 01h
   154   00006e 7b              outloop:	ld      a, e
   155   00006f f640            		or      40h
   156   000071 d330            		out     (LATCH), a			;select one drive
   157   000073 e3              		ex      (sp), hl
   158   000074 e3              		ex      (sp), hl
   159                          ;		call    0f391h				;stop command, get status
   160   000075 db40            		in	a, (STSREG)
   161   000077 cb57            		bit     2, a
   162   000079 2804            		jr      z, excldrv			;bit not set, not at track 00
   163   00007b 7b              		ld      a, e				;drive at track 00
   164   00007c 2f              		cpl     				;exclude drive from seeking
   165   00007d a2              		and     d
   166   00007e 57              		ld      d, a
   167                          excldrv:
   168   00007f cb23            		sla     e
   169   000081 cb63            		bit     4, e
   170   000083 28e9            		jr      z, outloop			;status checked for all 4 drives?
   171   000085 10db            		djnz    outloop1			;step out again
   172                          
   173                          ;		call    0f068h				;deselect floppies and seek current track?
   174   000087 3e50            		ld	a, 50h				;reset FDC and deselct
   175   000089 d330            		out	(LATCH), a
   176   00008b 3e40            		ld	a, 40h				;reset FDC and deselct
   177   00008d d330            		out	(LATCH), a
   178                          
   179   00008f 215eff          		ld      hl, 0ff5eh			;set bit for each connected floppy?
   180   000092 011000          		ld      bc, 0010h
   181   000095 3e04            		ld      a, 04h
   182   000097 cb1a            nextdrv:	rr      d
   183   000099 3802            		jr      c, noset
   184   00009b cbf6            		set     6, (hl)
   185   00009d 09              noset:		add     hl, bc
   186   00009e 3d              		dec     a
   187   00009f 20f6            		jr      nz, nextdrv
   188                          
   189                          
   190   0000a1 210000          		ld	hl, 00000h			; source
   191   0000a4 110080          		ld	de, 08000h			; dest
   192   0000a7 010020          		ld	bc, 02000h
   193   0000aa edb0            		ldir
   194   0000ac 21b200          		ld	hl, code8000
   195   0000af cbfc            		set	7, h
   196   0000b1 e9              		jp	(hl)
   197   0000b2 3e01            code8000:	ld	a, 1
   198   0000b4 d352            		out	(BANKSW), a
   199   0000b6 210080          		ld	hl, 08000h
   200   0000b9 110000          		ld	de, 00000h
   201   0000bc 010020          		ld	bc, 02000h
   202   0000bf edb0            		ldir
   203   0000c1 c3c400          		jp	code0000
   204                          
   205                          code0000:
   206   0000c4 3100c1          		ld      sp, 0c100h			;set stack to 0c100h
   207                          
   208                          main:
   209                          ;--------------------------------------------------
   210                          ; firmware patch
   211                          ;--------------------------------------------------
   212   0000c7 21ffff          		ld	hl, 0ffffh
   213   0000ca 22c601          		ld	(drive), hl
   214                          
   215   0000cd 213ff8          		ld	hl, DISKTAB+2
   216   0000d0 116a02          		ld	de, disktab+3
   217   0000d3 011500          		ld	bc, 3*7
   218   0000d6 edb0            		ldir
   219                          
   220   0000d8 210800          		ld	hl, 8
   221   0000db 226702          		ld	(disktab),hl
   222   0000de 3e3f            		ld	a, '?'
   223   0000e0 326902          		ld	(disktab+2), a
   224   0000e3 eb              		ex	de, hl
   225                          
   226   0000e4 3ed3            		ld	a, getspeed & 255
   227   0000e6 77              		ld	(hl), a
   228   0000e7 23              		inc	hl
   229   0000e8 3e01            		ld	a, getspeed / 256
   230   0000ea 77              		ld	(hl), a
   231                          
   232   0000eb 216702          		ld	hl, disktab
   233   0000ee 222bf8          		ld	(DISKID), hl
   234   0000f1 222df8          		ld	(DISKID+2), hl
   235   0000f4 222ff8          		ld	(DISKID+4), hl
   236   0000f7 2231f8          		ld	(DISKID+6), hl
   237                          
   238   0000fa 3ec3            		ld	a, 0c3h				;'JP' instruction
   239   0000fc 3284f6          		ld	(XMITBUF), a
   240   0000ff 32d9f6          		ld	(RXBLOCK), a
   241   000102 32e2f7          		ld	(CMDWAIT), a
   242                          
   243   000105 210502          		ld	hl, xmitbuf
   244   000108 2285f6          		ld	(XMITBUF+1), hl
   245   00010b 215002          		ld	hl, rxblock
   246   00010e 22daf6          		ld	(RXBLOCK+1), hl
   247   000111 21e901          		ld	hl, cmdwait
   248   000114 22e3f7          		ld	(CMDWAIT+1), hl
   249   000117 214301          		ld	hl, diskread
   250   00011a 22d5f9          		ld	(DISKREAD+1), hl
   251   00011d 212b01          		ld	hl, diskwrite
   252   000120 2249f9          		ld	(DISKWRITE+1), hl
   253                          
   254   000123 3e28            		ld	a, SIONORMAL
   255   000125 328702          		ld	(pokeydiv), a
   256                          
   257   000128 c362f7          		jp	EMULATOR
   258                          
   259                          ;
   260                          ;
   261                          ;
   262                          ;--------------------------------------------------
   263                          ; diskwrite: write through sector
   264                          ;--------------------------------------------------
   265   00012b cdb901          diskwrite:	call	checktrack
   266   00012e 2010            		jr	nz, diskwrite1
   267                          
   268   000130 cda401          		call	compbufadr
   269   000133 eb              		ex	de, hl
   270   000134 dd6605          		ld	h, (ix + DSKPTR+1)
   271   000137 dd6e04          		ld	l, (ix + DSKPTR)
   272   00013a ed4ba9ff        		ld	bc, (LOGSIZ)
   273   00013e edb0            		ldir
   274                          
   275   000140 c30ff0          diskwrite1:	jp	DISKV
   276                          
   277                          ;--------------------------------------------------
   278                          ; diskread: cache a track
   279                          ;--------------------------------------------------
   280                          diskread:
   281   000143 cdb901          		call	checktrack
   282   000146 2846            		jr	z, match
   283                          
   284   000148 ed53c601        		ld	(drive), de			;save new drive and track
   285   00014c dde5            		push	ix				;save ix
   286                          
   287   00014e dde5            		push	ix				;load hl with ix
   288   000150 e1              		pop	hl
   289   000151 11ca01          		ld	de, dcb
   290   000154 010900          		ld	bc, 9
   291   000157 edb0            		ldir					;copy dcb
   292                          
   293   000159 dd21ca01        		ld	ix, dcb				;load ix with new dcb
   294   00015d 2168fe          		ld	hl, SKEWDD			;reset sector skew pointer
   295   000160 22c801          		ld	(secptr), hl
   296                          
   297   000163 dd360301        		ld	(ix + DSKSEC), 1
   298   000167 fd4603          		ld	b, (iy + NSECS+1)
   299                          
   300   00016a c5              readtrack:	push	bc
   301   00016b cda401          		call	compbufadr
   302   00016e 22ce01          		ld	(dcb + DSKPTR), hl
   303                          
   304   000171 cd0ff0          		call	DISKV
   305                          
   306   000174 c1              		pop	bc
   307   000175 3ad201          		ld	a, (dcb + DSKSTS)		;error occured?
   308   000178 b7              		or	a
   309   000179 2804            		jr	z, readtrack6			;no
   310   00017b dde1            		pop	ix				;yes, store in original dcb
   311   00017d 181f            		jr	match2
   312                          
   313   00017f 2ac801          readtrack6:	ld	hl, (secptr)
   314   000182 23              		inc	hl
   315   000183 22c801          		ld	(secptr), hl
   316   000186 7e              		ld	a, (hl)
   317   000187 32cd01          		ld	(dcb + DSKSEC), a
   318   00018a 10de            		djnz	readtrack
   319                          
   320   00018c dde1            		pop	ix
   321                          
   322   00018e cda401          match:		call	compbufadr
   323   000191 dd5605          		ld	d, (ix + DSKPTR+1)
   324   000194 dd5e04          		ld	e, (ix + DSKPTR)
   325   000197 ed4ba9ff        		ld	bc, (LOGSIZ)
   326   00019b edb0            		ldir
   327                          
   328   00019d af              		xor	a
   329   00019e dd7708          match2:		ld	(ix + DSKSTS), a
   330   0001a1 c33cf0          		jp	ACTIVON
   331                          
   332                          
   333                          
   334   0001a4 210008          compbufadr:	ld	hl, TRKBUF
   335   0001a7 dd4603          		ld	b, (ix + DSKSEC)
   336   0001aa 05              		dec	b
   337   0001ab 0e00            		ld	c, 0
   338   0001ad 3ad001          		ld	a, (dcb + DSKAUX)
   339   0001b0 b7              		or	a
   340   0001b1 2804            		jr	z, compbufadr1
   341   0001b3 cb38            		srl	b
   342   0001b5 cb19            		rr	c
   343   0001b7 09              compbufadr1:	add	hl, bc
   344   0001b8 c9              		ret
   345                          
   346   0001b9 2ac601          checktrack:	ld	hl, (drive)
   347   0001bc dd5602          		ld	d, (ix + DSKTRK)		;high
   348   0001bf dd5e01          		ld	e, (ix + DSKDRV)		;low
   349   0001c2 b7              		or	a				;clear carry
   350   0001c3 ed52            		sbc	hl, de
   351   0001c5 c9              		ret
   352                          
   353   0001c6 ff              drive:		db	255
   354   0001c7 ff              track:		db	255
   355   0001c8 0000            secptr:		dw	0
   356                          
   357                          ;
   358                          ;
   359                          ;
   360   0001ca 00              dcb:		db	0				;DISK OPERATION CODE
   361   0001cb 00              		db	0				;DRIVE# (WITH SIDE# IN BIT 7)
   362   0001cc 00              		db	0				;TRACK#
   363   0001cd 00              		db	0				;SECTOR#
   364   0001ce 0000            		dw	0				;READ/WRITE POINTER
   365   0001d0 0000            		dw	0				;AUXILLIARY PARAMETERS (2 BYTES)
   366   0001d2 00              		db	0				;OPERATION COMPLETION STATUS
   367                          
   368                          ;--------------------------------------------------
   369                          ; get Pokeydivisor command '?'
   370                          ;--------------------------------------------------
   371                          getspeed:
   372   0001d3 cd28fc          		call	DRVINDEX			;POINT IY TO DRIVE'S DATA AREA
   373   0001d6 d8              		ret	C				;EXIT IF NOT A DRIVE IN OUR BOX
   374                          
   375                          ;		call	HASPARMS
   376                          ;		ret	Z				;EXIT IF DISK PARAMS NOT KNOWN
   377                          
   378   0001d7 cd4afc          		call	SENDACK				;SEND 'ACK' FOR COMMAND FRAME
   379                          
   380   0001da 21ffc2          		ld	hl, IOBUFF+LEN-1
   381   0001dd 3608            		ld	(hl), SIOFAST
   382   0001df 114300          		ld	de, 'C'
   383   0001e2 cd6cf6          		call	SENDBUFF			;SEND 'C' AND PARAMS DATA FRAME
   384   0001e5 c38802          		jp	togglebaud
   385   0001e8 c9              		ret
   386                          
   387                          
   388                          
   389                          ;--------------------------------------------------
   390                          ; cmdwait
   391                          ;--------------------------------------------------
   392   0001e9 3a55ff          cmdwait:	ld	a, (CMDFLG)
   393   0001ec b7                              or	a				;SEE IF COMMAND FRAME HAS ARRIVED
   394   0001ed c8                              ret	z				;EXIT IF NOTHING HAS HAPPENED
   395                          
   396                          ;		call	sercmd				;5-byte command frame
   397                          
   398   0001ee 3a55ff          		ld	a, (CMDFLG)
   399   0001f1 fe01                            cp	1
   400                          
   401   0001f3 f3              		di					;ELSE RESET INTERRUPT AND START AGAIN
   402   0001f4 3e03                            ld	a, 00000011B
   403   0001f6 d380                            out	(CTC0),A
   404   0001f8 fb                              ei
   405                          
   406   0001f9 c2ff01                          jp	nz, cmdwait1
   407                          
   408   0001fc c3f3f7          		jp	0f7f3h				;PROCESS COMMAND IF GOOD FRAME RECVD
   409                          
   410                          cmdwait1:
   411   0001ff cd8802          		call	togglebaud
   412   000202 c309f8          		jp	0f809h
   413                          
   414                          
   415                          
   416                          ;--------------------------------------------------
   417                          ; xmitbuf
   418                          ;--------------------------------------------------
   419                          xmitbuf:
   420   000205 f3              		di
   421   000206 3a8702          		ld	a, (pokeydiv)			;is fast?
   422   000209 fe28            		cp	SIONORMAL
   423   00020b 2006            		jr	nz, xmitfast			;yes, jump
   424   00020d 0115f7          		ld	bc, 0f715h
   425   000210 c388f6          		jp	XMITBUF+4
   426                          
   427                          xmitfast:
   428   000213 3e07            		ld	a, 00000111B			;CTC1 4uS pulses (4Mhz / 1*16)
   429   000215 d381            		out	(CTC1), a
   430   000217 3e01            		ld	a, 1
   431   000219 d381            		out	(CTC1), a
   432                          
   433   00021b 7e              xmitfast1:	ld	a, (hl)				;7
   434   00021c 23              		inc	hl				;6
   435   00021d aa              		xor	d				;4
   436   00021e 4f              		ld	c, a				;4
   437   00021f 83              		add	a, e				;4
   438   000220 ce00            		adc	0				;7
   439   000222 5f              		ld	e, a				;4
   440   000223 cd3102          		call	fastsend			;17 send byte in c
   441   000226 7c              		ld	a, h				;4
   442   000227 fec3            		cp	iobuflenhi			;7
   443   000229 38f0            		jr	c, xmitfast1			;12/7 loop if buffer end not reached
   444                          
   445   00022b 3e03            		ld	a, 00000011B
   446   00022d d381            		out	(CTC1), a
   447   00022f fb              		ei
   448   000230 c9              		ret
   449                          
   450   000231 af              fastsend:	xor	a
   451   000232 d350            		out	(ATROUT), a
   452                          
   453   000234 dde5            		push	ix				;15
   454   000236 dde1            		pop	ix				;14
   455   000238 79              		ld	a, c				;4
   456   000239 0608            		ld	b, 8				;7
   457   00023b 03              		inc	bc				;6
   458   00023c 00              		nop					;4
   459                          
   460   00023d 00              fastsend1:	nop					;4
   461   00023e fe01            		cp	1				;7
   462   000240 d350            		out	(ATROUT), a			;11
   463   000242 0f              		rrca					;4
   464   000243 dde5            		push	ix				;15
   465   000245 dde1            		pop	ix				;14
   466   000247 10f4            		djnz	fastsend1			;13 / 8
   467                          
   468   000249 ed5f            		ld	a, r				;9
   469   00024b 3e01            		ld	a, 1				;7
   470   00024d d350            		out	(ATROUT), a			;11
   471   00024f c9              		ret					;10
   472                          
   473                          ;--------------------------------------------------
   474                          ; rxblock
   475                          ;--------------------------------------------------
   476   000250 3a8702          rxblock:	ld	a, (pokeydiv)			;is fast?
   477   000253 fe28            		cp	SIONORMAL
   478   000255 ca6102          		jp	z, rxblock1
   479                          
   480   000258 cdb502          		call	fastrecv			;yes, fast speed
   481   00025b 3e03            		ld	a, 00000011B			;reset timer
   482   00025d d383            		out	(CTC3), a
   483   00025f 4a              		ld	c, d				;checksum in c
   484   000260 c9              		ret
   485                          
   486   000261 010000          rxblock1:	ld	bc, 0				;no, normal speed
   487   000264 c307f7          		jp	0f707h
   488                          
   489                          ;
   490                          ; 32 bytes for disktab
   491                          ;
   492   000267 0000000000000000disktab:	dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
   493   000277 0000000000000000		dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
   494                          
   495   000287 28              pokeydiv:	db	SIONORMAL
   496                          
   497                          ;--------------------------------------------------
   498                          ; togglebaud
   499                          ;--------------------------------------------------
   500   000288 3a8702          togglebaud:	ld	a, (pokeydiv)
   501   00028b fe28            		cp	SIONORMAL
   502   00028d 3e08            		ld	a, SIOFAST
   503   00028f 2802            		jr	z, togglebaud1
   504   000291 3e28            		ld	a, SIONORMAL
   505   000293 328702          togglebaud1:	ld	(pokeydiv), a
   506   000296 c9              		ret
   507   000297 f5              		push	af
   508   000298 3e42            		ld	a, 'B'
   509   00029a cd4e03          		call	serout
   510   00029d f1              		pop	af
   511   00029e cd3503          		call	serhex
   512   0002a1 c32303          		jp	sercr
   513                          
   514                          
   515                          
   516                          
   517   0002a4 2100c1          clear:		ld	hl, IOBUFF
   518   0002a7 af              clear1:		xor	a
   519   0002a8 77              		ld	(hl), a
   520   0002a9 23              		inc	hl
   521   0002aa 7c              		ld	a, h
   522   0002ab fec3            		cp 	iobuflenhi
   523   0002ad 20f8            		jr	nz, clear1
   524   0002af c9              		ret
   525                          
   526                          
   527                          
   528                          
   529                          ;--------------------------------------------------
   530                          ; set 4ms watchdog
   531                          ;--------------------------------------------------
   532   0002b0 f1              irq4ms:		pop	af				;pop irq-addr
   533   0002b1 b7              		or	a				;clear carry
   534   0002b2 fb              irq4ms1:	ei
   535   0002b3 ed4d            		reti
   536                          
   537                          ;--------------------------------------------------
   538                          ; SIO receive 57600 baud
   539                          ;--------------------------------------------------
   540                          fastrecv:
   541   0002b5 f3              		di
   542   0002b6 01b002          		ld	bc, irq4ms
   543   0002b9 ed4316ff        		ld	(CTCVEC+6),bc			;SET VECTOR TO irq4ms ROUTINE
   544   0002bd 018300          		ld	bc, CTC3			;clear b, load c with CTC3
   545   0002c0 11a700          		ld	de, 10100111B			;clear d, load e with a7h
   546   0002c3 ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
   547   0002c5 ed49            		out	(c), c
   548   0002c7 fb              		ei
   549                          
   550   0002c8 db70            fastrecv1:	in	a, (ATARI)			;11
   551   0002ca 17              		rla					;4
   552   0002cb dac802          		jp	c, fastrecv1			;10	NEW BYTE IS COMING IF START BIT LOW
   553                          							;14-25 / 7
   554   0002ce 7a              		ld	a, d				;4
   555   0002cf 80              		add	a, b				;4
   556   0002d0 ce00            		adc	a, 0				;7 ACCUMULATE CHECKSUM ATARI STYLE
   557   0002d2 57              		ld	d, a				;4
   558                          
   559   0002d3 067f            		ld	b, 07fh				;7
   560   0002d5 c3da02          		jp	fastrecv2a			;10 = 50
   561                          ;
   562                          ; SERIAL->PARALLEL CONVERSION AT 17,36 MICROSECONDS PER BIT
   563                          ;
   564   0002d8 f5              fastrecv2:	push	af				; 11
   565   0002d9 f1              		pop	af				; 10
   566   0002da 7e              fastrecv2a:	ld	a, (hl)				; 7
   567   0002db 7e              		ld	a, (hl)				; 7
   568                          
   569   0002dc db70            		in	a, (ATARI)			; 11 CYCLES
   570   0002de 17              		rla					;  4 CYCLES
   571   0002df cb18            		rr	b				;  8 CYCLES
   572   0002e1 38f5            		jr	c, fastrecv2			; 12/7 = 70 / 65 cycles
   573                          
   574   0002e3 70              		ld	(hl), b				;7 THEN STORE IN MEMORY BUFFER @HL
   575   0002e4 23              		inc	hl				;6
   576   0002e5 7c              		ld	a, h				;4
   577   0002e6 fec3            		cp	iobuflenhi			;7
   578   0002e8 3f              		ccf					;4
   579   0002e9 d8              		ret	c				;5 RETURN WITH CARRY SET IF BUFFER FILLED
   580                          
   581   0002ea ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
   582   0002ec ed49            		out	(c), c				;12 COUNT MOD 256
   583                          
   584   0002ee c3c802          		jp	fastrecv1			;10
   585                          
   586                          
   587   0002f1 e5              serdumpcpl:	push	hl
   588   0002f2 f5                              push	af
   589   0002f3 c5                              push	bc
   590   0002f4 d5                              push	de
   591   0002f5 16ff            		ld	d, 255
   592   0002f7 180f            		jr	serdump1
   593                          
   594                          ;--------------------------------------------------
   595                          ; RS232 sercmd
   596                          ;--------------------------------------------------
   597   0002f9 e5              sercmd:		push	hl
   598   0002fa 21fbc2          		ld	hl, CFRAME
   599   0002fd cd2303          		call	sercr
   600   000300 1801            		jr	serdump2
   601                          
   602                          ;--------------------------------------------------
   603                          ; RS232 dump
   604                          ;--------------------------------------------------
   605   000302 e5              serdump:	push	hl
   606   000303 f5              serdump2:	push	af
   607   000304 c5              		push	bc
   608   000305 d5              		push	de
   609                          
   610   000306 1600            		ld	d, 0
   611                          
   612   000308 7e              serdump1:	ld	a, (hl)
   613   000309 aa              		xor 	d
   614   00030a cd3503          		call	serhex
   615   00030d cd1b03          		call	serspace
   616   000310 23              		inc	hl
   617   000311 7c              		ld	a, h
   618   000312 fec3            		cp	a, 0c3h
   619   000314 38f2            		jr	c, serdump1
   620                          
   621   000316 d1              		pop	de
   622   000317 c1              		pop	bc
   623   000318 f1              		pop	af
   624   000319 e1              		pop	hl
   625   00031a c9              		ret
   626                          
   627                          ;--------------------------------------------------
   628                          ; RS232 <space>
   629                          ;--------------------------------------------------
   630   00031b f5              serspace:	push	af
   631   00031c 3e20            		ld	a, ' '
   632   00031e cd4e03          		call	serout
   633   000321 f1              		pop	af
   634   000322 c9              		ret
   635                          
   636                          ;--------------------------------------------------
   637                          ; RS232 <CR>
   638                          ;--------------------------------------------------
   639   000323 f5              sercr:		push	af
   640   000324 3e0d            		ld	a, '\r'
   641   000326 cd4e03          		call	serout
   642   000329 f1              		pop	af
   643   00032a c9              		ret
   644                          
   645                          ;--------------------------------------------------
   646                          ; RS232 output HL in hex
   647                          ;--------------------------------------------------
   648   00032b 7c              seraddr:	ld	a, h
   649   00032c cd3503          		call	serhex
   650   00032f 7d              		ld	a, l
   651   000330 cd3503          		call	serhex
   652   000333 18e6            		jr	serspace
   653                          ;--------------------------------------------------
   654                          ; RS232 output A in hex
   655                          ;--------------------------------------------------
   656   000335 f5              serhex:		push	af
   657   000336 f5              		push	af
   658   000337 0f              		rrca
   659   000338 0f              		rrca
   660   000339 0f              		rrca
   661   00033a 0f              		rrca
   662   00033b cd4403          		call	sernib
   663   00033e f1              		pop	af
   664   00033f cd4403          		call	sernib
   665   000342 f1              		pop	af
   666   000343 c9              		ret
   667                          
   668   000344 e60f            sernib:		and	0fh
   669   000346 c630            		add	'0'
   670   000348 fe3a            		cp	'9' + 1
   671   00034a 3802            		jr	c, sernib1
   672   00034c c607            		add	7
   673                          sernib1:
   674                          ;--------------------------------------------------
   675                          ; RS232 out	208 T-States
   676                          ;--------------------------------------------------
   677                          serout:
   678                          		;jp	fastsend
   679   00034e f5              		push	af
   680   00034f c5              		push	bc
   681   000350 47              		ld	b, a
   682   000351 af              		xor	a
   683   000352 f3              		di
   684   000353 d351            		out	(SEROUT), a			;startbit
   685   000355 cd8503          		call	time19600			;17
   686                          
   687   000358 78              		ld	a, b
   688   000359 0608            		ld	b, 8				;7
   689   00035b d351            serout1:	out	(SEROUT), a			;11
   690   00035d cd8503          		call	time19600			;17
   691   000360 0f              		rrca					;4
   692   000361 10f8            		djnz	serout1				;8
   693   000363 fb              		ei
   694   000364 3e01            		ld	a, 1				;7
   695   000366 d351            		out	(SEROUT), a			;11
   696   000368 cd8503          		call	time19600			;17
   697                          
   698   00036b c1              		pop	bc
   699   00036c f1              		pop	af
   700   00036d c9              		ret
   701                          
   702                          
   703                          ;--------------------------------------------------
   704                          ; RS232 in	208 T-States
   705                          ;--------------------------------------------------
   706   00036e c5              serin:		push	bc
   707   00036f db50            serin2:		in	a, (SERIN)
   708   000371 07              		rlca
   709   000372 38fb            		jr	c, serin2
   710                          
   711   000374 e3              		ex	(sp), hl			;19, 4.75uS
   712   000375 e3              		ex	(sp), hl			;19  9uS
   713                          
   714   000376 0680            		ld	b, 80h
   715   000378 cd8503          serin1:		call	time19600
   716   00037b db50            		in	a, (SERIN)
   717   00037d 07              		rlca
   718   00037e cb18            		rr	b
   719   000380 30f6            		jr	nc, serin1
   720                          
   721   000382 78              		ld	a, b
   722   000383 c1              		pop	bc
   723   000384 c9              		ret
   724                          
   725   000385 0e09            time19600:	ld	c, 9				;4
   726   000387 0d              time19600a:	dec	c				;4
   727   000388 20fd            		jr	nz, time19600a			;12/7
   728   00038a c9              		ret					;10
   729                          
   730                          CMDOUT:
   731   00038b d340            		OUT	(CMDREG),A			;OUTPUT DISK CONTROLLER COMMAND BYTE
   732   00038d 3e0e            CMDT1:		LD	A,14
   733   00038f 3d              CMDT2:		DEC	A
   734   000390 20fd            		JR	NZ,CMDT2			;DELAY 56 MICROSECONDS
   735   000392 db40            CMDT3:		in	a, (STSREG)
   736   000394 cb47            		bit	0, a
   737   000396 20fa            		jr	nz, CMDT3
   738   000398 c9              		RET
   739                          
   740                          ;--------------------------------------------------
   741                          ; 11 times port:value
   742                          ;--------------------------------------------------
   743   000399 5001            portval:	db	050h, 001h			;Bit0	set ATARI DATA
   744   00039b 5101            		db	051h, 001h			;Bit1	set RS232 TX
   745   00039d 8003            		db	080h, 003h			;CTC	Channel 0 reset
   746   00039f 8010            		db 	080h, 010h			;CTC	Channel 0 interrupt vector
   747   0003a1 8107            		db	081h, 007h			;CTC	Channel 1 reset + set time constant
   748   0003a3 8101            		db	081h, 001h			;CTC	Channel 1 time contant
   749   0003a5 8203            		db	082h, 003h			;CTC	Channel 2 reset
   750   0003a7 8303            		db	083h, 003h			;CTC	Channel 3 reset
   751   0003a9 5701            		db	057h, 001h			;Bit7	ATARI RXD
   752   0003ab 3050            		db	030h, 050h			;DRIVE CONTROL reset FDC
   753   0003ad 3040            		db	030h, 040h			;DRIVE CONTROL 8Mhz
   754                          
   755                          sallycode	equ	ASMPC
   756                          
