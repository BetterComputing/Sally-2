rolli-0000.asm:
     1                          
     2                          RIDCMD		equ	11000000B	;READ ID COMMAND
     3                          RDCMD		equ	10000000B	;READ COMMAND
     4                          WRTCMD		equ	10100000B	;WRITE COMMAND
     5                          FINCMD		equ	11010000B	;FORCE INTERRUPT COMMAND
     6                          SKCMD		equ	00010000B	;SEEK COMMAND
     7                          RSTCMD		equ	00000000B	;RESTORE COMMAND
     8                          STEPOUT		equ	01100000B	;STEP OUT COMMAND
     9                          STEPIN		equ	01000000B	;STEP IN COMMAND
    10                          HLOAD		equ	00000000B	;HEAD LOAD BIT FOR TYPE 1 COMMANDS
    11                          
    12                          ;
    13                          ;	... DATA STRUCTURE FOR DISK I/O CONTROL BLOCK ...
    14                          ;
    15                          DSKOP		equ	0		;DISK OPERATION CODE
    16                          DSKDRV		equ	1		;DRIVE# (WITH SIDE# IN BIT 7)
    17                          DSKTRK		equ	2		;TRACK#
    18                          DSKSEC		equ	3		;SECTOR#
    19                          DSKPTR		equ	4		;READ/WRITE POINTER
    20                          DSKAUX		equ	6		;AUXILLIARY PARAMETERS (2 BYTES)
    21                          DSKSTS		equ	8		;OPERATION COMPLETION STATUS
    22                          
    23                          putaddr		equ	0f493h
    24                          puthex		equ	0f498h
    25                          coninit		equ	0f5fch
    26                          conin		equ	0f640h
    27                          conout		equ	0f650h
    28                          SELECT		equ	0f110h
    29                          RESTORE		equ	0f23bh
    30                          SEEKTRK		equ	0f1fch
    31                          RWDISK		equ	0f2b6h
    32                          RENEW		equ	0f018h
    33                          WATCHDOG	equ	0f3a8h
    34                          RECOVER		equ	0f30fh
    35                          ACTIVON		equ	0f03ch
    36                          
    37                          dskhandler	equ	0f00fh
    38                          CFRAME		equ	IOBUFF+LEN-5
    39                          iobuflenhi	equ	(IOBUFF+LEN) / 256
    40                          
    41                          DISKID		equ	0f82bh
    42                          DISKTAB		equ	0f83dh
    43                          DRVINDEX	equ	0fc28h
    44                          SENDBUFF	equ	0f66ch
    45                          SENDACK		equ	0fc4ah
    46                          HASPARMS	equ	0fbd3h
    47                          DISKREAD	equ	0f98ch
    48                          XMITBUF		equ	0f684h
    49                          RXBLOCK		equ	0f6d9h
    50                          CMDWAIT		equ	0f7e2h
    51                          
    52                          SIONORMAL	equ	40
    53                          SIOFAST		equ	8
    54                          
    55                          		include "equs.mac"
equs.mac:
     1                          KEYBUF		equ	0ff00h		;16 byte keyboard input fifo
     2                          CTCVEC		equ	0ff10h		;8 word interrupt vector table
     3                          ;
     4                          ;
     5                          ;
     6                          PRINTER		equ	020h		;PRINTER OUTPUT/INPUTS
     7                          LATCH		equ	030h		;DRIVE CONTROL LATCH
     8                          WD179X		equ	040h		;WD TYPE DISK CONTROLLER
     9                          ;
    10                          ;	EQUATES FOR DISK CONTROLLER PORTS AND COMMAND CODES
    11                          ;
    12                          STSREG		equ	WD179X+0	;STATUS REGISTER
    13                          CMDREG		equ	WD179X+0	;COMMAND REGISTER
    14                          TRKREG		equ	WD179X+1	;TRACK REGISTER
    15                          SECREG		equ	WD179X+2	;SECTOR REGISTER
    16                          DATREG		equ	WD179X+3	;DATA REGISTER;
    17                          
    18                          SERIN		equ	050h		;RS232 SERIAL INPUT
    19                          ;
    20                          ATROUT		equ	050h		;ATARI SERIAL OUTPUT
    21                          SEROUT		equ	051h		;RS232 SERIAL OUTPUT
    22                          BANKSW		equ	052h		;ROM BANKSWITCH BIT
    23                          STROBE		equ	053h		;PRINTER STROBE
    24                          INDXCLR		equ	054h		;INDEX CONTROL FLOP CLEAR
    25                          DTR		equ	055h		;DTR OUTPUT CONTROL
    26                          INDXSET		equ	056h		;INDEX CONTROL FLOP SET
    27                          CDMUX		equ	057h		;ATARI CMD/DATA MUX CONTROL
    28                          ;
    29                          ATARI		equ	070h		;ATARI INPUT BITS PORT
    30                          CTC0		equ	080h		;ZILOG COUNTER/TIMER
    31                          CTC1		equ	081h
    32                          CTC2		equ	082h
    33                          CTC3		equ	083h
    34                          ;
    35                          NULL		equ	000h
    36                          CR		equ	00dh
    37                          LF		equ	00ah
    38                          ;
    39                          
rolli-0000.asm:
    56                          		include "global.mac"
global.mac:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	GLOBAL VARIABLES FOR ATARI Z80 ROM		*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          glbvars		equ	0ff20h
     8                          ;
     9                          ;	... GLOBAL VARIABLES FOR PHYSICAL DISK HANDLER ...
    10                          ;
    11                          ;DRVTAB:	DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    12                          ;		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    13                          ;RATES:		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    14                          ;UNIT:		DEFB	0		;CURRENTLY SELECTED DISK#
    15                          ;TRACK:		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    16                          ;DRVOFF:	DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    17                          ;OUTCPY:	DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    18                          ;PERIOD:	DEFW	0		;DISK SPIN PERIOD
    19                          ;HLDTIM:	DEFB	50		;HEAD LOAD DELAY
    20                          ;RWMAX:		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    21                          ;		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    22                          
    23                          DRVTAB:		equ	glbvars		;HEAD POSITIONS FOR 4 DRIVES
    24                          					;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    25                          RATES:		equ	DRVTAB+8	;SETTLING DELAYS / STEP RATES TABLE
    26                          UNIT:		equ	RATES+4		;CURRENTLY SELECTED DISK#
    27                          TRACK:		equ	UNIT+1		;TRACK POSITION OF SELECTED DRIVE
    28                          DRVOFF:		equ	TRACK+1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    29                          OUTCPY:		equ 	DRVOFF+1	;COPY OF DISK CONTROL LATCH
    30                          PERIOD:		equ	OUTCPY+1	;DISK SPIN PERIOD
    31                          HLDTIM:		equ	PERIOD+2	;HEAD LOAD DELAY
    32                          RWMAX:		equ	HLDTIM+1	;MAX NUMBER OF READ/WRITE RETRIES
    33                          EXPANSION	equ	RWMAX+1		;ROOM FOR EXPANSION
    34                          ;
    35                          ;
    36                          ;	... GLOBAL VARIABLES FOR ATARI HANDLER ...
    37                          ;
    38                          ;IDPTR:		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    39                          ;FSMVEC:	DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    40                          ;EXTVEC:	DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    41                          ;NEWLIN:	DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    42                          ;PSMSG:		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    43                          ;PMASKS:	DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    44                          ;		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    45                          ;FMTPTR:	DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    46                          ;PBASE:		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    47                          ;PSIZE:		DEFW	4095		;MAX BUFFER INDEX OFFSET
    48                          ;
    49                          ;glbsize	equ	$-glbvars		;length of initialized variables
    50                          ;        DEFB    73h			; **** Exists in original ROM? ****
    51                          IDPTR:		equ	EXPANSION+4	;POINTER TO DEVICE ID TABLE
    52                          FSMVEC:		equ 	IDPTR+2		;POINTER FOR ATARI TASK STATE MACHINE
    53                          EXTVEC:		equ	FSMVEC+2	;POINTER FOR EXTRA TASK PROCESSOR
    54                          NEWLIN:		equ	EXTVEC+2	;PRINTER NEWLINE CHARACTERS
    55                          PSMSG:		equ	NEWLIN+5	;PRINTER STATUS FRAME
    56                          PMASKS:		equ	PSMSG+4		;MASK ALL BITS BUT 'BUSY'
    57                          					;COMPARE TO ZERO FOR READY
    58                          FMTPTR:		equ	PMASKS+2	;POINTER TO STANDARD FORMAT TABLES
    59                          PBASE:		equ	FMTPTR+2	;PUT PRINT BUFFER AFTER HERE
    60                          PSIZE:		equ	PBASE+2		;MAX BUFFER INDEX OFFSET
    61                          
    62                          glbsize		equ	$-glbvars	;length of initialized variables
    63                          ;
    64                          ;
    65                          ;	*** UNINITIALIZED SCRATCH VARIABLES COME AFTER HERE ***
    66                          ;
    67                          PCOUNT:		EQU 	PSIZE+2		;BYTECOUNT FOR BUFFER
    68                          PINP:		EQU 	PCOUNT+2	;INPUT OFFSET
    69                          POUT:		EQU 	PINP+2		;OUTPUT OFFSET
    70                          CMDFLG:		EQU 	POUT+2		;COMMAND FRAME READY FLAG FROM IRQ
    71                          DMATRIX:	EQU 	CMDFLG+1    	;DRIVE POOP TABLES
    72                          OLDPTR:		EQU 	DMATRIX+64	;POINTER TO FIRST DRIVE ACCESSED
    73                          DKIOCB:		EQU 	OLDPTR+2	;DISK I/O COMMAND BLOCK
    74                          DRWCMD:		EQU 	DKIOCB+16	;R/W COMMAND FROM ATARI TO 'DISKIO'
    75                          LOGSIZ:		EQU 	DRWCMD+1	;LOGICAL SECTOR LENGTH FOR XFER
    76                          IDBUF:		EQU	LOGSIZ+2	;BUFFER FOR ID MARK READS
    77                          IOPTR:		EQU 	IDBUF+8		;ATARI BLOCK INPUT POINTER
    78                          VFLAG:		EQU 	IOPTR+2		;VERIFY FLAG FOR DISK WRITES
    79                          
    80                          ;
    81                          ;
    82                          ;	... VARIABLES FOR DISK FORMAT FUNCTION ...
    83                          ;
    84                          FMTSTUFF	EQU	VFLAG+1
    85                          FRMPTR:		EQU 	VFLAG+1			;POINTER TO FORMAT DATA TABLE
    86                          SKWPTR:		EQU 	FRMPTR+2		;POINTER TO SKEW TABLE
    87                          NSECTS:		EQU 	SKWPTR+2		;NUMBER OF SECTORS
    88                          TRKSIZ:		EQU 	NSECTS+1		;TRACK LENGTH IN BYTES
    89                          FMTLEN		EQU	(TRKSIZ+2)-FMTSTUFF
    90                          
    91                          sides:		EQU 	TRKSIZ+2		;copy of 'nsides' for drive#
    92                          tracks:		EQU 	sides+1			;copy of 'ntrks' for drive#
    93                          SEQNUM:		EQU 	tracks+1		;TEMP SECTOR SEQUENCE NUMBER
    94                          SEQPTR:		EQU 	SEQNUM+2		;TEMP ERROR LOG TABLE POINTER
    95                          TRKPTR:		EQU 	SEQPTR+2		;POINTER TO START OF TRACK IMAGE
    96                          
    97                          ;
    98                          ;	... LOCAL VARIABLES FOR DISK HANDLER ...
    99                          ;
   100                          CMDBYT:		EQU 	TRKPTR+2		;COMMAND BYTE FOR READS/WRITES
   101                          RWTRY:		EQU	CMDBYT+1		;READ/WRITE RETRY COUNT
   102                          TICKS:		EQU	RWTRY+1			;FREE RUNNING MILISECOND COUNTER
   103                          DRVTMR:		EQU	TICKS+2			;DISK ACTIVITY TIMER
   104                          ;
   105                          ;
   106                          ;
   107                          ;
   108                          IOBUFF		EQU	0C100H			;ATARI I/O BUFFER
   109                          LEN		EQU	512
   110                          ;
   111                          TRKBUF		EQU	IOBUFF+LEN		;TRACK BUFFER FOR READS
   112                          ;
   113                          
   114                          ;
   115                          ;
   116                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
   117                          ;
   118                          NTRKS	EQU	0		;NUMBER OF TRACKS
   119                          STEPRT	EQU	1		;STEP RATE
   120                          NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
   121                          NSIDES	EQU	4		;NUMBER OF SIDES
   122                          MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
   123                          SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
   124                          DSKBITS	EQU	8		;MISC NAUGHTY BITS
   125                          SPARE0	EQU	9
   126                          SPARE1	EQU	10
   127                          SPARE2	EQU	11
   128                          
   129                          CMDSTS	EQU	12		;COMMAND STATUS
   130                          HDWSTS	EQU	13		;HARDWARE STATUS
   131                          
   132                          FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
   133                          SPARE3	EQU	15
   134                          ;
   135                          ;
   136                          ;	EQUATES FOR BITS IN 'MEDIA' BYTE
   137                          ;
   138                          SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
   139                          DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
   140                          ;
   141                          ;
   142                          ;	EQUATES FOR BITS IN 'DSKBITS' BYTE
   143                          ;
   144                          PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
   145                          ;
   146                          ;
   147                          ;	EQUATES FOR BITS IN 'CMDSTS' BYTE
   148                          ;
   149                          BADCMD	EQU	0		;BAD COMMAND FRAME BIT
   150                          BADDAT	EQU	1		;BAD DATA FRAME BIT
   151                          BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
   152                          WRPROT	EQU	3		;WRITE PROTECTED BIT
   153                          ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
   154                          SEC256	EQU	5		;LONG/SHORT SECTOR BIT
   155                          ;
   156                          ;
   157                          ;	EQUATES FOR BITS IN 'FLAGS' BYTE
   158                          ;
   159                          FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
   160                          CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
   161                          
rolli-0000.asm:
    57                          
    58                          ;--------------------------------------------------
    59                          ; Code executed after Reset
    60                          ;--------------------------------------------------
    61                          		ORG	00000h
    62   000000 c31500          		jp	reset
    63   000003 c32803          		jp	serin
    64   000006 c30a03          		jp	serout
    65   000009 c3f102          		jp	serhex
    66   00000c c3be02          		jp	sercmd
    67   00000f c3a402          		jp	serdump
    68   000012 c36802          		jp	fastrecv
    69                          ;
    70   000015 f3              reset:		di      				;disable interrupt
    71   000016 af              		xor     a				;set a to zero
    72   000017 3d              restime:	dec     a				;do 256 times nothing
    73   000018 20fd            		jr      nz, restime			;loop
    74                          
    75   00001a 21ed00          		ld      hl, portval			;init 11 ports with values at 0a3h
    76   00001d 060b            		ld      b, 0bh
    77   00001f 4e              portinit:	ld      c, (hl)
    78   000020 23              		inc     hl
    79   000021 eda3            		outi
    80   000023 20fa            		jr      nz, portinit			; loop
    81                          
    82                          
    83   000025 2100f0          		ld      hl,0f000h          		;test ram @F000-FFFF
    84   000028 3e01            		ld      a, 01h             		;write 1,2,4,8,16,32,64,128
    85   00002a 0610            testram2:	ld      b, 10h
    86   00002c 77              testram:	ld      (hl),a
    87   00002d 07              		rlca
    88   00002e 2c              		inc     l
    89   00002f 20fb            		jr      nz, testram
    90   000031 24              		inc     h
    91   000032 10f8            		djnz    testram
    92                          
    93   000034 0e10            		ld      c, 10h
    94   000036 2b              testram1:	dec     hl
    95   000037 0f              		rrca
    96   000038 be              		cp      (hl)
    97   000039 20fe            ramerr:		jr      nz, ramerr			;if error, loop forever
    98   00003b 10f9            		djnz    testram1
    99   00003d 0d              		dec     c
   100   00003e 20f6            		jr      nz, testram1
   101   000040 87              		add     a, a
   102   000041 20e7            		jr      nz, testram2
   103                          
   104   000043 215a03          		ld      hl, sallycode			;copy BIOS 0f000h
   105   000046 1100f0          		ld      de, 0f000h			;length always 0f00h
   106   000049 01000f          		ld      bc, 00f00h
   107   00004c edb0            		ldir
   108   00004e 215612          		ld      hl, sallycode+0efch		;copy initial values to 0ff20h
   109   000051 1120ff          		ld      de, 0ff20h			;length $2F
   110   000054 012f00          		ld      bc, 002fh
   111   000057 edb0            		ldir
   112                          
   113   000059 af              		xor     a				;fill up to $FFFF with zeros
   114   00005a 12              ramfill:	ld      (de),a
   115   00005b 1c              		inc     e
   116   00005c 20fc            		jr      nz, ramfill
   117                          
   118   00005e 3110ff          		ld      sp, 0ff10h			;stack-pointer to 0ff10h
   119                          
   120   000061 3eff            		ld      a, 0ffh				;load interrupt-vector register
   121   000063 ed47            		ld      i, a				;with 0ffh
   122   000065 ed5e            		im      2				;enable interrupt mode 2 (vectored)
   123                          
   124                          ;--------------------------------------------------
   125                          ; step 5 times in and then out to trk00
   126                          ; set bit 6 for each online floppy in ff5eh
   127                          ; percom block (16 bytes, byte 8 bit 6)
   128                          ;--------------------------------------------------
   129   000067 3e4f            		ld      a, 4fh				;select drive 1-4, Motor off, side 0, B/S=1, DD
   130   000069 d330            		out     (LATCH),a
   131                          
   132   00006b 57              		ld      d, a				;d = 4fh
   133   00006c 0605            		ld      b, 5				;step 5 times
   134                          stepin:
   135   00006e 3e49            		ld      a, 49h				;4b = 0100 1011 = step-in
   136   000070 cddf00          		call    CMDOUT				;write A to FDC command and wait
   137   000073 10f9            		djnz    stepin
   138                          
   139   000075 0664            		ld      b, 64h				;seek track 00 for all 4 drives
   140   000077 7a              outloop1:	ld      a, d				;select all drives
   141   000078 d330            		out     (LATCH),a
   142   00007a e3              		ex      (sp),hl				;???
   143   00007b e3              		ex      (sp),hl				;???
   144   00007c 3e69            		ld      a, 69h				;step out
   145   00007e cddf00          		call    CMDOUT				;write A to FDC command and wait
   146                          
   147   000081 1e01            		ld      e, 01h
   148   000083 7b              outloop:	ld      a, e
   149   000084 f640            		or      40h
   150   000086 d330            		out     (LATCH), a			;select one drive
   151   000088 e3              		ex      (sp), hl
   152   000089 e3              		ex      (sp), hl
   153                          ;		call    0f391h				;stop command, get status
   154   00008a db40            		in	a, (STSREG)
   155   00008c cb57            		bit     2, a
   156   00008e 2804            		jr      z, excldrv			;bit not set, not at track 00
   157   000090 7b              		ld      a, e				;drive at track 00
   158   000091 2f              		cpl     				;exclude drive from seeking
   159   000092 a2              		and     d
   160   000093 57              		ld      d, a
   161                          excldrv:
   162   000094 cb23            		sla     e
   163   000096 cb63            		bit     4, e
   164   000098 28e9            		jr      z, outloop			;status checked for all 4 drives?
   165   00009a 10db            		djnz    outloop1			;step out again
   166                          
   167                          ;		call    0f068h				;deselect floppies and seek current track?
   168   00009c 3e50            		ld	a, 50h				;reset FDC and deselct
   169   00009e d330            		out	(LATCH), a
   170   0000a0 3e40            		ld	a, 40h				;reset FDC and deselct
   171   0000a2 d330            		out	(LATCH), a
   172                          
   173   0000a4 215eff          		ld      hl, 0ff5eh			;set bit for each connected floppy?
   174   0000a7 011000          		ld      bc, 0010h
   175   0000aa 3e04            		ld      a, 04h
   176   0000ac cb1a            nextdrv:	rr      d
   177   0000ae 3802            		jr      c, noset
   178   0000b0 cbf6            		set     6, (hl)
   179   0000b2 09              noset:		add     hl, bc
   180   0000b3 3d              		dec     a
   181   0000b4 20f6            		jr      nz, nextdrv
   182                          
   183                          
   184   0000b6 210000          		ld	hl, 00000h			; source
   185   0000b9 110080          		ld	de, 08000h			; dest
   186   0000bc 010020          		ld	bc, 02000h
   187   0000bf edb0            		ldir
   188   0000c1 21c700          		ld	hl, code8000
   189   0000c4 cbfc            		set	7, h
   190   0000c6 e9              		jp	(hl)
   191   0000c7 3e01            code8000:	ld	a, 1
   192   0000c9 d352            		out	(BANKSW), a
   193   0000cb 210080          		ld	hl, 08000h
   194   0000ce 110000          		ld	de, 00000h
   195   0000d1 010020          		ld	bc, 02000h
   196   0000d4 edb0            		ldir
   197   0000d6 c3d900          		jp	code0000
   198                          
   199                          code0000:
   200   0000d9 3100c1          		ld      sp, 0c100h			;set stack to 0c100h
   201                          ;		call	sercr
   202                          ;		call	sercr
   203                          ;		jp      0f762h				;jump to code in DRAM
   204                          ;		jp	0f003h
   205   0000dc c30301          		jp	main
   206                          
   207                          CMDOUT:
   208   0000df d340            		OUT	(CMDREG),A			;OUTPUT DISK CONTROLLER COMMAND BYTE
   209   0000e1 3e0e            CMDT1:		LD	A,14
   210   0000e3 3d              CMDT2:		DEC	A
   211   0000e4 20fd            		JR	NZ,CMDT2			;DELAY 56 MICROSECONDS
   212   0000e6 db40            CMDT3:		in	a, (STSREG)
   213   0000e8 cb47            		bit	0, a
   214   0000ea 20fa            		jr	nz, CMDT3
   215   0000ec c9              		RET
   216                          
   217                          ;--------------------------------------------------
   218                          ; 11 times port:value
   219                          ;--------------------------------------------------
   220   0000ed 5001            portval:	db	050h, 001h			;Bit0	set ATARI DATA
   221   0000ef 5101            		db	051h, 001h			;Bit1	set RS232 TX
   222   0000f1 8003            		db	080h, 003h			;CTC	Channel 0 reset
   223   0000f3 8010            		db 	080h, 010h			;CTC	Channel 0 interrupt vector
   224   0000f5 8107            		db	081h, 007h			;CTC	Channel 1 reset + set time constant
   225   0000f7 8101            		db	081h, 001h			;CTC	Channel 1 time contant
   226   0000f9 8203            		db	082h, 003h			;CTC	Channel 2 reset
   227   0000fb 8303            		db	083h, 003h			;CTC	Channel 3 reset
   228   0000fd 5701            		db	057h, 001h			;Bit7	ATARI RXD
   229   0000ff 3050            		db	030h, 050h			;DRIVE CONTROL reset FDC
   230   000101 3040            		db	030h, 040h			;DRIVE CONTROL 8Mhz
   231                          
   232   000103 213ff8          main:		ld	hl, DISKTAB+2
   233   000106 11e001          		ld	de, disktab+3
   234   000109 011500          		ld	bc, 3*7
   235   00010c edb0            		ldir
   236                          
   237   00010e 210800          		ld	hl, 8
   238   000111 22dd01          		ld	(disktab),hl
   239   000114 3e3f            		ld	a, '?'
   240   000116 32df01          		ld	(disktab+2), a
   241   000119 eb              		ex	de, hl
   242                          
   243   00011a 3e69            		ld	a, getspeed & 255
   244   00011c 77              		ld	(hl), a
   245   00011d 23              		inc	hl
   246   00011e 3e01            		ld	a, getspeed / 256
   247   000120 77              		ld	(hl), a
   248                          
   249   000121 21dd01          		ld	hl, disktab
   250   000124 222bf8          		ld	(DISKID), hl
   251   000127 222df8          		ld	(DISKID+2), hl
   252   00012a 222ff8          		ld	(DISKID+4), hl
   253   00012d 2231f8          		ld	(DISKID+6), hl
   254                          
   255   000130 3ec3            		ld	a, 0c3h				;'JP' instruction
   256   000132 3284f6          		ld	(XMITBUF), a
   257   000135 32d9f6          		ld	(RXBLOCK), a
   258   000138 32e2f7          		ld	(CMDWAIT), a
   259                          
   260   00013b 21ab01          		ld	hl, xmitbuf
   261   00013e 2285f6          		ld	(XMITBUF+1), hl
   262   000141 21ca01          		ld	hl, rxblock
   263   000144 22daf6          		ld	(RXBLOCK+1), hl
   264   000147 218001          		ld	hl, cmdwait
   265   00014a 22e3f7          		ld	(CMDWAIT+1), hl
   266                          
   267   00014d 3e28            		ld	a, SIONORMAL
   268   00014f 32fd01          		ld	(pokeydiv), a
   269                          
   270   000152 21dd01          		ld	hl, disktab
   271   000155 111a00          		ld	de, 8*3+2
   272   000158 cda402          		call	serdump
   273                          
   274                          
   275   00015b 0e41            		ld	c, 'A'
   276   00015d cd4302          testfast:	call	fastsend
   277   000160 0c              		inc	c
   278   000161 79              		ld	a, c
   279   000162 fe5b            		cp	'Z' + 1
   280   000164 38f7            		jr	c, testfast
   281                          
   282   000166 c362f7          		jp	0f762h
   283                          
   284                          
   285                          ;--------------------------------------------------
   286                          ; get Pokeydivisor command '?'
   287                          ;--------------------------------------------------
   288   000169 3e3f            getspeed:	ld	a, '?'
   289   00016b cd0a03          		call	serout
   290                          
   291   00016e cd28fc          		call	DRVINDEX			;POINT IY TO DRIVE'S DATA AREA
   292   000171 d8              		ret	C				;EXIT IF NOT A DRIVE IN OUR BOX
   293                          
   294                          ;		call	HASPARMS
   295                          ;		ret	Z				;EXIT IF DISK PARAMS NOT KNOWN
   296                          
   297   000172 cd4afc          		call	SENDACK				;SEND 'ACK' FOR COMMAND FRAME
   298                          
   299   000175 21ffc2          		ld	hl, IOBUFF+LEN-1
   300   000178 3608            		ld	(hl), SIOFAST
   301   00017a 114300          		ld	de, 'C'
   302   00017d c36cf6          		jp	SENDBUFF			;SEND 'C' AND PARAMS DATA FRAME
   303                          
   304                          
   305   000180 3a55ff          cmdwait:	ld	a, (CMDFLG)
   306   000183 b7                              or	a				;SEE IF COMMAND FRAME HAS ARRIVED
   307   000184 c8                              ret	z				;EXIT IF NOTHING HAS HAPPENED
   308                          
   309   000185 f5              		push	af
   310   000186 e5              		push	hl
   311   000187 d5              		push	de
   312   000188 21fbc2          		ld	hl, CFRAME
   313   00018b 110500          		ld	de, 5
   314   00018e cda402          		call	serdump
   315   000191 d1              		pop	de
   316   000192 e1              		pop	hl
   317   000193 f1              		pop	af
   318                          
   319   000194 cdf102          		call	serhex
   320                          
   321   000197 fe01                            cp	1
   322   000199 c29f01                          jp	nz, cmdwait1
   323                          
   324   00019c c3f3f7          		jp	0f7f3h				;PROCESS COMMAND IF GOOD FRAME RECVD
   325                          
   326   00019f f3              cmdwait1:       di					;ELSE RESET INTERRUPT AND START AGAIN
   327   0001a0 3e03                            ld	a, 00000011B
   328   0001a2 d380                            out	(CTC0),A
   329   0001a4 fb                              ei
   330                          
   331   0001a5 cdfe01          		call	togglebaud
   332                          
   333   0001a8 c309f8          		jp	0f809h
   334                          
   335                          
   336                          
   337   0001ab 3afd01          xmitbuf:	ld	a, (pokeydiv)			;is fast?
   338   0001ae fe28            		cp	SIONORMAL
   339   0001b0 2007            		jr	nz, xmitbuf1			;yes, jump
   340   0001b2 f3              		di					;no
   341   0001b3 0115f7          		ld	bc, 0f715h
   342   0001b6 c388f6          		jp	XMITBUF+4
   343                          
   344   0001b9 7e              xmitbuf1:	ld	a, (hl)
   345   0001ba 23              		inc	hl
   346   0001bb aa              		xor	d
   347   0001bc 4f              		ld	c, a
   348   0001bd 83              		add	a, e
   349   0001be ce00            		adc	0
   350   0001c0 5f              		ld	e, a
   351   0001c1 cd4302          		call	fastsend			;send byte in c
   352   0001c4 7c              		ld	a, h
   353   0001c5 fec3            		cp	iobuflenhi
   354   0001c7 38f0            		jr	c, xmitbuf1			;loop if buffer end not reached
   355   0001c9 c9              		ret
   356                          
   357                          
   358   0001ca 3afd01          rxblock:	ld	a, (pokeydiv)			;is fast?
   359   0001cd fe28            		cp	SIONORMAL
   360   0001cf c2d801          		jp	nz, rxblock1
   361   0001d2 010000          		ld	bc, 0
   362   0001d5 c307f7          		jp	0f707h
   363                          
   364   0001d8 cd6802          rxblock1:	call	fastrecv
   365   0001db 4a              		ld	c, d
   366   0001dc c9              		ret
   367                          ;
   368                          ; 32 bytes for disktab
   369                          ;
   370   0001dd 0000000000000000disktab:	dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
   371   0001ed 0000000000000000		dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
   372                          
   373   0001fd 28              pokeydiv:	db	SIONORMAL
   374                          
   375   0001fe 3afd01          togglebaud:	ld	a, (pokeydiv)
   376   000201 fe28            		cp	SIONORMAL
   377   000203 3e08            		ld	a, SIOFAST
   378   000205 2802            		jr	z, togglebaud1
   379   000207 3e28            		ld	a, SIONORMAL
   380   000209 32fd01          togglebaud1:	ld	(pokeydiv), a
   381   00020c cdf102          		call	serhex
   382   00020f c3df02          		jp	sercr
   383                          
   384                          
   385   000212 cd3702          		call	clear
   386   000215 2100c1          		ld	hl, IOBUFF
   387   000218 cde702          		call	seraddr
   388                          
   389                          
   390   00021b 2100c1          serloop:	ld	hl, IOBUFF
   391   00021e cd6802          		call	fastrecv
   392                          
   393   000221 3e03            		ld	a, 00000011B			;reset timer
   394   000223 d383            		out	(CTC3), a
   395   000225 4a              		ld	c, d
   396                          
   397   000226 da0301          		jp	c, main
   398                          
   399   000229 1100c1          		ld	de, IOBUFF
   400   00022c ed52            		sbc	hl, de
   401   00022e 28eb            		jr	z, serloop
   402   000230 eb              serloop2:	ex	de, hl
   403                          ;		ld	(hl), c
   404   000231 cda402          		call	serdump
   405                          
   406   000234 c30301          		jp	main
   407                          
   408   000237 2100c1          clear:		ld	hl, IOBUFF
   409   00023a af              clear1:		xor	a
   410   00023b 77              		ld	(hl), a
   411   00023c 23              		inc	hl
   412   00023d 7c              		ld	a, h
   413   00023e fec3            		cp 	iobuflenhi
   414   000240 20f8            		jr	nz, clear1
   415   000242 c9              		ret
   416                          
   417                          
   418   000243 af              fastsend:	xor	a
   419   000244 d350            		out	(ATROUT), a
   420   000246 cd5f02          		call	time				;11
   421   000249 79              		ld	a, c				;4
   422   00024a 0608            		ld	b, 8				;7
   423   00024c 00              		nop					;4
   424   00024d 00              		nop					;4
   425   00024e 00              		nop					;4
   426                          
   427   00024f d350            fastsend1:	out	(ATROUT), a			;11
   428   000251 0f              		rrca					;4
   429   000252 cd5f02          		call	time				;17
   430   000255 10f8            		djnz	fastsend1			;12
   431                          
   432   000257 3e01            		ld	a, 1
   433   000259 d350            		out	(ATROUT), a
   434                          
   435   00025b e3              		ex	(sp), hl			;19
   436   00025c e3              		ex	(sp), hl			;19
   437   00025d e3              		ex	(sp), hl			;19
   438   00025e e3              		ex	(sp), hl			;19
   439                          
   440   00025f 00              time:		nop					;4
   441   000260 00              		nop					;4
   442   000261 00              		nop					;4
   443   000262 00              		nop					;4
   444   000263 c9              		ret					;10 = 26
   445                          
   446                          ;--------------------------------------------------
   447                          ; set 4ms watchdog
   448                          ;--------------------------------------------------
   449   000264 f1              irq4ms:		pop	af				;pop irq-addr
   450                          ;		ld	a, 00000011B			;reset timer
   451                          ;		out	(CTC3), a
   452   000265 b7              		or	a				;clear carry
   453   000266 ed4d            		reti
   454                          
   455                          ;--------------------------------------------------
   456                          ; SIO receive 57600 baud
   457                          ;--------------------------------------------------
   458                          fastrecv:
   459   000268 f3              		di
   460   000269 016402          		ld	bc, irq4ms
   461   00026c ed4316ff        		ld	(CTCVEC+6),bc			;SET VECTOR TO irq4ms ROUTINE
   462   000270 018300          		ld	bc, CTC3			;clear b, load c with CTC3
   463   000273 11a700          		ld	de, 10100111B			;clear d, load e with a7h
   464   000276 ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
   465   000278 ed49            		out	(c), c
   466   00027a fb              		ei
   467                          
   468   00027b db70            fastrecv1:	in	a, (ATARI)			;11
   469   00027d 17              		rla					;4
   470   00027e da7b02          		jp	c, fastrecv1			;10	NEW BYTE IS COMING IF START BIT LOW
   471                          							;14-25 / 7
   472   000281 7a              		ld	a, d				;4
   473   000282 80              		add	a, b				;4
   474   000283 ce00            		adc	a, 0				;7 ACCUMULATE CHECKSUM ATARI STYLE
   475   000285 57              		ld	d, a				;4
   476                          
   477   000286 067f            		ld	b, 07fh				;7
   478   000288 c38d02          		jp	fastrecv2a			;10 = 50
   479                          ;
   480                          ; SERIAL->PARALLEL CONVERSION AT 17,36 MICROSECONDS PER BIT
   481                          ;
   482   00028b f5              fastrecv2:	push	af				; 11
   483   00028c f1              		pop	af				; 10
   484   00028d 7e              fastrecv2a:	ld	a, (hl)				; 7
   485   00028e 7e              		ld	a, (hl)				; 7
   486                          
   487   00028f db70            		in	a, (ATARI)			; 11 CYCLES
   488   000291 17              		rla					;  4 CYCLES
   489   000292 cb18            		rr	b				;  8 CYCLES
   490   000294 38f5            		jr	c, fastrecv2			; 12/7
   491                          
   492   000296 70              		ld	(hl), b				;7 THEN STORE IN MEMORY BUFFER @HL
   493   000297 23              		inc	hl				;6
   494   000298 7c              		ld	a, h				;4
   495   000299 fec3            		cp	iobuflenhi			;7
   496   00029b 3f              		ccf					;4
   497   00029c d8              		ret	c				;5 RETURN WITH CARRY SET IF BUFFER FILLED
   498                          
   499   00029d ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
   500   00029f ed49            		out	(c), c				;12 COUNT MOD 256
   501                          
   502   0002a1 c37b02          		jp	fastrecv1			;10
   503                          
   504                          
   505                          ;--------------------------------------------------
   506                          ; RS232 dump
   507                          ;--------------------------------------------------
   508                          serdump:	;call	seraddr
   509                          ;		ex	de, hl
   510                          ;		call	seraddr
   511                          ;		ex	de, hl
   512                          ;		ld	a, c
   513                          ;		call	serhex
   514                          ;		call	sercr
   515                          
   516                          ;		ld	hl, IOBUFF
   517                          ;		ld	de, 256
   518   0002a4 0610            serdump2:	ld	b, 16
   519   0002a6 7e              serdump1:	ld	a, (hl)
   520   0002a7 cdf102          		call	serhex
   521   0002aa cdd702          		call	serspace
   522   0002ad 23              		inc	hl
   523   0002ae 1b              		dec	de
   524   0002af 7a              		ld	a, d
   525   0002b0 b3              		or	a, e
   526   0002b1 2807            		jr	z, serdump3
   527   0002b3 10f1            		djnz	serdump1
   528   0002b5 cddf02          		call	sercr
   529   0002b8 18ea            		jr	serdump2
   530                          serdump3:;	call	sercr
   531                          	;	ld	a, (hl)
   532                          	;	call	serhex
   533   0002ba cddf02          		call	sercr
   534   0002bd c9              		ret
   535                          
   536                          
   537                          ;--------------------------------------------------
   538                          ; RS232 sercmd
   539                          ;--------------------------------------------------
   540   0002be f5              sercmd:		push	af
   541   0002bf c5              		push	bc
   542   0002c0 e5              		push	hl
   543   0002c1 21fbc2          		ld	hl, CFRAME
   544   0002c4 0605            		ld	b, 5
   545   0002c6 7e              sercmd1:	ld	a, (hl)
   546   0002c7 cdf102          		call	serhex
   547   0002ca cdd702          		call	serspace
   548   0002cd 23              		inc	hl
   549   0002ce 10f6            		djnz	sercmd1
   550   0002d0 cddf02          		call	sercr
   551   0002d3 e1              		pop	hl
   552   0002d4 c1              		pop	bc
   553   0002d5 f1              		pop	af
   554   0002d6 c9              		ret
   555                          
   556                          ;--------------------------------------------------
   557                          ; RS232 <space>
   558                          ;--------------------------------------------------
   559   0002d7 f5              serspace:	push	af
   560   0002d8 3e20            		ld	a, ' '
   561   0002da cd0a03          		call	serout
   562   0002dd f1              		pop	af
   563   0002de c9              		ret
   564                          
   565                          ;--------------------------------------------------
   566                          ; RS232 <CR>
   567                          ;--------------------------------------------------
   568   0002df f5              sercr:		push	af
   569   0002e0 3e0d            		ld	a, '\r'
   570   0002e2 cd0a03          		call	serout
   571   0002e5 f1              		pop	af
   572   0002e6 c9              		ret
   573                          
   574                          ;--------------------------------------------------
   575                          ; RS232 output HL in hex
   576                          ;--------------------------------------------------
   577   0002e7 7c              seraddr:	ld	a, h
   578   0002e8 cdf102          		call	serhex
   579   0002eb 7d              		ld	a, l
   580   0002ec cdf102          		call	serhex
   581   0002ef 18e6            		jr	serspace
   582                          ;--------------------------------------------------
   583                          ; RS232 output A in hex
   584                          ;--------------------------------------------------
   585   0002f1 f5              serhex:		push	af
   586   0002f2 f5              		push	af
   587   0002f3 0f              		rrca
   588   0002f4 0f              		rrca
   589   0002f5 0f              		rrca
   590   0002f6 0f              		rrca
   591   0002f7 cd0003          		call	sernib
   592   0002fa f1              		pop	af
   593   0002fb cd0003          		call	sernib
   594   0002fe f1              		pop	af
   595   0002ff c9              		ret
   596                          
   597   000300 e60f            sernib:		and	0fh
   598   000302 c630            		add	'0'
   599   000304 fe3a            		cp	'9' + 1
   600   000306 3802            		jr	c, sernib1
   601   000308 c607            		add	7
   602                          sernib1:
   603                          ;--------------------------------------------------
   604                          ; RS232 out	208 T-States
   605                          ;--------------------------------------------------
   606                          serout:
   607                          		;jp	fastsend
   608                          
   609   00030a f5              		push	af
   610   00030b c5              		push	bc
   611   00030c 47              		ld	b, a
   612   00030d af              		xor	a
   613   00030e d351            		out	(SEROUT), a			;startbit
   614   000310 cd3f03          		call	time19600			;17
   615                          
   616   000313 78              		ld	a, b
   617   000314 0608            		ld	b, 8				;7
   618   000316 d351            serout1:	out	(SEROUT), a			;11
   619   000318 cd3f03          		call	time19600			;17
   620   00031b 0f              		rrca					;4
   621   00031c 10f8            		djnz	serout1				;8
   622                          
   623   00031e 3e01            		ld	a, 1				;7
   624   000320 d351            		out	(SEROUT), a			;11
   625   000322 cd3f03          		call	time19600			;17
   626                          
   627   000325 c1              		pop	bc
   628   000326 f1              		pop	af
   629   000327 c9              		ret
   630                          
   631                          
   632                          ;--------------------------------------------------
   633                          ; RS232 in	208 T-States
   634                          ;--------------------------------------------------
   635   000328 c5              serin:		push	bc
   636   000329 db50            serin2:		in	a, (SERIN)
   637   00032b 07              		rlca
   638   00032c 38fb            		jr	c, serin2
   639                          
   640   00032e e3              		ex	(sp), hl			;19, 4.75uS
   641   00032f e3              		ex	(sp), hl			;19  9uS
   642                          
   643   000330 0680            		ld	b, 80h
   644   000332 cd3f03          serin1:		call	time19600
   645   000335 db50            		in	a, (SERIN)
   646   000337 07              		rlca
   647   000338 cb18            		rr	b
   648   00033a 30f6            		jr	nc, serin1
   649                          
   650   00033c 78              		ld	a, b
   651   00033d c1              		pop	bc
   652   00033e c9              		ret
   653                          
   654   00033f 0e09            time19600:	ld	c, 9				;4
   655   000341 0d              time19600a:	dec	c				;4
   656   000342 20fd            		jr	nz, time19600a			;12/7
   657   000344 c9              		ret					;10
   658                          
   659                          ;		DI
   660                          ;		LD	A,10000111B
   661                          ;		OUT	(CTC3),A
   662                          ;		LD	A,250
   663                          ;		OUT	(CTC3),A
   664                          ;		LD	HL,TMRIRQ
   665                          ;		LD	(CTCVEC+6),HL
   666                          ;		EI
   667                          
   668                          
   669                          ;		ld	ix, dcb
   670                          ;		call	dskhandler
   671                          ;		ld	hl, dcb
   672                          ;		ld	b, 9
   673                          ;loop1:		ld	a, (hl)
   674                          ;		call	puthex
   675                          ;		inc	hl
   676                          ;		djnz	loop1
   677                          ;
   678                          ;		jp	dskloop
   679                          
   680                          ;
   681                          ;
   682                          ;
   683                          TMRIRQ:
   684   000345 e5              	PUSH	HL
   685   000346 fb              	EI
   686   000347 2ac7ff          	LD	HL,(TICKS)
   687   00034a 23              	INC	HL		;BUMP FREE RUNING MILLISECOND COUNTER
   688   00034b 22c7ff          	LD	(TICKS),HL
   689   00034e e1              	POP	HL
   690   00034f ed4d            	RETI
   691                          
   692                          
   693                          
   694                          
   695   000351 00              dcb:		db	0				;DISK OPERATION CODE
   696   000352 00              		db	0				;DRIVE# (WITH SIDE# IN BIT 7)
   697   000353 00              		db	0				;TRACK#
   698   000354 01              		db	1				;SECTOR#
   699   000355 0080            		dw	8000h				;READ/WRITE POINTER
   700   000357 8000            		dw	128				;AUXILLIARY PARAMETERS (2 BYTES)
   701   000359 00              		db	0				;OPERATION COMPLETION STATUS
   702                          
   703                          sallycode	equ	ASMPC
   704                          
