rolli-f000.asm:
     1                          		ORG	0f000h
     2                          ;
     3                          ;
     4                          ;
     5                          		INCLUDE	"EQUS.MAC"
EQUS.MAC:
     1                          KEYBUF		equ	0ff00h		;16 byte keyboard input fifo
     2                          CTCVEC		equ	0ff10h		;8 word interrupt vector table
     3                          ;
     4                          ;
     5                          ;
     6                          PRINTER		equ	020h		;PRINTER OUTPUT/INPUTS
     7                          LATCH		equ	030h		;DRIVE CONTROL LATCH
     8                          WD179X		equ	040h		;WD TYPE DISK CONTROLLER
     9                          ;
    10                          ;	EQUATES FOR DISK CONTROLLER PORTS AND COMMAND CODES
    11                          ;
    12                          STSREG		equ	WD179X+0	;STATUS REGISTER
    13                          CMDREG		equ	WD179X+0	;COMMAND REGISTER
    14                          TRKREG		equ	WD179X+1	;TRACK REGISTER
    15                          SECREG		equ	WD179X+2	;SECTOR REGISTER
    16                          DATREG		equ	WD179X+3	;DATA REGISTER;
    17                          
    18                          SERIN		equ	050h		;RS232 SERIAL INPUT
    19                          ;
    20                          ATROUT		equ	050h		;ATARI SERIAL OUTPUT
    21                          SEROUT		equ	051h		;RS232 SERIAL OUTPUT
    22                          BANKSW		equ	052h		;ROM BANKSWITCH BIT
    23                          STROBE		equ	053h		;PRINTER STROBE
    24                          INDXCLR		equ	054h		;INDEX CONTROL FLOP CLEAR
    25                          DTR		equ	055h		;DTR OUTPUT CONTROL
    26                          INDXSET		equ	056h		;INDEX CONTROL FLOP SET
    27                          CDMUX		equ	057h		;ATARI CMD/DATA MUX CONTROL
    28                          ;
    29                          ATARI		equ	070h		;ATARI INPUT BITS PORT
    30                          CTC0		equ	080h		;ZILOG COUNTER/TIMER
    31                          CTC1		equ	081h
    32                          CTC2		equ	082h
    33                          CTC3		equ	083h
    34                          ;
    35                          NULL		equ	000h
    36                          CR		equ	00dh
    37                          LF		equ	00ah
    38                          ;
    39                          
rolli-f000.asm:
     6                          		INCLUDE	"GLOBAL.MAC"
GLOBAL.MAC:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	GLOBAL VARIABLES FOR ATARI Z80 ROM		*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          glbvars	equ	0ff20h
     8                          ;
     9                          ;	... GLOBAL VARIABLES FOR PHYSICAL DISK HANDLER ...
    10                          ;
    11                          ;DRVTAB:	DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    12                          ;		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    13                          ;RATES:		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    14                          ;UNIT:		DEFB	0		;CURRENTLY SELECTED DISK#
    15                          ;TRACK:		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    16                          ;DRVOFF:	DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    17                          ;OUTCPY:	DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    18                          ;PERIOD:	DEFW	0		;DISK SPIN PERIOD
    19                          ;HLDTIM:	DEFB	50		;HEAD LOAD DELAY
    20                          ;RWMAX:		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    21                          ;		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    22                          
    23                          DRVTAB:		equ	glbvars		;HEAD POSITIONS FOR 4 DRIVES
    24                          					;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    25                          RATES:		equ	DRVTAB+8	;SETTLING DELAYS / STEP RATES TABLE
    26                          UNIT:		equ	RATES+4		;CURRENTLY SELECTED DISK#
    27                          TRACK:		equ	UNIT+1		;TRACK POSITION OF SELECTED DRIVE
    28                          DRVOFF:		equ	TRACK+1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    29                          OUTCPY:		equ 	DRVOFF+1	;COPY OF DISK CONTROL LATCH
    30                          PERIOD:		equ	OUTCPY+1	;DISK SPIN PERIOD
    31                          HLDTIM:		equ	PERIOD+2	;HEAD LOAD DELAY
    32                          RWMAX:		equ	HLDTIM+1	;MAX NUMBER OF READ/WRITE RETRIES
    33                          EXPANSION	equ	RWMAX+1		;ROOM FOR EXPANSION
    34                          ;
    35                          ;
    36                          ;	... GLOBAL VARIABLES FOR ATARI HANDLER ...
    37                          ;
    38                          ;IDPTR:		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    39                          ;FSMVEC:	DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    40                          ;EXTVEC:	DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    41                          ;NEWLIN:	DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    42                          ;PSMSG:		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    43                          ;PMASKS:	DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    44                          ;		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    45                          ;FMTPTR:	DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    46                          ;PBASE:		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    47                          ;PSIZE:		DEFW	4095		;MAX BUFFER INDEX OFFSET
    48                          ;
    49                          ;glbsize	equ	$-glbvars		;length of initialized variables
    50                          ;        DEFB    73h			; **** Exists in original ROM? ****
    51                          IDPTR:		equ	EXPANSION+4	;POINTER TO DEVICE ID TABLE
    52                          FSMVEC:		equ 	IDPTR+2		;POINTER FOR ATARI TASK STATE MACHINE
    53                          EXTVEC:		equ	FSMVEC+2	;POINTER FOR EXTRA TASK PROCESSOR
    54                          NEWLIN:		equ	EXTVEC+2	;PRINTER NEWLINE CHARACTERS
    55                          PSMSG:		equ	NEWLIN+5	;PRINTER STATUS FRAME
    56                          PMASKS:		equ	PSMSG+4		;MASK ALL BITS BUT 'BUSY'
    57                          					;COMPARE TO ZERO FOR READY
    58                          FMTPTR:		equ	PMASKS+2	;POINTER TO STANDARD FORMAT TABLES
    59                          PBASE:		equ	FMTPTR+2	;PUT PRINT BUFFER AFTER HERE
    60                          PSIZE:		equ	PBASE+2		;MAX BUFFER INDEX OFFSET
    61                          
    62                          glbsize	equ	$-glbvars		;length of initialized variables
    63                          ;
    64                          ;
    65                          ;	*** UNINITIALIZED SCRATCH VARIABLES COME AFTER HERE ***
    66                          ;
    67                          PCOUNT:		EQU 	PSIZE+2		;BYTECOUNT FOR BUFFER
    68                          PINP:		EQU 	PCOUNT+2	;INPUT OFFSET
    69                          POUT:		EQU 	PINP+2		;OUTPUT OFFSET
    70                          CMDFLG:		EQU 	POUT+2		;COMMAND FRAME READY FLAG FROM IRQ
    71                          DMATRIX:	EQU 	CMDFLG+1    	;DRIVE POOP TABLES
    72                          OLDPTR:		EQU 	DMATRIX+64	;POINTER TO FIRST DRIVE ACCESSED
    73                          DKIOCB:		EQU 	OLDPTR+2	;DISK I/O COMMAND BLOCK
    74                          DRWCMD:		EQU 	DKIOCB+16	;R/W COMMAND FROM ATARI TO 'DISKIO'
    75                          LOGSIZ:		EQU 	DRWCMD+1	;LOGICAL SECTOR LENGTH FOR XFER
    76                          IDBUF:		EQU	LOGSIZ+2	;BUFFER FOR ID MARK READS
    77                          IOPTR:		EQU 	IDBUF+8		;ATARI BLOCK INPUT POINTER
    78                          VFLAG:		EQU 	IOPTR+2		;VERIFY FLAG FOR DISK WRITES
    79                          
    80                          ;
    81                          ;
    82                          ;	... VARIABLES FOR DISK FORMAT FUNCTION ...
    83                          ;
    84                          FMTSTUFF	EQU	VFLAG+1
    85                          FRMPTR:		EQU 	VFLAG+1			;POINTER TO FORMAT DATA TABLE
    86                          SKWPTR:		EQU 	FRMPTR+2		;POINTER TO SKEW TABLE
    87                          NSECTS:		EQU 	SKWPTR+2		;NUMBER OF SECTORS
    88                          TRKSIZ:		EQU 	NSECTS+1		;TRACK LENGTH IN BYTES
    89                          FMTLEN		EQU	(TRKSIZ+2)-FMTSTUFF
    90                          
    91                          sides:		EQU 	TRKSIZ+2		;copy of 'nsides' for drive#
    92                          tracks:		EQU 	sides+1			;copy of 'ntrks' for drive#
    93                          SEQNUM:		EQU 	tracks+1		;TEMP SECTOR SEQUENCE NUMBER
    94                          SEQPTR:		EQU 	SEQNUM+2		;TEMP ERROR LOG TABLE POINTER
    95                          TRKPTR:		EQU 	SEQPTR+2		;POINTER TO START OF TRACK IMAGE
    96                          
    97                          ;
    98                          ;	... LOCAL VARIABLES FOR DISK HANDLER ...
    99                          ;
   100                          CMDBYT:		EQU 	TRKPTR+2		;COMMAND BYTE FOR READS/WRITES
   101                          RWTRY:		EQU	CMDBYT+1		;READ/WRITE RETRY COUNT
   102                          TICKS:		EQU	RWTRY+1			;FREE RUNNING MILISECOND COUNTER
   103                          DRVTMR:		EQU	TICKS+2			;DISK ACTIVITY TIMER
   104                          ;
   105                          ;
   106                          ;
   107                          ;
   108                          IOBUFF	EQU	0C100H		;ATARI I/O BUFFER
   109                          LEN	EQU	512
   110                          ;
   111                          TRKBUF	EQU	IOBUFF+LEN	;TRACK BUFFER FOR READS
   112                          ;
   113                          
rolli-f000.asm:
     7                          
     8                          MONITOR		equ	$
     9   000000 c31b00          		jp	RESTART
    10   000003 c3de03          		jp	MINIMON		;MONITOR WARM ENTRY POINT
    11   000006 c33506          CSV:		jp	CONST		;CONSOLE STATUS
    12   000009 c34006          CIV:		jp	CONIN		;CONSOLE INPUT
    13   00000c c35006          COV:		jp	CONOUT		;CONSOLE OUTPUT
    14   00000f c32200          DISKV:		jp	DISKDVR		;DISK HANDLER
    15   000012 c3dc04          LISTV:		jp	CENTOUT		;PARALLEL PRINTER OUT
    16   000015 c3eb04          		jp	CENTRDY		;PARALLEL PRINTER STATUS
    17   000018 c31506          RENEW:		jp	CINIT2		;CONSOLE PORT INITAILZATION
    18                          ;
    19                          ;
    20                          ;
    21                          RESTART:
    22   00001b f3              		di
    23   00001c af              		xor	A
    24   00001d d352            		out	(BANKSW),A
    25   00001f c30000          		jp	0		;JUMP TO ROM
    26                          ;
    27                          ;
    28                          ;
    29                          		include	"DISKIO.MAC"
DISKIO.MAC:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	DISK I/O DRIVER FOR ATARI BOX.	18-FEB-82	*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          ;
     8                          ;
     9                          RIDCMD	EQU	11000000B	;READ ID COMMAND
    10                          RDCMD	EQU	10000000B	;READ COMMAND
    11                          WRTCMD	EQU	10100000B	;WRITE COMMAND
    12                          FINCMD	EQU	11010000B	;FORCE INTERRUPT COMMAND
    13                          SKCMD	EQU	00010000B	;SEEK COMMAND
    14                          RSTCMD	EQU	00000000B	;RESTORE COMMAND
    15                          STEPOUT	EQU	01100000B	;STEP OUT COMMAND
    16                          STEPIN	EQU	01000000B	;STEP IN COMMAND
    17                          HLOAD	EQU	00000000B	;HEAD LOAD BIT FOR TYPE 1 COMMANDS
    18                          ;
    19                          ;
    20                          NMIVEC	EQU	0066H
    21                          ;
    22                          ;
    23                          ;
    24                          ;
    25                          ;	... DATA STRUCTURE FOR DISK I/O CONTROL BLOCK ...
    26                          ;
    27                          DSKOP	EQU	0		;DISK OPERATION CODE
    28                          DSKDRV	EQU	1		;DRIVE# (WITH SIDE# IN BIT 7)
    29                          DSKTRK	EQU	2		;TRACK#
    30                          DSKSEC	EQU	3		;SECTOR#
    31                          DSKPTR	EQU	4		;READ/WRITE POINTER
    32                          DSKAUX	EQU	6		;AUXILLIARY PARAMETERS (2 BYTES)
    33                          DSKSTS	EQU	8		;OPERATION COMPLETION STATUS
    34                          ;
    35                          ;
    36                          ;	... DISK DRIVER OPERATION CODE DEFINITIONS ...
    37                          ;
    38                          TSTRDY	EQU	0		;SELECT DRIVE AND TEST READY
    39                          GETSEC	EQU	1		;READ SECTOR
    40                          PUTSEC	EQU	2		;WRITE SECTOR
    41                          GETID	EQU	3		;READ ID MARK
    42                          ;
    43                          ;
    44                          ;
    45                          DISKDVR:
    46   000022 cdcb03          	CALL	STOPTMR		;KILL DISK TIMER INTERRUPT FROM CTC3
    47   000025 dd7e00          	LD	A,(IX+DSKOP)
    48   000028 b7              	OR	A
    49   000029 284b            	JR	Z,TESTDRV	;JUMP IF TEST READY OPERATION
    50   00002b 0680            	LD	B,RDCMD
    51   00002d 3d              	DEC	A
    52   00002e 2879            	JR	Z,SETSSO	;JUMP IF DISK READ OPERATION
    53   000030 06a0            	LD	B,WRTCMD
    54   000032 3d              	DEC	A
    55   000033 2874            	JR	Z,SETSSO	;JUMP IF DISK WRITE OPERATION
    56   000035 3d              	DEC	A
    57   000036 285d            	JR	Z,READID	;JUMP IF DISK ID READ OPERATION
    58   000038 dd3608ff        	LD	(IX+DSKSTS),255	;ELSE SET ALL ERROR BITS AND RETURN
    59                          
    60                          ACTIVON:
    61   00003c f3              	DI
    62   00003d 3ea7            	LD	A,10100111B
    63   00003f d383            	OUT	(CTC3),A	;PUT CTC3 IN TIMER MODE, PRESCALE 256
    64   000041 af              	XOR	A
    65   000042 d383            	OUT	(CTC3),A	;COUNT MOD 256
    66                          ;	DEC	A
    67   000044 3ea0            	LD	A, 160
    68   000046 32c9ff          	LD	(DRVTMR),A	;STOP DRIVES AFTER 255 INTERRUPTS
    69   000049 215100          	LD	HL,ACTIVTY
    70   00004c 2216ff          	LD	(CTCVEC+6),HL	;SET VECTOR TO ACTIVITY-CHECK ROUTINE
    71   00004f fb              	EI
    72   000050 c9              	RET
    73                          ;
    74                          ;
    75                          ;
    76                          ACTIVTY:
    77   000051 f5              	PUSH	AF
    78   000052 3ac9ff          	LD	A,(DRVTMR)
    79   000055 3d              	DEC	A
    80   000056 32c9ff          	LD	(DRVTMR),A
    81   000059 200a            	JR	NZ,ACTV2	;EXIT IF 4 SECONDS NOT ELAPSED
    82                          
    83   00005b cd6900          	call	shutdown
    84   00005e 3e21            	LD	A,00100001B
    85   000060 d383            	OUT	(CTC3),A	;RESET INTERRUPT BUT KEEP COUNTER GOING
    86   000062 322eff          	LD	(DRVOFF),A	;SET 'DRVOFF' FLAG TO NON-ZERO VALUE
    87                          
    88   000065 f1              ACTV2:	POP	AF
    89   000066 fb              	EI
    90   000067 ed4d            	RETI
    91                          ;
    92                          ;
    93                          ;
    94                          shutdown:
    95   000069 cd3902          	CALL	resetfdc
    96   00006c 3a2fff          	LD	a, (OUTCPY)
    97   00006f e6f0            	AND	a, 11110000b
    98   000071 f640            	OR	a, 01000000b
    99   000073 d330            	OUT	(LATCH),a
   100   000075 c9              	ret
   101                          
   102                          ;	IN	A,(TRKREG)
   103                          ;	OUT	(DATREG),A
   104                          ;	LD	A,SKCMD
   105                          ;	OUT	(CMDREG),A	;DUMMY SEEK TO UNLOAD THE HEADS
   106                          ;	LD	A,(OUTCPY)
   107                          ;	AND	11110000B	;DESELECT ALL 4 DRIVES
   108                          ;	OR	00010000B
   109                          ;	OUT	(LATCH),A	;RESET FDC
   110                          ;	AND	11101111B
   111                          ;	OUT	(LATCH),A
   112                          ;	ret
   113                          
   114                          ;
   115                          ;
   116                          ;
   117                          ;
   118                          ;
   119                          ;	... DRIVE READY/STATUS TEST FUNCTION ...
   120                          ;
   121                          ;
   122                          TESTDRV:
   123   000076 cd1001          	CALL	SELECT		;SELECT DRIVE FOR SPIN/STATUS CHECK
   124   000079 cb7f            	BIT	7,A
   125   00007b 2805            	JR	Z,TDRV2		;JUMP IF DRIVE READY INDICATED
   126                          
   127   00007d 2130ff          	LD	HL,PERIOD	;ELSE SET PERIOD TO ZERO
   128   000080 3600            	LD	(HL),0
   129                          
   130   000082 dd7708          TDRV2:	LD	(IX+DSKSTS),A	;RETURN TYPE 1 STATUS IN 'DSKSTS'
   131   000085 3a2fff          	LD	A,(OUTCPY)
   132   000088 dd7706          	LD	(IX+DSKAUX),A	;RETURN CONTROL BITS IN AUX BYTE #1
   133   00008b 3a30ff          	LD	A,(PERIOD)
   134   00008e dd7707          	LD	(IX+DSKAUX+1),A	;RETURN PERIOD IN AUX BYTE #2
   135   000091 cd3c00          	CALL	ACTIVON		;START DISK ACTIVITY MONITOR AGAIN
   136   000094 c9              	RET
   137                          ;
   138                          ;
   139                          ;
   140                          ;	... READ ID MARK FUNCTION ...
   141                          ;
   142                          READID:
   143   000095 dd360606        	LD	(IX+DSKAUX),6
   144   000099 dd360700        	LD	(IX+DSKAUX+1),0
   145   00009d 06c0            	LD	B,RIDCMD
   146   00009f cda900          	CALL	DISK		;READ 6 BYTE ID RECORD
   147   0000a2 3a2fff          	LD	A,(OUTCPY)
   148   0000a5 dd7706          	LD	(IX+DSKAUX),A	;RETURN DRIVE CONTROL LATCH BYTE
   149   0000a8 c9              	RET
   150                          ;
   151                          ;
   152                          ;
   153                          ;	... SECTOR READ/WRITE FUNCTION ...
   154                          ;
   155                          SETSSO:
   156                          ;	BIT	7,(IX+DSKDRV)	;TEST SIDE# BIT IN DRIVE PARAM
   157                          ;	JR	Z,DISK
   158                          ;	SET	1,B		;SET 'SSO' CONTROL BIT IN 1797 CMD
   159                          DISK:
   160   0000a9 78              	LD	A,B
   161   0000aa 32c5ff          	LD	(CMDBYT),A	;STORE 1797 COMMAND PASSED IN B
   162   0000ad cd1001          	CALL	SELECT		;SELECT DRIVE/SIDE FOR DISK OPERATION
   163   0000b0 cb7f            	BIT	7,A
   164   0000b2 2052            	JR	NZ,DISKX	;EXIT IF NOT READY
   165                          
   166   0000b4 3a2dff          	LD	A,(TRACK)
   167   0000b7 feff            	CP	255
   168   0000b9 2805            	JR	Z,DISK2
   169   0000bb ddbe02          	CP	(IX+DSKTRK)	;TEST IF ALREADY AT DESIRED TRACK
   170   0000be 2805            	JR	Z,DISK3		;SKIP SEEK PART IF SO
   171                          
   172   0000c0 cdfa01          DISK2:	CALL	SEEKTRK		;GO LOOKING FOR TRACK# IN IOCB
   173   0000c3 2041            	JR	NZ,DISKX	;EXIT IF HEAD POSITIONING ERROR
   174                          
   175   0000c5 3a12ff          DISK3:	LD	A,(CTCVEC+2)
   176   0000c8 3c              	INC	A		;LOOP TILL TX CTC TURNS ITSELF OFF
   177   0000c9 20fa            	JR	NZ,DISK3	;(INTERRUPT VECTOR LSB SET=FFH)
   178                          
   179   0000cb f3              	DI
   180   0000cc 3e03            	LD	A,00000011B
   181   0000ce d380            	OUT	(CTC0),A	;DISABLE RX INTERRUPT FROM CTC0
   182   0000d0 3e27            	LD	A,00100111B
   183   0000d2 d382            	OUT	(CTC2),A	;DISABLE CTC2 AND ALSO INIT FOR
   184   0000d4 3e3d            	LD	A,61		; CLOCK SOURCE FOR WATCHDOG TIMER
   185   0000d6 d382            	OUT	(CTC2),A
   186   0000d8 21a803          	LD	HL,WATCHDOG	;STORE NEW CTC3 VECTOR FOR SAFETY
   187   0000db 2216ff          	LD	(CTCVEC+6),HL
   188                          
   189   0000de 3a33ff          	LD	A,(RWMAX)
   190   0000e1 32c6ff          	LD	(RWTRY),A	;SET READ/WRITE RETRY COUNT
   191   0000e4 dd7e03          DISK4:	LD	A,(IX+DSKSEC)	;OUTPUT SECTOR NUMBER FOR READ/WRITE
   192   0000e7 d342            	OUT	(SECREG),A
   193   0000e9 dd7e02          	LD	A,(IX+DSKTRK)
   194   0000ec d341            	OUT	(TRKREG),A	;DITTO FOR TRACK NUMBER
   195   0000ee 3ac5ff          	LD	A,(CMDBYT)
   196   0000f1 d340            	OUT	(CMDREG),A	;START 1791 WORKING ON W/R COMMAND
   197   0000f3 cdb602          	CALL	RWDISK		;DO HALT/NMI DISK DATA TRANSFER
   198   0000f6 280e            	JR	Z,DISKX		;EXIT IF NO DISK ERRORS
   199   0000f8 f5              	PUSH	AF
   200   0000f9 cd0f03          	CALL	RECOVER		;DO READ/WRITE ERROR RECOVERY ROUTINE
   201   0000fc c1              	POP	BC
   202   0000fd 2006            	JR	NZ,DISK5	;SKIP RETRY IF IRRECOVERABLE ERROR
   203   0000ff 21c6ff          	LD	HL,RWTRY
   204   000102 35              	DEC	(HL)
   205   000103 20df            	JR	NZ,DISK4	;ELSE DECREMENT RETRY COUNT TILL=0
   206   000105 78              DISK5:	LD	A,B		;THEN LOAD A WITH ERROR STATUS
   207   000106 dd7708          DISKX:	LD	(IX+DSKSTS),A	;SAVE COMPLETION STATUS CARRIED IN ACC
   208   000109 cd1800          	CALL	RENEW		;RESTART ATARI AND RS232 INTERRUPTS
   209   00010c cd3c00          	CALL	ACTIVON		;START DISK ACTIVITY TIMER
   210   00010f c9              	RET
   211                          ;
   212                          ;
   213                          ;
   214                          ;	... SELECT DRIVE# PASSED @IX AND RETURN TYPE 1 STATUS ...
   215                          ;
   216                          SELECT:
   217   000110 dd7e01          	LD	A,(IX+DSKDRV)
   218   000113 cbbf            	RES	7,A		;CLEAR SIDE SELECT BIT FROM DRIVE#
   219   000115 fe04            	CP	4
   220   000117 3073            	JR	NC,SELX		;EXIT IF INVALID DRIVE NUMBER
   221                          
   222   000119 0600            	LD	B,0
   223   00011b 4f              	LD	C,A		;LOAD BC WITH NEW DRIVE# TO BE SELECTED
   224   00011c 212cff          	LD	HL,UNIT
   225   00011f 96              	SUB	(HL)		;COMPARE NEW AND OLD SELECT CODES AND
   226   000120 f5              	PUSH	AF		; SAVE RESULT STATUS ON STACK
   227   000121 50              	LD	D,B
   228   000122 5e              	LD	E,(HL)		;LOAD DE WITH LAST SELECTED DRIVE#
   229   000123 71              	LD	(HL),C		;THEN STORE NEW UNIT# FROM C
   230                          
   231   000124 2120ff          	LD	HL,DRVTAB
   232   000127 19              	ADD	HL,DE		;INDEX INTO TABLE BY CURRENT DRIVE#
   233   000128 3a2dff          	LD	A,(TRACK)
   234   00012b 77              	LD	(HL),A		;REMEMBER CURENT TRACK NUMBER
   235   00012c 1e04            	LD	E,4
   236   00012e 19              	ADD	HL,DE		;NOW INDEX TO CONTROL BYTE FOR UNIT
   237   00012f 3a2fff          	LD	A,(OUTCPY)
   238   000132 77              	LD	(HL),A		;REMEMBER CURRENT DENSITY/TYPE
   239                          
   240   000133 2120ff          	LD	HL,DRVTAB
   241   000136 09              	ADD	HL,BC		;INDEX INTO TABLE BY NEW DRIVE#
   242   000137 7e              	LD	A,(HL)
   243   000138 322dff          	LD	(TRACK),A	;STORE CURRENT (ASSUMED) HEAD POSITION
   244   00013b 19              	ADD	HL,DE
   245   00013c d1              	POP	DE		;POP UNIT# COMPARE RESULT INTO D
   246   00013d 7e              	LD	A,(HL)		;GET CURRENT SELECT/TYPE BITS FOR DRIVE
   247   00013e b7              	OR	A
   248   00013f 201f            	JR	NZ,SEL5
   249                          ;
   250                          ;	ARRIVE HERE ON INITIAL DRIVE SELECT
   251                          ;
   252   000141 219901          	LD	HL,SELTAB
   253   000144 09              	ADD	HL,BC		;ELSE INDEX INTO TABLE OF SELECT BITS
   254   000145 7e              	LD	A,(HL)
   255   000146 d330            	OUT	(LATCH),A	;OUTPUT NEW DRIVE SELECTS
   256   000148 f5              	PUSH	AF
   257   000149 cd9d01          	CALL	SPIN		;NOW SPIN UP TO TEST READY
   258   00014c c1              	POP	BC
   259   00014d fede            	CP	222		;ERROR IF SLOWER THAN 222 MS
   260   00014f 303b            	JR	NC,SELX
   261                          
   262   000151 cbf0            	SET	6,B
   263   000153 feb5            	CP	181		;MINI FLOPPY IF BETWEEN 222 AND 181 MS
   264   000155 3006            	JR	NC,SEL4
   265                          
   266   000157 cbb0            	RES	6,B
   267   000159 fe99            	CP	153		;BIG FLOPPY IF BETWEEN 181 AND 153 MS
   268   00015b 382f            	JR	C,SELX
   269                          
   270   00015d 78              SEL4:	LD	A,B		;GET CONTROL BITS INTO A
   271   00015e 1600            	LD	D,0		;SET D=0 TO DISABLE HEAD LOAD DELAY
   272                          ;
   273                          ;	ARRIVE HERE WITH DENSITY/TYPE/SELECT BITS IN ACC
   274                          ;
   275   000160 cbaf            SEL5:	RES	5,A		;RESET SIDE SELECT BIT UNCONDITIONALLY
   276   000162 ddcb017e        	BIT	7,(IX+DSKDRV)
   277   000166 2802            	JR	Z,SEL5A		;JUMP IF SELECTING SIDE# ZERO
   278   000168 cbef            	SET	5,A		;ELSE SET SIDE SELECT BIT IN ACC
   279   00016a d330            SEL5A:	OUT	(LATCH),A
   280   00016c 322fff          	LD	(OUTCPY),A	;OUTPUT AND SAVE NEW PATTERN
   281   00016f 14              	INC	D
   282   000170 15              	DEC	D
   283   000171 c49903          	CALL	NZ,HLDWAIT	;DO HEAD LOAD DELAY IF NEW DRIVE SELECT
   284   000174 db41            	IN	A,(TRKREG)	;get status
   285   000176 d343                    OUT	(DATREG),A
   286   000178 3e10                    LD	A,SKCMD
   287   00017a cd8703          	CALL	CMDOUT
   288   00017d cd9403          	CALL	FORCE1
   289   000180 cb6f            	BIT	5,A		;TEST 1797 HEAD-LOAD STATUS
   290   000182 c0              	RET	NZ		;EXIT IF LOADED AND MOTORS ON
   291                          
   292   000183 cd9d01          	CALL	SPIN		;ELSE LET THINGS SPIN A BIT
   293   000186 b7              	OR	A		;TEST PERIOD AFTER RE-SPINUP
   294   000187 2803            KLUDGE:	JR	Z,SELX		;ERROR IF DISK REFUSES TO TURN
   295                          
   296   000189 c39403          	JP	FORCE1		;ELSE RETURN TYPE 1 STATUS THIS TIME
   297                          ;	RET
   298                          
   299                          ;
   300                          ;	ARRIVE HERE IF DRIVE CANNOT BE SELECTED AT ALL
   301                          ;
   302   00018c af              SELX:	XOR	A		;TURN OFF EVERYTHING
   303   00018d 322fff          	LD	(OUTCPY),A
   304   000190 3e40            	LD	a, 040h		;TURN OFF -> 8Mhz
   305   000192 d330            	OUT	(LATCH),A
   306                          ;	LD	A,10000000B
   307   000194 07              	rlca			;40h --> 80h
   308   000195 b7              	OR	A		;RETURN WITH NOT-READY ERROR
   309   000196 c9              	RET
   310                          
   311                          
   312   000197 00              	nop
   313   000198 00              	nop
   314                          ;
   315                          ;
   316                          ;
   317                          ;
   318   000199 01              SELTAB:	DEFB	00000001B
   319   00019a 02              	DEFB	00000010B
   320   00019b 04              	DEFB	00000100B
   321   00019c 08              	DEFB	00001000B
   322                          ;
   323                          ;
   324                          ;
   325                          SPIN:
   326                          ;	XOR	A
   327                          ;	OUT	(INDXSET),A
   328                          ;	INC	A
   329                          ;	OUT	(INDXCLR),A	;SET TO ENABLE NORMAL INDEX PULSES
   330   00019d db41            	IN	A,(TRKREG)
   331   00019f d343            	OUT	(DATREG),A
   332   0001a1 3e10            	LD	A,SKCMD+HLOAD
   333                          ;	OUT	(CMDREG),A	;DO DUMMY SEEK TO START THE MOTORS
   334   0001a3 cd8703          	CALL	CMDOUT
   335   0001a6 cdba03          	CALL	STARTMR		;THEN RE-PROGRAM CTC1 FOR TIMER
   336   0001a9 cd9403          	CALL	FORCE1
   337   0001ac 4f              	LD	C,A		;SAVE CURRENT TYPE 1 DISK STATUS
   338   0001ad 0606            	LD	B,6		;SET FOR 6 DISK REVOLUTIONS
   339   0001af 210000          	LD	HL,0
   340   0001b2 22c7ff          	LD	(TICKS),HL	;RESET MILLISECOND COUNTER FOR IRQ
   341   0001b5 ed5bc7ff        SPIN2:	LD	DE,(TICKS)
   342   0001b9 cde501          	CALL	EDGE		;WAIT FOR INDEX INPUT TO CHANGE
   343   0001bc 3822            	JR	C,SPIN3		;ABORT IF TIMEOUT
   344   0001be cde501          	CALL	EDGE		;WAIT FOR CHANGE BACK AGAIN
   345   0001c1 381d            	JR	C,SPIN3
   346   0001c3 10f0            	DJNZ	SPIN2		;LET 6 REVOLUTIONS PASS
   347                          
   348   0001c5 2ac7ff          	LD	HL,(TICKS)	;READ TIME AT END OF REVOLUTION
   349   0001c8 b7              	OR	A
   350   0001c9 ed52            	SBC	HL,DE		;COMPUTE INDEX PERIOD IN MILLISECONDS
   351                          ;	XOR	A
   352                          ;	OUT	(INDXCLR),A
   353                          ;	INC	A
   354                          ;	OUT	(INDXSET),A	;DISABLE INDEX PULSES AFTER THIS
   355   0001cb cd9403          SPIN5:	call	FORCE1
   356   0001ce cb47            	bit	0, a
   357   0001d0 20f9            	jr	nz, SPIN5
   358   0001d2 cdcb03          SPIN6:	CALL	STOPTMR		;KILL INTERRUPT FROM CTC3
   359   0001d5 7d              	LD	A,L
   360   0001d6 24              	INC	H
   361   0001d7 25              	DEC	H
   362   0001d8 2802            	JR	Z,SPIN4		;A HOLDS VALID PERIOD IF H=0
   363   0001da 3eff            	LD	A,255
   364   0001dc 3230ff          SPIN4:	LD	(PERIOD),A
   365   0001df c9              	RET
   366                          
   367   0001e0 cd3902          SPIN3:	CALL	resetfdc
   368   0001e3 18ed            	JR	SPIN6
   369                          ;
   370                          ;
   371                          ;
   372                          EDGE:
   373   0001e5 cd9403          	CALL	FORCE1		;GET 1797 TYPE 1 STATUS
   374   0001e8 a9              	XOR	C
   375   0001e9 e602            	AND	00000010B	;CHECK FOR CHANGE IN INDEX BIT
   376   0001eb 2009            	JR	NZ,EDGE2	;EXIT IF BIT CHANGES
   377                          
   378   0001ed 3ac8ff          	LD	A,(TICKS+1)
   379   0001f0 fe08            	CP	2048/256	;ELSE CHECK TIME ACCUMULATED IN 'TICKS'
   380   0001f2 38f1            	JR	C,EDGE		;KEEP LOOPING TILL 2 SECONDS PASS
   381                          
   382   0001f4 37              	SCF
   383   0001f5 c9              	RET			;THEN RETURN WITH CARRY=1
   384                          ;
   385   0001f6 79              EDGE2:	LD	A,C
   386   0001f7 2f              	CPL			;FLIP INDEX STATE HELD IN C
   387   0001f8 4f              	LD	C,A
   388   0001f9 c9              	RET			;RETURN WITH CARRY=0
   389                          ;
   390                          ;
   391                          ;
   392                          ;
   393                          ;	... SEEK TRACK# IN (IX+DSKTRK) FROM TRACK# IN (TRACK) ...
   394                          ;
   395                          SEEKTRK:
   396   0001fa 3a2dff          	LD	A,(TRACK)
   397   0001fd feff            	CP	255
   398   0001ff 2005            	JR	NZ,SEEK1	;JUMP IF HEAD POSITION IS KNOWN
   399                          
   400   000201 cd4b02          	CALL	RESTORE		;ELSE DO SLOW RESTORE TO RECALIBRATE
   401   000204 202a            	JR	NZ,SEEKX	;EXIT WITH PERMANENT ERROR IF FAILURE
   402                          
   403   000206 0601            SEEK1:	LD	B,1
   404   000208 cd5802          	CALL	SEEK		;FIRST SEEK (IX+DSKTRK) WITH NO RETRIES
   405   00020b c8              	RET	Z		;EXIT IF WE GOT TO THE DESIRED TRACK
   406   00020c 3005            	JR	NC,SEEK2	;JUMP IF WE LANDED ON SOME OTHER TRACK
   407                          
   408   00020e cd4b02          	CALL	RESTORE		;ELSE RECALIBRATE BEFORE TRYING AGAIN
   409   000211 201d            	JR	NZ,SEEKX	;EXIT IF TRACK ZERO NOT FOUND
   410                          
   411   000213 0602            SEEK2:	LD	B,2
   412   000215 cd5802          	CALL	SEEK		;NOW SEEK WITH TWO TRIES
   413   000218 c8              	RET	Z		;EXIT IF SUCCESSFUL THIS TIME
   414   000219 3815            	JR	C,SEEKX		;EXIT IF NO ID MARK COULD BE FOUND
   415                          
   416   00021b 216400          	LD	HL,100
   417   00021e cd9e03          	CALL	WAIT		;DELAY TO LET THE STEPPER RELAX ITSELF
   418   000221 2128ff          	LD	HL,RATES
   419   000224 3a2cff          	LD	A,(UNIT)
   420   000227 85              	ADD	A,L
   421   000228 6f              	LD	L,A		;INDEX INTO TABLE TO DRIVE'S STEP RATE
   422   000229 34              	INC	(HL)		; AND MAKE STEP RATE ONE NOTCH SLOWER
   423   00022a 7e              	LD	A,(HL)
   424   00022b e603            	AND	00000011B	;CHECK FOR ROLL AROUND IN LOWER 2 BITS
   425   00022d 20e4            	JR	NZ,SEEK2	;REPEAT IF STEP RATE BITS WERE NOT=3
   426                          
   427   00022f 35              	DEC	(HL)		;ELSE RESTORE FROM ROLL AROUND
   428   000230 3eff            SEEKX:	LD	A,255
   429   000232 322dff          	LD	(TRACK),A	;FLAG TRACK POSITION AS UNKNOWN
   430   000235 3e10            	LD	A,00010000B	;SET SEEK ERROR BIT IN STATUS WORD
   431   000237 b7              	OR	A
   432   000238 c9              	RET			;RETURN WITH RNF ERROR STATUS IN A
   433                          ;
   434                          ;
   435                          ;
   436                          ;
   437                          resetfdc:
   438   000239 3a2fff          	LD	A,(OUTCPY)
   439   00023c cbe7            	SET	4,A
   440   00023e d330            	OUT	(LATCH),A	;TWANG THE DISK CONTROLLER RESET PIN
   441   000240 060f            	LD	B,15
   442   000242 10fe            	DJNZ	$		;HOLD RESET 50 MICROSECONDS
   443   000244 cba7            	RES	4,A
   444   000246 d330            	OUT	(LATCH),A
   445                          ;	LD	B,30
   446                          ;	LD	B,0
   447   000248 10fe            	DJNZ	$
   448                          ;	CALL	FORCE		;THEN FORCE CLEAR THE BEAST
   449   00024a c9              	ret
   450                          
   451                          RESTORE:
   452   00024b cd3902          	CALL	resetfdc
   453   00024e 3e03            	LD	A,RSTCMD+HLOAD+3
   454   000250 cd6c03          	CALL	TYP1CMD		;DO RESTORE AT SLOWEST STEP RATE
   455   000253 ee04            	XOR	00000100B
   456                          ;	AND	10000100B
   457   000255 e604            	AND	00000100B
   458   000257 c9              	RET			;RETURN WITH ACC=0 IF HOME
   459                          ;
   460                          ;
   461                          ;
   462                          SEEK:
   463   000258 c5              	PUSH	BC		;SAVE LOOPCOUNT IN B
   464   000259 3a2dff          	LD	A,(TRACK)
   465   00025c 47              	LD	B,A		;LOAD B WITH CURRENT TRACK POSITION
   466   00025d dd4e02          	LD	C,(IX+DSKTRK)	;LOAD C WITH DESTINATION TRACK#
   467   000260 cd7602          	CALL	STEP		;HAVE A GO AT STEPPING
   468   000263 cd9602          	CALL	VERIFY		;VERIFY HEAD POSITION WITH READ-ID
   469   000266 c1              	POP	BC
   470   000267 37              	SCF
   471   000268 c0              	RET	NZ		;EXIT WITH CARRY SET IF READ-ID FAILS
   472                          
   473   000269 db42            	IN	A,(SECREG)
   474   00026b 322dff          	LD	(TRACK),A	;STORE ACTUAL TRACK# FROM ID MARK
   475   00026e dd9602          	SUB	(IX+DSKTRK)	;COMPARE IF WE GOT THERE THIS TIME
   476   000271 c8              	RET	Z		;EXIT WITH ACC=0 IF TRACK# VERIFIED
   477                          
   478   000272 10e4            	DJNZ	SEEK		;DO PRESCRIBED NUMBER OF SEEK RETRIES
   479                          
   480   000274 b7              	OR	A
   481   000275 c9              	RET			;RETURN WITH CARRY AND ZERO FLAGS CLEAR
   482                          ;
   483                          ;
   484                          ;
   485                          ;	STEP FROM TRACK# IN B TOWARDS TRACK# IN C
   486                          ;
   487                          STEP:
   488   000276 78              	LD	A,B
   489   000277 d341            	OUT	(TRKREG),A	;STARTING TRACK# TO TRACK REGISTER
   490   000279 79              	LD	A,C
   491   00027a d343            	OUT	(DATREG),A	;DESTINATION TRACK# TO DATA REGISTER
   492   00027c 2128ff          	LD	HL,RATES
   493   00027f 3a2cff          	LD	A,(UNIT)
   494   000282 85              	ADD	A,L
   495   000283 6f              	LD	L,A		;INDEX INTO STEP RATE TABLE FOR DRIVE
   496   000284 7e              	LD	A,(HL)
   497   000285 e603            	AND	00000011B	;EXTRACT LOWER 2 BITS FOR STEP RATE
   498   000287 f610            	OR	SKCMD+HLOAD	;MERGE WITH SEEK COMAND
   499   000289 cd6c03          	CALL	TYP1CMD		;DO SEEK WITH SPECIFIED STEP RATE
   500   00028c 7e              	LD	A,(HL)
   501   00028d e6fc            	AND	11111100B	;EXTRACT UPPER 6 BITS FOR SETTLE TIME
   502   00028f 2600            	LD	H,0
   503   000291 6f              	LD	L,A
   504   000292 cd9e03          	CALL	WAIT		;4..256 MILLISECOND HEAD SETTLING DELAY
   505   000295 c9              	RET
   506                          ;
   507                          ;
   508                          ;
   509                          ;
   510                          VERIFY:
   511   000296 3ec0            	LD	A,RIDCMD
   512   000298 cd6303          	CALL	TYP2CMD		;READ NEXT ID MARK TO VERIFY SEEK
   513                          ;	AND	10011000B	;WD1772, bit 7 reset by TYP2CMD!
   514   00029b e618            	AND	00011000B	;WD1772, bit 7 reset by TYP2CMD!
   515   00029d c8              	RET	Z		;EXIT IF ID MARK READ OK
   516                          
   517   00029e 3a2fff          	LD	A,(OUTCPY)
   518   0002a1 ee80            	XOR	10000000B	;COMPLIMENT DENSITY BIT OF DRIVE TYPE
   519   0002a3 322fff          	LD	(OUTCPY),A
   520   0002a6 d330            	OUT	(LATCH),A
   521   0002a8 213200          	LD	HL,50
   522   0002ab cd9e03          	CALL	WAIT		;ALLOW 50 MS DELAY AFTER CLOCK SWITCH
   523   0002ae 3ec0            	LD	A,RIDCMD
   524   0002b0 cd6303          	CALL	TYP2CMD		;TRY AGAIN IN NEW DENSITY
   525                          ;	AND	10011000B
   526   0002b3 e618            	AND	00011000B
   527   0002b5 c9              	RET			;A=0 IF AN ID MARK WAS FOUND
   528                          ;
   529                          ;
   530                          ;
   531                          ;
   532                          ;
   533                          ;
   534                          RWDISK:				;A=1797 TYPE 2 COMMAND BYTE
   535   0002b6 2a6600          	LD	HL,(NMIVEC)
   536   0002b9 e5              	PUSH	HL
   537   0002ba 2a6800          	LD	HL,(NMIVEC+2)
   538   0002bd e5              	PUSH	HL		;SAVE 4 BYTES AT NMI VECTOR
   539   0002be 21eda2          	LD	HL,0A2EDH	;LOAD HL WITH 'INI' OPCODE
   540   0002c1 cb6f            	BIT	5,A		;TEST IF READ OR WRITE BEING DONE
   541   0002c3 2801            	JR	Z,RW2		;JUMP IF COMMAND IS A READ
   542   0002c5 24              	INC	H		;ELSE TRANSFORM 'INI' INTO 'OUTI'
   543   0002c6 226600          RW2:	LD	(NMIVEC),HL
   544   0002c9 216800          	LD	HL,NMIVEC+2
   545   0002cc 36c9            	LD	(HL),0C9H	;STORE 'RET' OPCODE AFTER INI/OUTI
   546   0002ce f3              	DI
   547   0002cf 3ec7            	LD	A,11000111B
   548   0002d1 d383            	OUT	(CTC3),A	;ARM CTC3 FOR COUNTER MODE INTERRUPT
   549   0002d3 af              	XOR	A
   550   0002d4 d383            	OUT	(CTC3),A	;COUNT 256 PULSES FROM CTC1
   551   0002d6 fb              	EI
   552   0002d7 dd6e04          	LD	L,(IX+DSKPTR)	;HL=DISK READ/WRITE DATA POINTER
   553   0002da dd6605          	LD	H,(IX+DSKPTR+1)
   554   0002dd dd4606          	LD	B,(IX+DSKAUX)	;B=SECTOR LENGTH COUNT (LSB)
   555   0002e0 0e43            	LD	C,DATREG	;C=DISK DATA PORT#
   556   0002e2 dd7e07          	LD	A,(IX+DSKAUX+1)
   557   0002e5 cb3f            	SRL	A
   558   0002e7 280d            	JR	Z,RW256		;JUMP IF BLOCKSIZE <= 256 BYTES
   559   0002e9 cb3f            	SRL	A
   560   0002eb 2806            	JR	Z,RW512		;JUMP IF BLOCKSIZE <= 512 BYTES
   561   0002ed 76              RW1024:	HALT
   562   0002ee 20fd            	JR	NZ,$-1
   563   0002f0 76              	HALT
   564   0002f1 20fd            	JR	NZ,$-1
   565   0002f3 76              RW512:	HALT
   566   0002f4 20fd            	JR	NZ,$-1
   567   0002f6 76              RW256:	HALT
   568   0002f7 20fd            	JR	NZ,$-1
   569   0002f9 db40            RWBUSY:	IN	A,(STSREG)
   570   0002fb cb47            	BIT	0,A
   571   0002fd 20fa            	JR	NZ,RWBUSY	;LOOP TILL 1797 BUSY BIT GOES AWAY
   572   0002ff 47              	ld	b,a
   573   000300 cdcb03          	call	STOPTMR
   574   000303 78              	ld	a,b
   575   000304 e1              RWEXIT:	POP	HL
   576   000305 226800          	LD	(NMIVEC+2),HL
   577   000308 e1              	POP	HL
   578   000309 226600          	LD	(NMIVEC),HL	;RESTORE CODE AT NMI
   579                          ;	AND	11111101B	;MASK FOR DISK ERRORS
   580   00030c e67d            	AND	01111101B	;MASK FOR DISK ERRORS
   581   00030e c9              	RET			;RETURN WITH DISK ERROR FLAGS SET
   582                          ;
   583                          ;
   584                          ;
   585                          ;
   586                          RECOVER:
   587   00030f 47              	LD	B,A
   588   000310 e6e7            	AND	11100111B	;MASK OFF ALL BUT RNF/CRC ERROR BITS
   589   000312 2808            	JR	Z,RECOV1	;JUMP IF ONE OF THOSE TWO WERE SET
   590                          
   591   000314 f5              	PUSH	AF
   592   000315 cd8f03          	CALL	FORCE		;RESET ERROR FLAGS IN 179X STATUS REG
   593   000318 f1              	POP	AF
   594                          ;	AND	11100001B	;CLEAR BITS ASSOCIATED WITH LOST DATA
   595   000319 e661            	AND	01100001B	;CLEAR BITS ASSOCIATED WITH LOST DATA
   596   00031b c9              	RET			;RETURN WITH ACC=0 IF RETRY TO BE DONE
   597                          ;
   598   00031c cb60            RECOV1:	BIT	4,B
   599   00031e 2023            	JR	NZ,RECOV3	;JUMP IF RECORD-NOT-FOUND ERROR
   600                          ;
   601                          ;	ARRIVE HERE IF BAD CRC ERROR
   602                          ;
   603   000320 3a33ff          RECOV2:	LD	A,(RWMAX)
   604   000323 21c6ff          	LD	HL,RWTRY
   605   000326 96              	SUB	(HL)		;COMPUTE HOW MANY RETRYS HAVE BEEN DONE
   606   000327 c8              	RET	Z		;EXIT IF FIRST RETRY
   607                          
   608   000328 3a2dff          	LD	A,(TRACK)	;ELSE PREPARE TO WIGGLE BACK AND FORTH
   609   00032b 47              	LD	B,A		; TO AN ADJACENT TRACK TO RE-CALIBRATE
   610   00032c b7              	OR	A		; AND REMOVE POSSIBLE MEDIA CONTAMINANT
   611   00032d 2004            	JR	NZ,RCOV2A
   612   00032f 0e01            	LD	C, 1		;STEP TO TRACK#1 IF ON TRACK# 0
   613   000331 1802            	JR	RCOV2B
   614                          ;
   615   000333 3d              RCOV2A:	DEC	A		;STEP TO NEXT OUTER TRACK
   616   000334 4f              	LD	C,A
   617   000335 c5              RCOV2B:	PUSH	BC
   618   000336 cd7602          	CALL	STEP		;STEP HEAD TO ADJACENT TRACK
   619   000339 d1              	POP	DE
   620   00033a 43              	LD	B,E		;EXCHANGE CONTENTS OF B AND C
   621   00033b 4a              	LD	C,D
   622   00033c cd7602          	CALL	STEP		;STEP BACK TO ORIGINAL TRACK
   623   00033f cd9602          	call	VERIFY
   624   000342 c9              	ret			;allow retry successful read id
   625                          ;
   626                          ;	ARRIVE HERE IF RECORD-NOT-FOUND ERROR
   627                          ;
   628   000343 cd9602          RECOV3:	call	VERIFY		;read an id mark to verify position
   629   000346 2012            	JR	NZ,RCOV4A	;RECALIBRATE IF VERIFY FAILS
   630                          
   631   000348 db42            	IN	A,(SECREG)	;LOAD A WITH CURENT TRACK# UNDER HEAD
   632   00034a ddbe02          	CP	(IX+DSKTRK)
   633   00034d 200d            	JR	NZ,RCOV4B	;JUMP IF NOT ON CORRECT TRACK
   634                          ;
   635                          ;	ARRIVE HERE IF ON CORRECT TRACK
   636                          ;
   637   00034f 3a33ff          	ld	a,(RWMAX)
   638   000352 21c6ff          	ld	hl,RWTRY
   639   000355 96              	sub	(hl)		;test if this is first retry after rnf error
   640   000356 c8              	ret	z
   641                          
   642   000357 3e10            	ld	a,00010000b
   643   000359 c9              	ret			;indicate permanent rnf error
   644                          ;
   645                          ;	ARRIVE HERE IF HEAD POSITION IS INCORRECT
   646                          ;
   647   00035a 3eff            RCOV4A:	LD	A,255		;SET A TO FORCE RESTORE BEFORE SEEK
   648   00035c 322dff          RCOV4B:	LD	(TRACK),A
   649   00035f cdfa01          	CALL	SEEKTRK		;SEEK TRACK# SPECIFIED IN IOCB
   650   000362 c9              	RET
   651                          ;
   652                          ;
   653                          ;
   654                          ;
   655                          ;	EXECUTE TYPE 2 COMMAND (READ/WRITE/READ ID) WITH TIMEOUT
   656                          ;
   657                          TYP2CMD:
   658   000363 cd8703          	CALL	CMDOUT		;ISSUE COMMAND
   659   000366 c5              	PUSH	BC
   660   000367 016a18          	LD	BC,6250		;500,000/80 FOR ONE HALF SECOND DELAY
   661   00036a 1807            	JR	TPCMD2
   662                          ;
   663                          ;
   664                          ;	EXECUTE TYPE 1 COMMAND (SEEK/STEP/RESTORE)
   665                          ;
   666                          TYP1CMD:
   667   00036c cd8703          	CALL	CMDOUT
   668   00036f c5              	PUSH	BC
   669   000370 017c92          	LD	BC,37500	;3,000,000/80 FOR 3 SECONDS DELAY
   670   000373 db40            TPCMD2:	IN	A,(STSREG)
   671   000375 cb47            	BIT	0,A
   672   000377 280a            	JR	Z,TPCMD3	;EXIT IF BUSY BIT GOES AWAY
   673                          
   674   000379 cd8903          	CALL	CMDT1		;DELAY 56 MICROSECONDS
   675   00037c 0b              	DEC	BC
   676   00037d 78              	LD	A,B
   677   00037e b1              	OR	C
   678   00037f 20f2            	JR	NZ,TPCMD2	;LOOP TAKES 80 MICROSECONDS
   679                          
   680   000381 3e10            	LD	A,00010000B
   681                          TPCMD3:
   682   000383 cbbf            	res	7, a		;reset ED1797 drive not ready, WD1772: motor on!
   683                          	;LD	B,A
   684                          	;CALL	FORCE1
   685                          	;LD	A,B
   686   000385 c1              	POP	BC
   687   000386 c9              	RET
   688                          ;
   689                          ;
   690                          ;
   691                          CMDOUT:
   692   000387 d340            	OUT	(CMDREG),A	;OUTPUT DISK CONTROLLER COMMAND BYTE
   693   000389 3e0e            CMDT1:	LD	A,14
   694   00038b 3d              CMDT2:	DEC	A
   695   00038c 20fd            	JR	NZ,CMDT2	;DELAY 56 MICROSECONDS
   696   00038e c9              	RET
   697                          ;
   698                          ;
   699                          ;
   700                          ;
   701                          FORCE:
   702   00038f 3ed0            	LD	A,FINCMD	;LOAD FORCE-INTERRUPT-IMMEDIATE CMD
   703   000391 cd8703          	CALL	CMDOUT		;CLEAR 179X AND LATCH READY/HLD/TK0 ETC
   704   000394 db40            FORCE1:	IN	A,(STSREG)	;READ STATUS REGISTER CONTENTS
   705   000396 cbbf            	RES	7, A
   706   000398 c9              	RET
   707                          ;
   708                          ;
   709                          ;
   710                          ;
   711                          ;
   712                          HLDWAIT:
   713   000399 2a32ff          	LD	HL,(HLDTIM)	;LOAD HL WITH HEAD LOAD DELAY
   714   00039c 2600            	LD	H,0		;RANGE 1..256 MILLISECONDS
   715                          
   716   00039e af              WAIT:	XOR	A
   717   00039f 3d              WAIT2:	DEC	A
   718   0003a0 20fd            	JR	NZ,WAIT2	;DELAY 1 MILLISECOND
   719   0003a2 2b              	DEC	HL
   720   0003a3 7c              	LD	A,H
   721   0003a4 b5              	OR	L
   722   0003a5 20f7            	JR	NZ,WAIT		;LOOP UNTIL HL=0
   723   0003a7 c9              	RET
   724                          ;
   725                          ;
   726                          ;
   727                          ;	... CTC INTERRUPT CONTROL ROUTINES FOR DISK HANDLER ...
   728                          ;
   729                          ;
   730                          ;
   731                          WATCHDOG:
   732   0003a8 3ed0            	LD	A,FINCMD
   733   0003aa d340            	OUT	(CMDREG),A	;ABORT DISK CONTROLLER OPERATION
   734   0003ac 3e01            	LD	A,00000001B
   735   0003ae d383            	OUT	(CTC3),A	;RESET INTERRUPT FROM CTC3
   736   0003b0 210403          	LD	HL,RWEXIT
   737   0003b3 e3              	EX	(SP),HL		;TOSS RETURN ADDRESS AND PLANT FAKE ONE
   738   0003b4 3e10            	LD	A,00010000B
   739   0003b6 b7              	OR	A		;INDICATE RECORD-NOT-FOUND ERROR
   740   0003b7 fb              	EI
   741   0003b8 ed4d            	RETI			;INSURE CTC IRQ LOGIC GETS RESTORED
   742                          ;
   743                          ;
   744                          ;
   745                          ;
   746                          ;
   747                          ;	... MILLISECOND TIMER INTERRUPT ROUTINES ...
   748                          ;
   749                          ;
   750                          STARTMR:
   751   0003ba f3              	DI
   752   0003bb 3e87            	LD	A,10000111B
   753   0003bd d383            	OUT	(CTC3),A
   754   0003bf 3efa            	LD	A,250
   755   0003c1 d383            	OUT	(CTC3),A
   756   0003c3 21d203          	LD	HL,TMRIRQ
   757   0003c6 2216ff          	LD	(CTCVEC+6),HL
   758   0003c9 fb              	EI
   759   0003ca c9              	RET
   760                          ;
   761                          ;
   762                          ;
   763                          STOPTMR:
   764   0003cb f3              	DI
   765   0003cc 3e01            	LD	A,00000001B
   766   0003ce d383            	OUT	(CTC3),A
   767   0003d0 fb              	EI
   768   0003d1 c9              	RET
   769                          ;
   770                          ;
   771                          ;
   772                          TMRIRQ:
   773   0003d2 e5              	PUSH	HL
   774   0003d3 fb              	EI
   775   0003d4 2ac7ff          	LD	HL,(TICKS)
   776   0003d7 23              	INC	HL		;BUMP FREE RUNING MILLISECOND COUNTER
   777   0003d8 22c7ff          	LD	(TICKS),HL
   778   0003db e1              	POP	HL
   779   0003dc ed4d            	RETI
   780                          ;
   781                          ;
   782                          
rolli-f000.asm:
    30                          		include	"minimon.mac"
minimon.mac:
     1                          ;
     2                          ;
     3                          ;
     4                          MINIMON:
     5   0003de 3e01            	LD	A,1
     6   0003e0 d352            	OUT	(BANKSW),A	;SWITCH TO ALL-RAM CONFIGURATION
     7   0003e2 cdfc05          	CALL	CONINIT		;INITIALIZE SERIAL CONSOLE PORT
     8   0003e5 cdc904          	CALL	PNEXT
     9   0003e8 0d0a            	DEFB	CR,LF
    10   0003ea 526f6c6c6931    	DEFB	"Rolli1"
    11   0003f0 00              	DEFB	NULL
    12   0003f1 21f103          PROMPT:	LD	HL,PROMPT
    13   0003f4 e5              	PUSH	HL		;PUT RETURN ADDRESS ON STACK
    14   0003f5 cdc904          	CALL	PNEXT
    15   0003f8 0d0a232000      	DEFB	CR,LF,"# ",NULL
    16   0003fd cdb204          	CALL	ECHO
    17   000400 fe20            	CP	' '
    18   000402 d8              	RET	C		;IGNORE NON-PRINTABLE CHATACTERS
    19                          
    20   000403 4f              	LD	C,A		;SAVE COMMAND CHARACTER IN C
    21   000404 af              	XOR	A
    22   000405 67              	LD	H,A
    23   000406 6f              	LD	L,A
    24   000407 29              PROM1:	ADD	HL,HL		;MULTIPLY RESULT BY 16
    25   000408 29              	ADD	HL,HL
    26   000409 29              	ADD	HL,HL
    27   00040a 29              	ADD	HL,HL
    28   00040b b5              	OR	L		;APPEND NEW LOW ORDER DIGIT
    29   00040c 6f              	LD	L,A
    30   00040d cdb204          	CALL	ECHO		;GET A CHARACTER FROM LINE INPUT
    31   000410 fe0d            	CP	CR
    32   000412 280c            	JR	Z,PROM3		;EXIT LOOP IF RETURN TYPED
    33   000414 cd8304          	CALL	ASCHEX		;CONVERT ASCII TO NUMERIC
    34   000417 30ee            	JR	NC,PROM1	;KEEP SHIFTING IF VALID HEX
    35                          
    36   000419 cdc904          PROM2:	CALL	PNEXT
    37   00041c 203f00          	DEFB	" ?",NULL
    38   00041f c9              	RET
    39                          ;
    40   000420 cdd504          PROM3:	CALL	CRLF
    41   000423 79              	LD	A,C
    42   000424 fe47            	CP	'G'
    43   000426 2836            	JR	Z,GOTO		;DO GOTO IF 'G'
    44   000428 fe42            	CP	'B'
    45   00042a 2833            	JR	Z,BOOT		;DO BOOT LOADER IF 'B'
    46   00042c fe4d            	CP	'M'
    47   00042e 20e9            	JR	NZ,PROM2	;***TEMP***
    48                          
    49                          ;  **** This code section does not exist on production ROM ****
    50                          ;	.COMMENT %
    51                          ;	JR	Z,VIEW		;DO MEMORY EXAMINE/CHANGE IF 'M'
    52                          ;	CP	'D'
    53                          ;	JR	NZ,PROM2	;FALL INTO MEMORY DUMP IF 'D'
    54                          ;
    55                          ;
    56                          ;
    57                          ;	-- TABULAR MEMORY DUMP COMMAND --
    58                          ;
    59                          ;DUMP:
    60                          ;	LD	C,16
    61                          ;DUMP1:	PUSH	HL		;SAVE STARTING ADDRESS
    62                          ;	CALL	PUT4HS		;PRINT STARTING ADDRESS IN HEX
    63                          ;	LD	B,8
    64                          ;DUMP2:	LD	A,(HL)		;GET A DATA BYTE @ HL
    65                          ;	INC	HL
    66                          ;	CALL	PUT2HS		;PRINT THE DATA IN HEX
    67                          ;	DJNZ	DUMP2		;REPEAT 16 TIMES
    68                          ;	POP	HL		;RESTORE STARTING ADDRESS
    69                          ;	LD	B,8
    70                          ;DUMP3:	LD	A,(HL)		;GET BACK DATA BYTE @ HL
    71                          ;	INC	HL
    72                          ;	RES	7,A
    73                          ;	CP	20H
    74                          ;	JR	C,DUMP4
    75                          ;	CP	7FH
    76                          ;	JR	C,DUMP5
    77                          ;DUMP4:	LD	A,'.'		;PRINT A DOT IF DATA < 20 OR > 7F
    78                          ;DUMP5:	CALL	OUTPUT		;PRINT ASCII CHARACTER IN A
    79                          ;	DJNZ	DUMP3
    80                          ;	CALL	CRLF
    81                          ;	DEC	C
    82                          ;	JR	NZ,DUMP1
    83                          ;	RET
    84                          ;
    85                          ;
    86                          ;	-- MEMORY EXAMINE COMMAND --
    87                          ;
    88                          VIEW:
    89   000430 cd9304          	CALL	PUT4HS
    90   000433 7e              	LD	A,(HL)
    91   000434 cd9804          	CALL	PUT2HS
    92   000437 cdb204          	CALL	ECHO
    93   00043a fe0d            	CP	CR
    94   00043c 2818            	JR	Z,VIEW4
    95   00043e fe2d            	CP	'-'
    96   000440 2816            	JR	Z,VIEW5
    97   000442 cd8304          	CALL	ASCHEX
    98   000445 3f              	CCF
    99   000446 d0              	RET	NC
   100   000447 07              	RLCA
   101   000448 07              	RLCA
   102   000449 07              	RLCA
   103   00044a 07              	RLCA
   104   00044b 4f              	LD	C,A
   105   00044c cdb204          	CALL	ECHO
   106   00044f cd8304          	CALL	ASCHEX
   107   000452 3f              	CCF
   108   000453 d0              	RET	NC
   109   000454 b1              	OR	C
   110   000455 77              	LD	(HL),A
   111   000456 23              VIEW4:	INC	HL
   112   000457 23              	INC	HL
   113   000458 2b              VIEW5:	DEC	HL
   114   000459 cdd504          	CALL	CRLF
   115   00045c 18d2            	JR	VIEW
   116                          ;
   117                          ;
   118                          ;
   119                          ;	-- JUMP TO MEMORY LOCATION COMMAND --
   120                          ;
   121                          GOTO:
   122   00045e e9              	JP	(HL)
   123                          ;
   124                          ;
   125                          ;
   126                          ;	-- DISK BOOT LOADER --
   127                          ;
   128                          BOOT:
   129   00045f dd217a04        	LD	IX,BOOTCB
   130   000463 cd2200          	CALL	DISKDVR		;ATTEMPT TO READ BOOT SECTOR
   131   000466 dd7e08          	LD	A,(IX+DSKSTS)
   132   000469 b7              	OR	A
   133   00046a cc8000          	CALL	Z,0080H		;EXECUTE BOOT IF NO ERRORS
   134   00046d f5              	PUSH	AF
   135   00046e cdc904          	CALL	PNEXT
   136   000471 204552522000    	DEFB	" ERR ",NULL
   137   000477 f1              	POP	AF
   138   000478 1825            	JR	PUT2HX
   139                          ;
   140                          ;
   141   00047a 01              BOOTCB:	DEFB	GETSEC
   142   00047b 00              	DEFB	0
   143   00047c 00              	DEFB	0
   144   00047d 01              	DEFB	1
   145   00047e 8000            	DEFW	0080H
   146   000480 8000            	DEFW	128
   147   000482 00              	DEFB	0
   148                          ;
   149                          ;
   150                          ;
   151                          ASCHEX:
   152   000483 d630            	SUB	'0'
   153   000485 d8              	RET	C
   154   000486 fe0a            	CP	10
   155   000488 3f              	CCF
   156   000489 d0              	RET	NC
   157   00048a d607            	SUB	7
   158   00048c fe0a            	CP	10
   159   00048e d8              	RET	C
   160   00048f fe10            	CP	16
   161   000491 3f              	CCF
   162   000492 c9              	RET
   163                          ;
   164                          ;
   165                          ;
   166                          PUT4HS:
   167   000493 7c              	LD	A,H
   168   000494 cd9f04          	CALL	PUT2HX
   169   000497 7d              	LD	A,L
   170                          PUT2HS:
   171   000498 cd9f04          	CALL	PUT2HX
   172   00049b 3e20            	LD	A,' '
   173   00049d 181f            	JR	OUTPUT
   174                          ;
   175                          ;
   176                          PUT2HX:
   177   00049f f5              	PUSH	AF
   178   0004a0 1f              	RRA
   179   0004a1 1f              	RRA
   180   0004a2 1f              	RRA
   181   0004a3 1f              	RRA
   182   0004a4 cda804          	CALL	PUTNIB
   183   0004a7 f1              	POP	AF
   184   0004a8 e60f            PUTNIB:	AND	00001111B
   185   0004aa c690            	ADD	A,90H
   186   0004ac 27              	DAA
   187   0004ad ce40            	ADC	A,40H
   188   0004af 27              	DAA
   189   0004b0 180c            	JR	OUTPUT
   190                          ;
   191                          ;
   192                          ;
   193                          ;
   194                          ECHO:
   195   0004b2 e5              	PUSH	HL
   196   0004b3 c5              	PUSH	BC
   197   0004b4 cd0900          	CALL	CIV		;CALL CONSOLE INPUT VECTOR
   198   0004b7 c1              	POP	BC
   199   0004b8 e1              	POP	HL
   200   0004b9 cbbf            	RES	7,A
   201   0004bb fe20            	CP	' '
   202   0004bd d8              	RET	C		;DO NOT ECHO CONTROL CHARACTERS
   203                          
   204                          OUTPUT:
   205   0004be e5              	PUSH	HL
   206   0004bf c5              	PUSH	BC
   207   0004c0 f5              	PUSH	AF
   208   0004c1 4f              	LD	C,A
   209   0004c2 cd0c00          	CALL	COV		;CALL CONSOLE OUTPUT VECTOR
   210   0004c5 f1              	POP	AF
   211   0004c6 c1              	POP	BC
   212   0004c7 e1              	POP	HL
   213   0004c8 c9              	RET
   214                          ;
   215                          ;
   216                          ;
   217                          PNEXT:
   218   0004c9 e3              	EX	(SP),HL
   219   0004ca 7e              PNXT1:	LD	A,(HL)
   220   0004cb cdbe04          	CALL	OUTPUT
   221   0004ce 7e              	LD	A,(HL)
   222   0004cf 23              	INC	HL
   223   0004d0 b7              	OR	A
   224   0004d1 20f7            	JR	NZ,PNXT1
   225   0004d3 e3              	EX	(SP),HL
   226   0004d4 c9              	RET
   227                          ;
   228                          ;
   229                          ;
   230   0004d5 cdc904          CRLF:	CALL	PNEXT
   231   0004d8 0d0a00          	DEFB	CR,LF,NULL
   232   0004db c9              	RET
   233                          ;
   234                          ;
   235                          ;
   236                          
rolli-f000.asm:
    31                          		include	"PRINTER.MAC"
PRINTER.MAC:
     1                          ;
     2                          ;
     3                          ;	... PARALLEL PRINTER OUTPUT ROUTINE ...
     4                          ;
     5                          CENTOUT:
     6                          
     7   0004dc 79              	LD	A,C
     8   0004dd d320            	OUT	(PRINTER),A	;OUTPUT DATA BYTE TO PRINTER
     9   0004df e3              	EX	(SP),HL
    10   0004e0 e3              	EX	(SP),HL
    11   0004e1 3e19            	LD	A,25
    12   0004e3 d353            	OUT	(STROBE),A
    13   0004e5 3d              CENT2:	DEC	A
    14   0004e6 20fd            	JR	NZ,CENT2
    15   0004e8 d353            	OUT	(STROBE),A	;TWANG THE STROBE
    16   0004ea c9              	RET
    17                          ;
    18                          ;
    19                          ;
    20                          CENTRDY:
    21   0004eb 2a47ff          	LD	HL,(PMASKS)
    22   0004ee db20            	IN	A,(PRINTER)
    23   0004f0 a5              	AND	L		;MASK BITS WITH 'AND'
    24   0004f1 ac              	XOR	H		;COMPARE WITH 'XOR'
    25   0004f2 c9              	RET			;ACC=0 IF PRINTER IS READY
    26                          ;
    27                          ;
    28                          ;
    29                          ;
    30                          
rolli-f000.asm:
    32   0004f3 95              		DEFB 95h                ; **** Exists on original ROM? ****
    33   0004f4 0000000000000000		dw	0, 0, 0, 0, 0, 0
                00000000        
    34                          ;		defs	(($ and 0ff00h)+100h)-$
    35                          		INCLUDE	"SERIAL.MAC"
SERIAL.MAC:
     1                          ;
     2                          ;
     3                          ;
     4                          ;	... BAUDRATE AND TIMING CONSIDERATIONS ...
     5                          ;
     6                          ;	THE FOLLOWING TABLE DETAILS THE BIT TIMES FOR THE BAUDRATES
     7                          ;    SUPPORTED BY THE ATR-8000 AND THE CTC PROGRAMMING PARAMETERS
     8                          ;    REQUIRED TO GENERATE THEM USING THE CTC IN THE TIMER MODE.
     9                          ;    (IE. BY DIVIDING DOWN THE 4MHZ CLOCK WITH 16 OR 256 PRESCALE.)
    10                          ;
    11                          ;	BAUD      PERIOD    MODULUS   PRESCALE
    12                          ;	----      ------    -------   --------
    13                          ;      19200        52 us      13        16
    14                          ;	9600       104 us      26        16
    15                          ;	4800       208 us      52        16
    16                          ;	2400       416 us     104        16
    17                          ;	1200       832 us     208        16
    18                          ;	 600      1664 us      26       256
    19                          ;	 300      3328 us      52       256
    20                          ;	 150      6656 us     104       256
    21                          ;	  75     13312 us     208       256
    22                          ;
    23                          ;
    24                          ;
    25                          ;
    26                          ;	... INTERRUPT SERVICE ROUTINES FOR SERIAL CONSOLE INPUT ...
    27                          ;
    28                          ;	AVERAGE EXECUTION TIME = 24.55 us FOR INTERRUPT SERVICE
    29                          ;				  4.75 us FOR INTERRUPT ACKNOWLEDGE
    30                          ;				 ------
    31                          ;				 29.30 us PER BIT
    32                          ;
    33                          ;
    34                          ;	*** START BAGE BOUNDARY RESTRICTIONS ***
    35                          ;
    36                          CONPAGE	EQU	$
    37                          ;
    38                          ;
    39                          RXSTART:
    40   000500 f5              	PUSH	AF
    41   000501 3e87            	LD	A,10000111B
    42   000503 d380            	OUT	(CTC0),A	;RESET CTC AND PROGRAM FOR TIMER MODE
    43   000505 3e1a            	LD	A,26
    44                          RXBAUD	EQU	$-1		;BAUDRATE PARAM IS STORED HERE
    45   000507 d380            	OUT	(CTC0),A
    46   000509 3e17            	LD	A,RXDATA & 255
    47   00050b 3210ff          	LD	(CTCVEC),A
    48   00050e 3e7f            	LD	A,01111111B
    49   000510 320000          RXDAT2:	LD	(RXTEMP),A	;SET DATA SHIFTER TO ALL ONES
    50   000513 f1              	POP	AF
    51   000514 fb              	EI
    52   000515 ed4d            	RETI			;EXECUTION TIME = 115 CLOCK CYCLES
    53                          ;
    54                          ;
    55                          ;
    56                          RXDATA:
    57   000517 f5              	PUSH	AF
    58   000518 db70            	IN	A,(ATARI)	;READ SERIAL INPUT BIT STREAM
    59   00051a 17              	RLA			;SHIFT DATA BIT (=MSB) INTO CARRY
    60   00051b 3e00            	LD	A,NULL		;LOAD A WITH PARTIAL DATA BYTE
    61                          RXTEMP	EQU	$-1
    62   00051d 1f              	RRA			;SHIFT NEW BIT IN AND ONES OUT
    63   00051e 38f0            	JR	C,RXDAT2
    64                          
    65   000520 3200ff          	LD	(KEYBUF),A	;STORE CHARACTER IN CIRCULAR BUFFER
    66                          RXINP	EQU	$-2
    67   000523 3e2c            	LD	A,RXSTOP & 255
    68   000525 3210ff          	LD	(CTCVEC),A	;ADVANCE TO STOP BIT STATE
    69   000528 f1              	POP	AF
    70   000529 fb              	EI
    71   00052a ed4d            	RETI			;EXECUTION TIME = 105 CYCLES
    72                          ;
    73                          ;
    74                          ;
    75                          RXSTOP:
    76   00052c f5              	PUSH	AF
    77   00052d 3ec7            	LD	A,11000111B
    78   00052f d380            	OUT	(CTC0),A	;ENABLE INTERRUPT FROM START BIT
    79   000531 3e01            	LD	A,1
    80   000533 d380            	OUT	(CTC0),A
    81   000535 3a0000          	LD	A,(RXINP)
    82   000538 3c              	INC	A
    83   000539 e60f            	AND	00001111B	;BUMP BUFFER POINTER MODULO 16
    84   00053b 320000          	LD	(RXINP),A
    85   00053e 3e00            	LD	A,RXSTART & 255
    86   000540 3210ff          	LD	(CTCVEC),A	;SET VECTOR BACK TO START BIT CODE
    87   000543 f1              	POP	AF
    88   000544 fb              	EI
    89   000545 ed4d            	RETI			;EXECUTION TIME = 132 CYCLES
    90                          ;
    91                          ;
    92                          ;
    93                          ;
    94                          ;	... INTERRUPT ROUTINES FOR SERIAL DATA OUTPUT ...
    95                          ;
    96                          TXSTART:
    97   000547 f5              	PUSH	AF
    98   000548 af              	XOR	A
    99   000549 d350            	OUT	(ATROUT),A	;SEND COMPLIMENT OF MARK AS START BIT
   100   00054b 3e54            	LD	A,TXDAT0 & 255
   101   00054d 3212ff          	LD	(CTCVEC+2),A	;SET INTERRUPT VECTOR FOR DATA BIT 0
   102   000550 f1              	POP	AF
   103   000551 fb              	EI
   104   000552 ed4d            	RETI
   105                          ;
   106                          ;
   107                          ;
   108                          ;
   109                          ;
   110                          TXDAT0:
   111   000554 f5              	PUSH	AF
   112   000555 3e00            	LD	A,NULL
   113                          TXTMP0	EQU	$-1
   114   000557 d350            	OUT	(ATROUT),A	;OUTPUT LSB OF SERIAL DATA TO CONSOLE
   115   000559 1f              	RRA
   116   00055a 320000          	LD	(TXTMP1),A	;SHIFT RIGHT TO PREPARE FOR NEXT BIT
   117   00055d 3e66            	LD	A,TXDAT1 & 255
   118   00055f 3212ff          	LD	(CTCVEC+2),A	;DINK WITH VECTOR FOR NEXT TIME
   119   000562 f1              	POP	AF
   120   000563 fb              	EI
   121   000564 ed4d            	RETI			;EXECUTION TIME = 94 CYCLES
   122                          ;
   123                          ;
   124                          TXDAT1:
   125   000566 f5              	PUSH	AF
   126   000567 3e00            	LD	A,NULL
   127                          TXTMP1	EQU	$-1
   128   000569 d350            	OUT	(ATROUT),A
   129   00056b 1f              	RRA
   130   00056c 320000          	LD	(TXTMP2),A
   131   00056f 3e78            	LD	A,TXDAT2 & 255
   132   000571 3212ff          	LD	(CTCVEC+2),A
   133   000574 f1              	POP	AF
   134   000575 fb              	EI
   135   000576 ed4d            	RETI
   136                          ;
   137                          ;
   138                          TXDAT2:
   139   000578 f5              	PUSH	AF
   140   000579 3e00            	LD	A,NULL
   141                          TXTMP2	EQU	$-1
   142   00057b d350            	OUT	(ATROUT),A
   143   00057d 1f              	RRA
   144   00057e 320000          	LD	(TXTMP3),A
   145   000581 3e8a            	LD	A,TXDAT3 & 255
   146   000583 3212ff          	LD	(CTCVEC+2),A
   147   000586 f1              	POP	AF
   148   000587 fb              	EI
   149   000588 ed4d            	RETI
   150                          ;
   151                          ;
   152                          TXDAT3:
   153   00058a f5              	PUSH	AF
   154   00058b 3e00            	LD	A,NULL
   155                          TXTMP3	EQU	$-1
   156   00058d d350            	OUT	(ATROUT),A
   157   00058f 1f              	RRA
   158   000590 320000          	LD	(TXTMP4),A
   159   000593 3e9c            	LD	A,TXDAT4 & 255
   160   000595 3212ff          	LD	(CTCVEC+2),A
   161   000598 f1              	POP	AF
   162   000599 fb              	EI
   163   00059a ed4d            	RETI
   164                          ;
   165                          ;
   166                          TXDAT4:
   167   00059c f5              	PUSH	AF
   168   00059d 3e00            	LD	A,NULL
   169                          TXTMP4	EQU	$-1
   170   00059f d350            	OUT	(ATROUT),A
   171   0005a1 1f              	RRA
   172   0005a2 320000          	LD	(TXTMP5),A
   173   0005a5 3eae            	LD	A,TXDAT5 & 255
   174   0005a7 3212ff          	LD	(CTCVEC+2),A
   175   0005aa f1              	POP	AF
   176   0005ab fb              	EI
   177   0005ac ed4d            	RETI
   178                          ;
   179                          ;
   180                          TXDAT5:
   181   0005ae f5              	PUSH	AF
   182   0005af 3e00            	LD	A,NULL
   183                          TXTMP5	EQU	$-1
   184   0005b1 d350            	OUT	(ATROUT),A
   185   0005b3 1f              	RRA
   186   0005b4 320000          	LD	(TXTMP6),A
   187   0005b7 3ec0            	LD	A,TXDAT6 & 255
   188   0005b9 3212ff          	LD	(CTCVEC+2),A
   189   0005bc f1              	POP	AF
   190   0005bd fb              	EI
   191   0005be ed4d            	RETI
   192                          ;
   193                          ;
   194                          TXDAT6:
   195   0005c0 f5              	PUSH	AF
   196   0005c1 3e00            	LD	A,NULL
   197                          TXTMP6	EQU	$-1
   198   0005c3 d350            	OUT	(ATROUT),A
   199   0005c5 1f              	RRA
   200   0005c6 320000          	LD	(TXTMP7),A
   201   0005c9 3ed2            	LD	A,TXDAT7 & 255
   202   0005cb 3212ff          	LD	(CTCVEC+2),A
   203   0005ce f1              	POP	AF
   204   0005cf fb              	EI
   205   0005d0 ed4d            	RETI
   206                          ;
   207                          ;
   208                          ;
   209                          TXDAT7:
   210   0005d2 f5              	PUSH	AF
   211   0005d3 3e00            	LD	A,NULL
   212                          TXTMP7	EQU	$-1
   213   0005d5 d350            	OUT	(ATROUT),A	;SEND LAST BIT WITHOUT SHIFTING AFTER
   214   0005d7 3ee0            	LD	A,TXSTOP & 255
   215   0005d9 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR FOR STOP BIT NEXT TIME
   216   0005dc f1              	POP	AF
   217   0005dd fb              	EI
   218   0005de ed4d            	RETI
   219                          ;
   220                          ;
   221                          ;
   222                          TXSTOP:
   223   0005e0 f5              	PUSH	AF
   224   0005e1 3e01            	LD	A,1
   225   0005e3 d350            	OUT	(ATROUT),A
   226   0005e5 3eee            	LD	A,TXEXIT & 255
   227   0005e7 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR TO CLEAR TX BUSY FLAG
   228   0005ea f1              	POP	AF
   229   0005eb fb              	EI
   230   0005ec ed4d            	RETI
   231                          ;
   232                          ;
   233                          TXEXIT:
   234   0005ee f5              	PUSH	AF
   235   0005ef 3e01            	LD	A,00000001B
   236   0005f1 d381            	OUT	(CTC1),A	;DISABLE INTERRUPT FROM XMIT BAUDRATE
   237   0005f3 3eff            	LD	A,255
   238   0005f5 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR SO BACKGROUND MONITOR IRQ
   239   0005f8 f1              	POP	AF
   240   0005f9 fb              RETI1:	EI
   241   0005fa ed4d            	RETI
   242                          ;
   243                          ;
   244                          ;	IF	(HIGH CONPAGE) NE (HIGH $)
   245                          ;	.ERROR /PAGE ERROR ON CONSOLE IO/
   246                          ;	ENDIF
   247                          ;
   248                          ;
   249                          ;
   250                          ;	*** END PAGE BOUNDARY RESTRICTIONS ***
   251                          ;
   252                          ;
   253                          ;
   254                          CONINIT:
   255   0005fc f3              	DI
   256   0005fd 21ee05          	LD	HL,TXEXIT
   257   000600 2212ff          	LD	(CTCVEC+2),HL
   258   000603 3e07            	LD	A,00000111B
   259   000605 d381            	OUT	(CTC1),A	;PROGRAM TX CTC IN TIMER MODE
   260   000607 3a0000          	LD	A,(RXBAUD)
   261   00060a d381            	OUT	(CTC1),A	;DIVIDE BY 26 GIVES 9600 BAUD
   262                          
   263   00060c 2100ff          	LD	HL,KEYBUF
   264   00060f 220000          	LD	(RXINP),HL	;RESET RX FIFO IN/OUT POINTERS
   265   000612 223306          	LD	(RXOUT),HL
   266                          CINIT2:
   267   000615 f3              	DI			;ALTERNATE ENTRY FROM 'DISKIO'
   268   000616 3e01            	LD	A,1
   269   000618 d357            	OUT	(CDMUX),A	;SET MUX TO ENABLE DATA TO CTC0
   270   00061a 067e            CINIT3:	LD	B,126
   271   00061c db70            CINIT4:	IN	A,(ATARI)
   272   00061e 17              	RLA
   273   00061f 30f9            	JR	NC,CINIT3	;RE-LOAD COUNT IN B IF INPUT LOW
   274   000621 10f9            	DJNZ	CINIT4		;ELSE LOOP FOR ONE 9600 BAUD CHAR TIME
   275                          
   276   000623 3ec7            	LD	A,11000111B
   277   000625 d380            	OUT	(CTC0),A	;PROGRAM RX CTC IN COUNTER MODE
   278   000627 3e01            	LD	A,1
   279   000629 d380            	OUT	(CTC0),A	;INTERRUPT ON NEXT START BIT
   280   00062b 210005          	LD	HL,RXSTART
   281   00062e 2210ff          	LD	(CTCVEC),HL
   282   000631 fb              	EI
   283   000632 c9              	RET
   284                          ;
   285                          ;
   286   000633 00ff            RXOUT:	DEFW	KEYBUF		;KEYBOARD BUFFER OUTPUT POINTER
   287                          ;
   288                          ;
   289                          CONST:
   290   000635 213306          	LD	HL,RXOUT
   291   000638 3a0000          	LD	A,(RXINP)
   292   00063b 96              	SUB	(HL)
   293   00063c c8              	RET	Z		;A=0 IF NO DATA AVAILABLE
   294                          
   295   00063d 3eff            	LD	A,255
   296   00063f c9              	RET
   297                          ;
   298                          ;
   299                          ;
   300                          CONIN:
   301   000640 cd3506          	CALL	CONST
   302   000643 28fb            	JR	Z,CONIN
   303                          
   304   000645 2a3306          	LD	HL,(RXOUT)
   305   000648 7e              	LD	A,(HL)		;GET RECEIVED DATA FROM FIFO
   306   000649 2c              	INC	L
   307   00064a cba5            	RES	4,L		;INCREMENT HL MODULO 16
   308   00064c 223306          	LD	(RXOUT),HL
   309   00064f c9              	RET
   310                          ;
   311                          ;
   312                          ;
   313                          CONOUT:
   314   000650 3a12ff          	LD	A,(CTCVEC+2)
   315   000653 feee            	CP	TXEXIT & 255
   316   000655 38f9            	JR	C,CONOUT	;LOOP TILL WE REACH 'TEXIT' OR HIGHER
   317                          
   318   000657 79              	LD	A,C
   319   000658 e67f            	AND	01111111B	;CLEAR BIT 7 AND SET FLAGS
   320   00065a e25f06          	JP	PO,COUT2
   321   00065d f680            	OR	10000000B
   322   00065f 320000          COUT2:	LD	(TXTMP0),A	;STORE RESULTING CHARACTER FOR XMIT
   323   000662 3e47            	LD	A,TXSTART & 255
   324   000664 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR FOR START BIT INTERRUPT
   325   000667 3e81            	LD	A,10000001B
   326   000669 d381            	OUT	(CTC1),A	;PROGRAM TX CTC IN TIMER MODE
   327   00066b c9              	RET
   328                          ;
   329                          ;
   330                          ;
   331                          
rolli-f000.asm:
    36                          ;
    37                          ;		CODE PAST THIS POINT IS ONLY USED IN ATARI DISK MODE
    38                          ;
    39                          		INCLUDE	"BITBANG.MAC"
BITBANG.MAC:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	19200 BAUD SERIAL I/O FOR ATARI COMM PORT	*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          ;
     8                          ;	19200 BAUD SERIAL I/O IS HALF DUPLEX DUE TO OBVIOUS
     9                          ;	TIMING CONSTRAINTS. ALL TRANSFERS ARE DONE FROM 4K PAGE
    10                          ;	ALIGNED BUFFER 'IOBUFF', WITH BLOCK START ADDRESS
    11                          ;	ARRANGED SO END-OF-BLOCK CONDITION IS MET WHEN POINTER
    12                          ;	ROLLS OVER THE NEXT EVEN PAGE BYTE BOUNDARY.
    13                          ;
    14                          ;	CALL WITH BLOCK START POINTER IN HL ,DATA POLARITY MASK
    15                          ;	IN D (WHERE D=0 TRUE DATA, D=FF INVERTED DATA) AND
    16                          ;	'C' OR 'E' HANDSHAKE CHARACTER IN E.
    17                          ;
    18                          ;
    19                          SENDBUFF:
    20   00066c e5              	PUSH	HL		;SAVE DATA BLOCK POINTER
    21   00066d d5              	PUSH	DE		;SAVE POLARITY MASK FOR DATA
    22   00066e 2101c3          	LD	HL,IOBUFF+LEN+1
    23   000671 73              	LD	(HL),E
    24   000672 1600            	LD	D,0
    25   000674 cd8406          	CALL	XMITBUF		;SEND 'C' OR 'E' CHARACTER FROM E
    26   000677 d1              	POP	DE
    27   000678 e1              	POP	HL
    28   000679 1e00            	LD	E,0
    29   00067b cd8406          	CALL	XMITBUF		;THEN SEND DATA BLOCK TO ATARI
    30   00067e 2101c3          	LD	HL,IOBUFF+LEN+1
    31   000681 73              	LD	(HL),E		;FALL THROUGH TO SEND CHECKSUM
    32   000682 1600            	LD	D,0
    33                          ;
    34                          ;	CALL WITH DATA BLOCK POINTER IN HL.
    35                          ;	PRESERVES MASK/CKECKSUM IN D/E.
    36                          ;
    37                          XMITBUF:
    38   000684 f3              	DI
    39   000685 011907          	LD	BC,STARBIT
    40   000688 ed4312ff        	LD	(CTCVEC+2),BC	;SET UP INITIAL INTERRUPT VECTOR
    41   00068c 0608            	LD	B,8
    42   00068e 3e87            	LD	A,10000111B
    43   000690 d381            	OUT	(CTC1),A	;PROGRAM CTC1 TO INTERRUPT AT BIT RATE
    44   000692 3e0d            	LD	A,13
    45   000694 d381            	OUT	(CTC1),A	;COUNT 13*(16*250 NS) GIVES 19200 BAUD
    46   000696 fb              	EI
    47   000697 18fe            	JR	$		;SPIN HERE TILL INTERRUPTS GET US OUT
    48                          ;
    49                          ;
    50                          ;
    51                          ;
    52                          ;
    53                          ;
    54                          ;	... INTERRUPT FOR COMMAND INPUT HIGH->LOW TRANSITION ..
    55                          ;
    56                          CSTART:
    57   000699 08              	EX	AF,AF'
    58   00069a d9              	EXX
    59   00069b 3eff            	LD	A,255
    60   00069d 3255ff          	LD	(CMDFLG),A	;SET 'CMDFLG' FLAG TO ERROR STATE FIRST
    61   0006a0 d357            	OUT	(CDMUX),A	;SWITCH MUX TO ENABLE SERIAL DATA IRQ
    62   0006a2 21fbc2          	LD	HL,IOBUFF+LEN-5	;POINT DE 5 BYTES BEFORE END OF BUFFER
    63   0006a5 cdd906          	CALL	RXBLOCK		;ATTEMPT TO RECEIVE COMMAND FRAME
    64   0006a8 300a            	JR	NC,CSTRT1	;JUMP IF NO DATA HAPPENED
    65                          
    66   0006aa 2b              	DEC	HL
    67   0006ab 7e              	LD	A,(HL)
    68   0006ac b9              	CP	C		;COMPARE DERRIVED AND RECVD CHECKSUMS
    69   0006ad 2005            	JR	NZ,CSTRT1	;JUMP IF CHECKSUM ERROR
    70                          
    71   0006af 3e01            	LD	A,1
    72   0006b1 3255ff          	LD	(CMDFLG),A	;SET FLAG IF GOOD COMMAND FRAME
    73   0006b4 08              CSTRT1:	EX	AF,AF'
    74   0006b5 d9              	EXX
    75   0006b6 fb              	EI
    76   0006b7 ed4d            	RETI
    77                          ;
    78                          ;
    79                          ;
    80                          ;	... DATA FRAME RECEIVE SUBROUTINE ...
    81                          ;
    82                          RECVBUFF:
    83   0006b9 f3              	DI
    84   0006ba 2100c1          	LD	HL,IOBUFF
    85   0006bd cdd906          	CALL	RXBLOCK		;BITBANG A BLOCK OF INPUT DATA
    86   0006c0 fb              	EI
    87   0006c1 380d            	JR	C,RBUFF2	;JUMP IF BUFFER OVERFLOWED
    88                          
    89   0006c3 2b              	DEC	HL
    90   0006c4 7e              	LD	A,(HL)
    91   0006c5 b9              	CP	C
    92   0006c6 2008            	JR	NZ,RBUFF2	;JUMP IF CHECKSUMS DON'T AGREE
    93                          
    94   0006c8 1100c1          	LD	DE,IOBUFF
    95   0006cb b7              	OR	A
    96   0006cc ed52            	SBC	HL,DE		;ELSE COMPUTE LENGTH OF BLOCK LESS
    97   0006ce af              	XOR	A		; CHECKSUM BYTE AND RETURN WITH
    98   0006cf c9              	RET			; RESULT IN HL AND ZERO FLAG SET
    99                          ;
   100   0006d0 3e4e            RBUFF2:	LD	A,'N'
   101   0006d2 cd560c          	CALL	SENDCHAR	;SEND 'NAK' FOR BAD DATA FRAME
   102   0006d5 3eff            	LD	A,255
   103   0006d7 b7              	OR	A
   104   0006d8 c9              	RET			;RETURN WITH ACC SET NON=ZERO
   105                          ;
   106                          ;
   107                          ;
   108                          ;
   109                          ;
   110                          ;	... BITBANG INPUT SUBROUTINE ...
   111                          ;
   112                          ;	CALL WITH BLOCK START POINTER IN HL. RETURNS WITH
   113                          ;	HL POINTING TO LAST BYTE+1 OF BLOCK RECEIVED.
   114                          ;	THE CARRY BIT IS SET IF THE BUFFER FILLED UP BEFORE
   115                          ;	THE BIT STREAM STOPPED.
   116                          ;
   117                          ;
   118                          RXBLOCK:
   119   0006d9 11aa0a          	LD	DE,2730		;SET ABORT COUNTER FOR 32 MILLISECONDS
   120   0006dc 010000          	LD	BC,0		;CLEAR B/C FOR CHECKSUM DERRIVATION
   121   0006df 1823            	JR	RXB35		;GO START LOOPING FOR START BIT
   122                          ;
   123   0006e1 79              RXB1:	LD	A,C
   124   0006e2 80              	ADD	A,B
   125   0006e3 ce00            	ADC	A,0		;ACCUMULATE CHECKSUM ATARI STYLE
   126   0006e5 4f              	LD	C,A
   127   0006e6 e3              	EX	(SP),HL
   128   0006e7 e3              	EX	(SP),HL
   129   0006e8 e3              	EX	(SP),HL
   130   0006e9 e3              	EX	(SP),HL
   131   0006ea 0608            	LD	B,8
   132                          ;
   133                          ;	SERIAL->PARALLEL CONVERSION AT 52 MICROSECONDS PER BIT
   134                          ;
   135   0006ec 3e0b            RXB2:	LD	A,11		;  7 CYCLES
   136   0006ee 3e0b            	LD	A,11		;  7 CYCLES
   137   0006f0 00              	NOP			;  4 CYCLES
   138   0006f1 3d              RXB3:	DEC	A		; 44 CYCLES  (11*4)
   139   0006f2 c2f106          	JP	NZ,RXB3		;110 CYCLES  (11*10)
   140   0006f5 db70            	IN	A,(ATARI)	; 11 CYCLES
   141   0006f7 17              	RLA			;  4 CYCLES
   142   0006f8 cb1a            	RR	D		;  8 CYCLES
   143   0006fa 10f0            	DJNZ	RXB2		; 13 CYCLES  (8 ON FINAL BIT)
   144                          
   145   0006fc 42              	LD	B,D		;SAVE COPY OF LAST DATA BYTE IN B
   146   0006fd 72              	LD	(HL),D		;THEN STORE IN MEMORY BUFFER @HL
   147   0006fe 23              	INC	HL
   148   0006ff 7c              	LD	A,H
   149                          iobuflenhi	equ	(IOBUFF+LEN) / 256
   150   000700 fec3            	CP	iobuflenhi
   151   000702 3f              	CCF
   152   000703 d8              	RET	C		;RETURN WITH CARRY SET IF BUFFER FILLED
   153                          
   154   000704 3e47            RXB35:	LD	A,01000111B
   155   000706 d380            	OUT	(CTC0),A	;PUT CTC0 IN COUNTER MODE
   156   000708 af              	XOR	A
   157   000709 d380            	OUT	(CTC0),A	;COUNT DATA HIGH->LOW EDGES MOD 256
   158   00070b 11a101          	LD	DE,417		;5 MILLISECONDS @ 12 MICROSECONDS/LOOP
   159   00070e db80            RXB4:	IN	A,(CTC0)
   160   000710 b7              	OR	A
   161   000711 20ce            	JR	NZ,RXB1		;NEW BYTE IS COMING IF START BIT LOW
   162   000713 1b              	DEC	DE
   163   000714 7a              	LD	A,D
   164   000715 b3              	OR	E
   165   000716 20f6            	JR	NZ,RXB4		;ELSE LOOP TILL TIMER RUNS OUT
   166                          
   167   000718 c9              	RET			;RETURN WITH CARRY CLEAR IF TIMED OUT
   168                          ;
   169                          ;
   170                          ;
   171                          ;
   172                          ;	**** PAGE BOUNDARY SENSITIVE CODE STARTS HERE ****
   173                          ;
   174                          SERPAGE	EQU	$
   175                          ;
   176                          ;
   177                          ;	... DAMN FAST TRASMIT INTERRUPTS ...
   178                          ;
   179                          ;	HL ... POINTS TO DATA BLOCK TO BE SENT
   180                          ;	 D ... HOLDS DATA POLARITY MASK
   181                          ;	 E ... USED TO ACCUMULATE CHECKSUM
   182                          ;	 B ... USED FOR DJNZ TO COUNT BITS
   183                          ;	 C ... USED FOR PARALLEL-SERIAL OUTPUT
   184                          ;
   185                          ;
   186                          STARBIT:
   187   000719 af              	XOR	A
   188   00071a d350            	OUT	(ATROUT),A	;SEND START BIT
   189   00071c fb              	EI
   190   00071d 7e              	LD	A,(HL)		;LOAD A WITH TRANSMIT DATA BYTE
   191   00071e 23              	INC	HL		; AND INCREMENT BUFFER POINTER
   192   00071f aa              	XOR	D		;DO DATA POLARITY THING
   193   000720 4f              	LD	C,A		;THEN STUFF IN C FOR SHIFTING OUT
   194   000721 83              	ADD	A,E
   195   000722 ce00            	ADC	A,0
   196   000724 5f              	LD	E,A		;ACCUMULATE CHECKSUM IN E
   197   000725 3e2c            	LD	A,DATBIT & 255
   198   000727 3212ff          	LD	(CTCVEC+2),A	;FIX BAUDRATE INTERRUPT VECTOR
   199   00072a ed4d            	RETI			;RETURN TO IDLE LOOP
   200                          ;
   201                          ;
   202                          ;
   203                          DATBIT:
   204   00072c 79              	LD	A,C
   205   00072d d350            	OUT	(ATROUT),A	;SEND DATA BIT (LSB)
   206   00072f fb              	EI
   207   000730 cb19            	RR	C		;SHIFT DATA FOR NEXT BIT
   208   000732 1005            	DJNZ	DATB2		;DECREMENT AND SKIP IF NOT LAST BIT
   209                          
   210   000734 3e3b            	LD	A,STOPB1 & 255
   211   000736 3212ff          	LD	(CTCVEC+2),A	;THEN FIX VECTOR TO SEND STOP BIT
   212   000739 ed4d            DATB2:	RETI			;RETURN TO IDLE LOOP
   213                          ;
   214                          ;
   215                          ;
   216                          STOPB1:
   217   00073b 3e01            	LD	A,1
   218   00073d d350            	OUT	(ATROUT),A	;SEND STOP BIT
   219   00073f fb              	EI
   220   000740 7c              	LD	A,H
   221   000741 fec3            	CP	iobuflenhi
   222   000743 3009            	JR	NC,STOP1A	;JUMP IF BUFFER END REACHED
   223                          
   224   000745 0608            	LD	B,8		;LOAD BITCOUNT FOR NEXT RECEIVE BYTE
   225   000747 3e19            	LD	A,STARBIT & 255
   226   000749 3212ff          	LD	(CTCVEC+2),A
   227   00074c ed4d            	RETI			;SET TO SEND SECOND STOP BIT
   228                          ;
   229   00074e 3e55            STOP1A:	LD	A,ENDBIT & 255
   230   000750 3212ff          	LD	(CTCVEC+2),A	;SET TO END TRANSMISSION
   231   000753 ed4d            	RETI
   232                          ;
   233                          ;
   234                          ;
   235                          ;	IF	(HIGH SERPAGE) NE (HIGH $)
   236                          ;	.ERROR /PAGE ERROR ON ATARI SIO/
   237                          ;	ENDIF
   238                          ;
   239                          ;
   240                          ;
   241                          ENDBIT:
   242   000755 3e01            	LD	A,00000001B	;STOP INTERRUPTS FROM BAUDRATE CTC
   243   000757 d381            	OUT	(CTC1),A	; BUT KEEP ON COUNTING TO CLOCK U26
   244   000759 fb              	EI
   245   00075a 3eff            	LD	A,255
   246   00075c 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR BACK TO STANDARD PLACE
   247   00075f e1              	POP	HL		;DISCARD IRQ RETURN ADDRESS AND RETURN
   248   000760 ed4d            	RETI			; TO SECOND ADDRESS ON STACK
   249                          ;
   250                          ;
   251                          ;	**** END PAGE BOUNDARY RESTRICTIONS ****
   252                          ;
   253                          ;
   254                          
rolli-f000.asm:
    40                          		INCLUDE	"ATARI.MAC"
ATARI.MAC:
     1                          ;
     2                          ;
     3                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
     4                          ;
     5                          NTRKS	EQU	0		;NUMBER OF TRACKS
     6                          STEPRT	EQU	1		;STEP RATE
     7                          NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
     8                          NSIDES	EQU	4		;NUMBER OF SIDES
     9                          MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
    10                          SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
    11                          DSKBITS	EQU	8		;MISC NAUGHTY BITS
    12                          SPARE0	EQU	9
    13                          SPARE1	EQU	10
    14                          SPARE2	EQU	11
    15                          
    16                          CMDSTS	EQU	12		;COMMAND STATUS
    17                          HDWSTS	EQU	13		;HARDWARE STATUS
    18                          
    19                          FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
    20                          SPARE3	EQU	15
    21                          ;
    22                          ;
    23                          ;	EQUATES FOR BITS IN 'MEDIA' BYTE
    24                          ;
    25                          SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
    26                          DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
    27                          ;
    28                          ;
    29                          ;	EQUATES FOR BITS IN 'DSKBITS' BYTE
    30                          ;
    31                          PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
    32                          ;
    33                          ;
    34                          ;	EQUATES FOR BITS IN 'CMDSTS' BYTE
    35                          ;
    36                          BADCMD	EQU	0		;BAD COMMAND FRAME BIT
    37                          BADDAT	EQU	1		;BAD DATA FRAME BIT
    38                          BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
    39                          WRPROT	EQU	3		;WRITE PROTECTED BIT
    40                          ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
    41                          SEC256	EQU	5		;LONG/SHORT SECTOR BIT
    42                          ;
    43                          ;
    44                          ;	EQUATES FOR BITS IN 'FLAGS' BYTE
    45                          ;
    46                          FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
    47                          CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
    48                          ;
    49                          ;
    50                          ;	PAGE
    51                          ;
    52                          ;	<<< MAIN LOOP FOR ATARI DISK EMULATOR >>>
    53                          ;
    54                          ;
    55                          ;
    56                          ;
    57                          EMULATOR:
    58   000762 3e01            	LD	A,1
    59   000764 d352            	OUT	(BANKSW),A	;TURN OFF THE ROM
    60                          ;
    61                          ;	CHECK TO DETERMINE WHICH CONSOLE IS ACTIVE
    62                          ;
    63   000766 21fec2          LOGON:	LD	HL,IOBUFF+LEN-2
    64   000769 f3              	DI
    65   00076a cdd906          	CALL	RXBLOCK		;LISTEN FOR A MESSAGE FROM ABOVE
    66   00076d fb              	EI
    67   00076e 30f6            	JR	NC,LOGON	;KEEP LOOPING TILL SOMETHING RECEIVED
    68   000770 2afec2          	LD	HL,(IOBUFF+LEN-2)
    69   000773 11e680          	LD	DE,80E6H
    70   000776 b7              	OR	A
    71   000777 ed52            	SBC	HL,DE
    72   000779 cade03          	JP	Z,MINIMON	;GOTO MONITOR IF 9600 BAUD <CR>
    73                          ;
    74                          ;	ENTER ATARI DISK EMULATOR MODE
    75                          ;
    76   00077c 3e03            	LD	A,3
    77   00077e 3233ff          	LD	(RWMAX),A	;DO LESS RETRIES IN ATARI MODE
    78   000781 3e38            	LD	A,38H		;LOAD ACC WITH 'JR C,XX' OPCODE
    79   000783 328701          	LD	(KLUDGE),A	;CRIPPLE READY ERROR FROM 'SELECT'
    80   000786 db50            	IN	A,(SERIN)
    81   000788 cb5f            	BIT	3,A
    82   00078a 2005            	JR	NZ,HAS850	;JUMP IF 850 JUMPER PRESENT
    83                          
    84   00078c 3eff            	LD	A,255
    85   00078e 322308          	LD	(PTRID),A	;ELSE ZAP PRINTER ID IN TABLE
    86                          
    87   000791 21e107          HAS850:	LD	HL,DUMMY
    88   000794 221900          	LD	(RENEW+1),HL	;MAKE DUMMY CONSOLE RE-INIT VECTOR
    89   000797 ed5b1940        	LD	DE,(RENEW+1+16384)
    90   00079b b7              	OR	A
    91   00079c ed52            	SBC	HL,DE
    92   00079e 280c            	JR	Z,MAIN		;JUMP IF 16K MEMORY SIZE MACHINE
    93                          
    94   0007a0 210000          	LD	HL,0
    95   0007a3 224bff          	LD	(PBASE),HL	;ELSE SETUP FOR 48K PRINTER BUFFER
    96   0007a6 21ffbf          	LD	HL,0BFFFH
    97   0007a9 224dff          	LD	(PSIZE),HL
    98                          
    99   0007ac cdd108          MAIN:	CALL	SPOOLER		;KEEP BACKGROUND PRINTING GOING
   100   0007af 2a3aff          	LD	HL,(FSMVEC)
   101   0007b2 cdbd07          	CALL	CALLHL		;DO ATARI TASK ROUTINE
   102   0007b5 2a3cff          	LD	HL,(EXTVEC)
   103   0007b8 cdbd07          	CALL	CALLHL		;DO EXTRA TASK ROUTINE
   104   0007bb 18ef            	JR	MAIN
   105                          ;
   106                          ;
   107   0007bd e9              CALLHL:	JP	(HL)
   108                          ;
   109                          ;
   110                          ;
   111                          PWRWAIT:
   112   0007be db70            	IN	A,(ATARI)
   113   0007c0 e68a            	AND	10001010B	;MASK TO DATA/POWER/COMMAND BITS
   114   0007c2 fe8a            	CP	10001010B
   115   0007c4 c0              	RET	NZ
   116                          
   117   0007c5 f3              	DI
   118   0007c6 af              	XOR	A
   119   0007c7 3255ff          	LD	(CMDFLG),A	;RESET COMMAND FRAME FLAG
   120   0007ca d357            	OUT	(CDMUX),A	;SET MUX TO GATE COMMAND LINE TO CTC0
   121   0007cc 3ed7            	LD	A,11010111B
   122   0007ce d380            	OUT	(CTC0),A	;RESET CTC AND ARM FOR HIGH->LOW IRQ
   123   0007d0 3e01            	LD	A,1
   124   0007d2 d380            	OUT	(CTC0),A
   125   0007d4 219906          	LD	HL,CSTART
   126   0007d7 2210ff          	LD	(CTCVEC),HL	;STORE INTERRUPT VECTOR
   127   0007da fb              	EI
   128   0007db 21e207          	LD	HL,CMDWAIT
   129   0007de 223aff          	LD	(FSMVEC),HL	;SET FSM VECTOR TO 'CMDHIGH' STATE
   130   0007e1 c9              DUMMY:	RET
   131                          ;
   132                          ;
   133                          ;
   134                          CMDWAIT:
   135   0007e2 3a55ff          	LD	A,(CMDFLG)
   136   0007e5 b7              	OR	A		;SEE IF COMMAND FRAME HAS ARRIVED
   137   0007e6 c8              	RET	Z		;EXIT IF NOTHING HAS HAPPENED
   138                          
   139   0007e7 fe01            	CP	1
   140   0007e9 2808            	JR	Z,CMDL4		;PROCESS COMMAND IF GOOD FRAME RECVD
   141                          
   142   0007eb f3              	DI			;ELSE RESET INTERRUPT AND START AGAIN
   143   0007ec 3e03            	LD	A,00000011B
   144   0007ee d380            	OUT	(CTC0),A
   145   0007f0 fb              	EI
   146   0007f1 1816            	JR	CMDL5		;GO SET FSM VECTOR
   147                          ;
   148                          ;
   149                          CFRAME	EQU	IOBUFF+LEN-5	;COMMAND FRAME IS LAST 5 BYTES OF BUFF
   150                          ;
   151   0007f3 3afbc2          CMDL4:	LD	A,(CFRAME)
   152   0007f6 2a38ff          	LD	HL,(IDPTR)	;GET POINTER TO ID CODE TABLE
   153   0007f9 cd1008          	CALL	SCAN		;SCAN TABLE FOR MATCHING UNIT ID CODE
   154   0007fc 200b            	JR	NZ,CMDL5	;EXIT IF COMMAND IS NOT FOR US
   155                          
   156   0007fe 3afcc2          	LD	A,(CFRAME+1)
   157   000801 cd1008          	CALL	SCAN		;SCAN FOR COMMAND CODE IN TABLE
   158   000804 2003            	JR	NZ,CMDL5	;ERROR IF NO MATCH FOUND
   159                          
   160   000806 cdbd07          	CALL	CALLHL		;GO TO COMMAND PROCESSOR @HL
   161                          ;
   162   000809 21be07          CMDL5:	LD	HL,PWRWAIT
   163   00080c 223aff          	LD	(FSMVEC),HL	;SET FSM VECTOR BACK TO IDLE STATE
   164   00080f c9              	RET
   165                          ;
   166                          ;
   167                          ;
   168                          ;
   169                          SCAN:
   170   000810 4e              	LD	C,(HL)		;LOAD BC WITH TABLE LENGTH @HL
   171   000811 23              	INC	HL
   172   000812 46              	LD	B,(HL)
   173   000813 23              	INC	HL
   174   000814 edb1            	CPIR			;SCAN STRING @HL FOR MATCH WITH ACC
   175   000816 c0              	RET	NZ		;EXIT IF NO MATCH
   176                          
   177   000817 f5              	PUSH	AF
   178   000818 09              	ADD	HL,BC		;ELSE ADD RESIDUE FROM CPIR TO HL
   179   000819 09              	ADD	HL,BC		; THREE TIMES TO POINT TO ADDRESS
   180   00081a 09              	ADD	HL,BC		; CORRESPONDING TO MATCHED VALUE
   181   00081b 7e              	LD	A,(HL)
   182   00081c 23              	INC	HL
   183   00081d 66              	LD	H,(HL)
   184   00081e 6f              	LD	L,A
   185   00081f f1              	POP	AF
   186   000820 c9              	RET			;RETURN TABLE ENTRY IN HL
   187                          ;
   188                          ;
   189                          ;
   190                          ;	... DEVICE ID TABLE FOR DISK/PRINTER/RS232 COMBO BOX ...
   191                          ;
   192                          IDTAB:
   193   000821 0000            	DEFW	IDMAX
   194                          
   195   000823 40              PTRID:	DEFB	'@'		;PRINTER CONTROLLER ID CODE
   196   000824 31              	DEFB	'1'		;DISK UNIT #1 ID CODE
   197   000825 32              	DEFB	'2'		;DISK #2
   198   000826 33              	DEFB	'3'		;DISK #3
   199   000827 34              	DEFB	'4'		;DISK #4
   200   000828 5a              	DEFB	'Z'		;Z80 LOAD/DUMP/GOTO
   201                          
   202   000829 5408            	DEFW	Z80TAB
   203   00082b 3d08            	DEFW	DISKTAB
   204   00082d 3d08            	DEFW	DISKTAB
   205   00082f 3d08            	DEFW	DISKTAB
   206   000831 3d08            	DEFW	DISKTAB
   207   000833 3508            	DEFW	PTRTAB
   208                          IDMAX	EQU	($-IDTAB)/3
   209                          ;
   210                          ;
   211                          ;
   212                          PTRTAB:				;PRINTER COMMANDS
   213   000835 0000            	DEFW	PTRMAX
   214                          
   215   000837 53              	DEFB	'S'		;PRINTER STATUS
   216   000838 57              	DEFB	'W'		;PRINTER OUTPUT
   217                          
   218   000839 7808            	DEFW	PTRWRITE
   219   00083b 6208            	DEFW	PTRSTAT
   220                          PTRMAX	EQU	($-(PTRTAB+2))/3
   221                          ;
   222                          ;
   223                          ;
   224                          DISKTAB:			;DISK COMMANDS
   225   00083d 0000            	DEFW	DISKMAX
   226                          
   227   00083f 52              	DEFB	'R'		;DISK READ
   228   000840 53              	DEFB	'S'		;DISK STATUS
   229   000841 57              	DEFB	'W'		;DISK WRITE
   230   000842 50              	DEFB	'P'		;DISK PUT
   231   000843 4e              	DEFB	'N'		;GET PARAMETERS
   232   000844 4f              	DEFB	'O'		;PUT PARAMETERS
   233   000845 21              	DEFB	'!'		;FORMAT DISK
   234                          
   235   000846 380b            	DEFW	DISKINIT
   236   000848 050c            	DEFW	PUTPARAMS
   237   00084a e70b            	DEFW	GETPARAMS
   238   00084c 0509            	DEFW	DISKPUT
   239   00084e 0809            	DEFW	DISKWRITE
   240   000850 db0a            	DEFW	DISKSTAT
   241   000852 8c09            	DEFW	DISKREAD
   242                          DISKMAX	EQU	($-(DISKTAB+2))/3
   243                          ;
   244                          ;
   245                          ;
   246                          Z80TAB:				;Z80 COMMANDS
   247   000854 0000            	DEFW	Z80MAX
   248                          
   249   000856 52              	DEFB	'R'		;MEMORY READ
   250   000857 57              	DEFB	'W'		;MEMORY WRITE
   251   000858 53              	DEFB	'S'		;SET ADDRESS
   252   000859 47              	DEFB	'G'		;GOTO ADDRESS
   253                          
   254   00085a b40c            	DEFW	Z80GOTO
   255   00085c a60c            	DEFW	Z80SET
   256   00085e 7b0c            	DEFW	Z80WRITE
   257   000860 5f0c            	DEFW	Z80READ
   258                          Z80MAX	EQU	($-(Z80TAB+2))/3
   259                          ;
   260                          ;
   261                          ;
   262                          ;	PAGE
   263                          ;
   264                          ;
   265                          ;	... PRINTER STATUS COMMAND PROCESSOR ...
   266                          ;
   267                          PTRSTAT:
   268   000862 cd4a0c          	CALL	SENDACK
   269   000865 2143ff          	LD	HL,PSMSG
   270   000868 11fcc2          	LD	DE,IOBUFF+LEN-4
   271   00086b d5              	PUSH	DE
   272   00086c 010400          	LD	BC,4
   273   00086f edb0            	LDIR			;COPY PRINTER STATUS FRAME FROM RAM
   274   000871 e1              	POP	HL
   275   000872 114300          	LD	DE,'C'		;SEND PRINTER STATUS UN-INVERTED
   276   000875 c36c06          	JP	SENDBUFF
   277                          ;	ret
   278                          ;
   279                          ;
   280                          ;	... PRINTER WRITE COMMAND PROCESSOR ...
   281                          ;
   282                          PTRWRITE:
   283   000878 cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
   284   00087b cdb906          	CALL	RECVBUFF	;GET PRINT DATA FROM SERIAL BUS
   285   00087e c0              	RET	NZ		;EXIT IF ERROR OR TIMEOUT
   286                          
   287   00087f 112800          	LD	DE,40
   288   000882 b7              	OR	A
   289   000883 ed52            	SBC	HL,DE
   290   000885 c0              	RET	NZ		;ERROR IF RX BLOCK LENGTH <> 40 BYTES
   291                          
   292   000886 cd4a0c          	CALL	SENDACK		;ELSE SEND 'ACK'
   293   000889 2100c1          	LD	HL,IOBUFF
   294   00088c 0628            	LD	B,40
   295   00088e 7e              PWRIT3:	LD	A,(HL)
   296   00088f fe9b            	CP	9BH		;CHECK FOR 'ATASCII' CARRIAGE RETURN
   297   000891 2005            	JR	NZ,PWRT3A
   298                          
   299   000893 213eff          	LD	HL,NEWLIN
   300   000896 46              	LD	B,(HL)		;OUTPUT PRINTER'S NEWLINE CHARACTER(S)
   301   000897 23              	INC	HL
   302                          
   303   000898 e5              PWRT3A:	PUSH	HL
   304   000899 2a4fff          	LD	HL,(PCOUNT)
   305   00089c ed5b4dff        	LD	DE,(PSIZE)
   306   0008a0 b7              	OR	A
   307   0008a1 ed52            	SBC	HL,DE		;TEST IF PRINTER BUFFER IS FULL
   308   0008a3 e1              	POP	HL
   309   0008a4 380e            	JR	C,PWRIT4	;STORE ANOTHER CHARACTER IF NOT FULL
   310                          
   311   0008a6 e5              	PUSH	HL
   312   0008a7 c5              	PUSH	BC
   313   0008a8 cdd108          	CALL	SPOOLER		;TRY TO CLEAR OUT BUFFER
   314   0008ab c1              	POP	BC
   315   0008ac e1              	POP	HL
   316   0008ad db70            	IN	A,(ATARI)
   317   0008af e602            	AND	00000010B	;TEST ATARI COMMAND LINE AND
   318   0008b1 20e5            	JR	NZ,PWRT3A	;STAY IN LOOP IF INACTIVE
   319                          
   320   0008b3 c9              	RET			;ELSE ABORT PRINTING AND RETURN
   321                          ;
   322   0008b4 7e              PWRIT4:	LD	A,(HL)
   323   0008b5 23              	INC	HL
   324   0008b6 e5              	PUSH	HL
   325   0008b7 c5              	PUSH	BC
   326   0008b8 2a51ff          	LD	HL,(PINP)
   327   0008bb cdf108          	CALL	INDEX		;GET INDEX TO FIFO INPUT PLACE
   328   0008be ed5351ff        	LD	(PINP),DE	;STORE UPDATED INPUT OFFSET
   329   0008c2 77              	LD	(HL),A		;STORE CHARACTER IN QUEUE
   330   0008c3 2a4fff          	LD	HL,(PCOUNT)
   331   0008c6 23              	INC	HL		;BUMP FIFO CHARACTER COUNTER
   332   0008c7 224fff          	LD	(PCOUNT),HL
   333   0008ca c1              	POP	BC
   334   0008cb e1              	POP	HL
   335   0008cc 10c0            	DJNZ	PWRIT3		;REPEAT TO END OF STRING
   336                          
   337   0008ce c3540c          	JP	SENDCOMP	;SEND 'COMPLETE' TO ATARI
   338                          ;	ret
   339                          ;
   340                          ;
   341                          ;
   342                          SPOOLER:
   343   0008d1 2a4fff          	LD	HL,(PCOUNT)
   344   0008d4 7c              	LD	A,H
   345   0008d5 b5              	OR	L
   346   0008d6 c8              	RET	Z		;EXIT IF NO DATA IN FIFO TO PRINT
   347                          
   348   0008d7 cd1500          	CALL	LISTV+3
   349   0008da c0              	RET	NZ		;EXIT IF PRINTER BUSY
   350                          
   351   0008db 2a53ff          	LD	HL,(POUT)
   352   0008de cdf108          	CALL	INDEX		;GET POINTER WITH AUTO-INCREMENT
   353   0008e1 ed5353ff        	LD	(POUT),DE
   354   0008e5 4e              	LD	C,(HL)
   355   0008e6 cd1200          	CALL	LISTV		;PRINT CHARACTER AND EXIT
   356   0008e9 2a4fff          	LD	HL,(PCOUNT)
   357   0008ec 2b              	DEC	HL		;DIMINISH BUFFER COUNT BY ONE
   358   0008ed 224fff          	LD	(PCOUNT),HL
   359   0008f0 c9              	RET
   360                          ;
   361                          ;
   362                          ;
   363                          ;
   364                          INDEX:
   365   0008f1 eb              	EX	DE,HL
   366   0008f2 2a4bff          	LD	HL,(PBASE)
   367   0008f5 19              	ADD	HL,DE		;ADD OFFSET TO FIFO BASE ADDRESS
   368   0008f6 e5              	PUSH	HL
   369   0008f7 13              	INC	DE		;BUMP OFFSET NOW IN DE
   370   0008f8 2a4dff          	LD	HL,(PSIZE)
   371   0008fb b7              	OR	A
   372   0008fc ed52            	SBC	HL,DE		;COMPARE TO MAX OFFSET VALUE
   373   0008fe 3003            	JR	NC,INDEX2
   374   000900 110000          	LD	DE,0		;SET OFFSET TO ZERO IF ROLL-OVER
   375   000903 e1              INDEX2:	POP	HL
   376   000904 c9              	RET			;RETURN DE=OFFSET AND HL=POINTER
   377                          ;
   378                          ;
   379                          ;
   380                          ;	... DISK WRITE COMMAND PROCESSOR ...
   381                          ;
   382                          DISKPUT:
   383   000905 af              	XOR	A
   384   000906 1802            	JR	DWRT0
   385                          ;
   386                          DISKWRITE:
   387   000908 3e00            	LD	A,0
   388   00090a 32b5ff          DWRT0:	LD	(VFLAG),A
   389   00090d cd280c          	CALL	DRVINDEX	;INDEX TO GET DRIVE PARAMETER POINTER
   390   000910 d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   391                          
   392   000911 cd4a0c          	CALL	SENDACK
   393   000914 cdb906          	CALL	RECVBUFF	;ELSE GO QUICK TO READ DATA FRAME
   394   000917 c0              	RET	NZ		;EXIT IF BAD CHECKSUM
   395                          
   396   000918 22a9ff          	LD	(LOGSIZ),HL	;SAVE DATA BLOCK LENGTH
   397   00091b 118000          	LD	DE,128
   398   00091e b7              	OR	A
   399   00091f ed52            	SBC	HL,DE		;TEST FOR 128 BYTE FRAME
   400   000921 2804            	JR	Z,DWRT1
   401   000923 b7              	OR	A
   402   000924 ed52            	SBC	HL,DE		;TEST FOR 256 BYTE FRAME
   403   000926 c0              	RET	NZ
   404                          
   405   000927 cd4a0c          DWRT1:	CALL	SENDACK		;SEND 'ACK' IF BLOCKSIZE IS 128 OR 256
   406   00092a cd100a          	CALL	SECTRAN		;SET DISK PARAMETERS FOR WRITE
   407   00092d 204e            	JR	NZ,DWRT4	;JUMP IF ERROR FROM 'SECTRAN'
   408                          
   409   00092f 2100c1          	LD	HL,IOBUFF
   410   000932 229cff          	LD	(DKIOCB+DSKPTR),HL
   411   000935 3aa9ff          	LD	A,(LOGSIZ)
   412   000938 47              	LD	B,A		;PREPARE TO COMPLIMENT DISK DATA BLOCK
   413   000939 7e              DWRT2:	LD	A,(HL)
   414   00093a 2f              	CPL
   415   00093b 77              	LD	(HL),A		;COMPLIMENT DISK DATA BLOCK
   416   00093c 23              	INC	HL
   417   00093d 10fa            	DJNZ	DWRT2		;REPEAT TO END OF BLOCK
   418   00093f 3e02            	LD	A,PUTSEC
   419   000941 3298ff          	LD	(DKIOCB+DSKOP),A
   420   000944 dd2198ff        	LD	IX,DKIOCB
   421   000948 cd0f00          	CALL	DISKV		;CALL PHYSICAL DISK DRIVER
   422   00094b 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   423   00094e b7              	OR	A
   424   00094f 202c            	JR	NZ,DWRT4	;BOMB OUT NOW IF DISK ERROR
   425                          
   426   000951 3ab5ff          	LD	A,(VFLAG)
   427   000954 b7              	OR	A
   428                          ;	JR	Z,DWRT4		;EXIT OK IF NOT WRITE WITH VERIFY
   429   000955 1826            	JR	DWRT4		;EXIT OK IF NOT WRITE WITH VERIFY
   430                          
   431   000957 3e01            	LD	A,GETSEC
   432   000959 3298ff          	LD	(DKIOCB+DSKOP),A
   433   00095c 2100c3          	LD	HL,IOBUFF+LEN
   434   00095f 229cff          	LD	(DKIOCB+DSKPTR),HL
   435   000962 cd0f00          	CALL	DISKV		;ELSE READ SECTOR BACK FOR VERIFY
   436   000965 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   437   000968 b7              	OR	A
   438   000969 2012            	JR	NZ,DWRT4	;BOMB AGAIN IF READ ERROR
   439                          
   440   00096b 2100c1          	LD	HL,IOBUFF
   441   00096e 1100c3          	LD	DE,IOBUFF+LEN
   442   000971 3a9eff          	LD	A,(DKIOCB+DSKAUX)
   443   000974 47              	LD	B,A		;PREPARE TO COMPARE 128 OR 256 BYTES
   444   000975 1a              DWRT3:	LD	A,(DE)
   445   000976 ae              	XOR	(HL)
   446   000977 200b            	JR	NZ,DWRT5
   447   000979 23              	INC	HL
   448   00097a 13              	INC	DE
   449   00097b 10f8            	djnz	DWRT3		;fall through last time with acc=0
   450                          
   451   00097d cde309          DWRT4:	CALL	SETSTAT		;DO STATUS SETTING STUFF
   452   000980 7b              	LD	A,E
   453   000981 c3560c          	JP	SENDCHAR	;SEND 'COMPLETE' OR 'ERROR' TO ATARI
   454                          ;	ret
   455                          ;
   456   000984 af              DWRT5:	xor	a
   457   000985 cd060a          	call	SSTS4		;set hardware status=0 but set bad r/w
   458   000988 7b              	ld	a,e
   459   000989 c3560c          	jp	SENDCHAR
   460                          ;	ret
   461                          ;
   462                          ;
   463                          ;
   464                          ;	... DISK READ COMMAND PROCESSOR ...
   465                          ;
   466                          DISKREAD:
   467   00098c cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   468   00098f d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   469                          
   470   000990 cd4a0c          	CALL	SENDACK
   471   000993 cd100a          	CALL	SECTRAN		;SET PARAMETERS FOR DISK OPERATION
   472   000996 f5              	PUSH	AF		;SAVE ERROR STATUS FROM 'SECTRAN'
   473   000997 280f            	JR	Z,DRD2		;JUMP IF PARAMS SET OK
   474                          
   475   000999 fd5606          	LD	D,(IY+SECLEN)
   476   00099c fd5e07          	LD	E,(IY+SECLEN+1)	;LOAD DE WITH SECTOR LEN FROM 'DMATRIX'
   477   00099f 7a              	LD	A,D
   478   0009a0 b3              	OR	E
   479   0009a1 2009            	JR	NZ,DRD2A	;JUMP IF LENGTH <> 0
   480                          
   481   0009a3 118000          	LD	DE,128		;ELSE REVERT TO 128 BYTES
   482   0009a6 1804            	JR	DRD2A
   483                          ;
   484   0009a8 ed5b9eff        DRD2:	LD	DE,(DKIOCB+DSKAUX) ;LOAD DE WITH PHYSICAL SECTOR LENGTH
   485   0009ac 2afdc2          DRD2A:	LD	HL,(CFRAME+2)
   486   0009af 010400          	LD	BC,4
   487   0009b2 b7              	OR	A
   488   0009b3 ed42            	SBC	HL,BC		;TEST IF ACCESSING SECTOR# 1,2 OR 3
   489   0009b5 3003            	JR	NC,DRD3		;JUMP IF NOT ACCESSING A BOOT SECTOR
   490   0009b7 118000          	LD	DE,128
   491   0009ba ed53a9ff        DRD3:	LD	(LOGSIZ),DE
   492   0009be 2100c3          	LD	HL,IOBUFF+LEN
   493   0009c1 b7              	OR	A
   494   0009c2 ed52            	SBC	HL,DE		;COMPUTE STARTING PLACE IN BUFFER
   495   0009c4 f1              	POP	AF
   496   0009c5 2014            	JR	NZ,DRD4		;JUMP IF ERROR FROM 'SECTRAN' ABOVE
   497                          
   498   0009c7 229cff          	LD	(DKIOCB+DSKPTR),HL
   499   0009ca 3e01            	LD	A,GETSEC
   500   0009cc 3298ff          	LD	(DKIOCB+DSKOP),A
   501   0009cf dd2198ff        	LD	IX,DKIOCB
   502   0009d3 e5              	PUSH	HL
   503   0009d4 cd0f00          	CALL	DISKV		;CALL DISK I/O HANDLER
   504   0009d7 e1              	POP	HL
   505   0009d8 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   506                          
   507   0009db cde309          DRD4:	CALL	SETSTAT		;TEST AND STORE STATUS STUFF
   508   0009de 16ff            	LD	D,255		;SET MASK TO INVERT DISK DATA
   509   0009e0 c36c06          	JP	SENDBUFF	;SEND RESOPNSE TO ATARI
   510                          ;	ret
   511                          ;
   512                          ;
   513                          ;
   514                          ;	ROUTINE TO CHECK STATUS AFTER READ/WRITE
   515                          ;
   516                          SETSTAT:
   517   0009e3 b7              	OR	A
   518   0009e4 200a            	JR	NZ,SSTS1	;JUMP IF SOME DISK ERROR INDICATED
   519                          
   520   0009e6 fd770d          	LD	(IY+HDWSTS),A	;ELSE STORE ZEROS IN HARDWARE STATUS
   521   0009e9 1e43            	LD	E,'C'		;LOAD E WITH 'COMPLETE' CHARACTER
   522   0009eb fdcb0c96        	RES	BADRW,(IY+CMDSTS)
   523   0009ef c9              	RET
   524                          ;
   525                          ;	ACC HOLDS NON-ZERO VALUE INDICATING A DISK ERROR
   526                          ;
   527   0009f0 cb77            SSTS1:	BIT	6,A		;BIT HOLDS WPROT STATUS AFTER WRITE
   528   0009f2 2802            	JR	Z,SSTS2
   529                          
   530   0009f4 e69f            	AND	10011111B
   531                          
   532   0009f6 cb6f            SSTS2:	BIT	5,A		;HOLDS DD MARK STATUS AFTER READ
   533   0009f8 2802            	JR	Z,SSTS3
   534                          
   535   0009fa f660            	OR	01100000B	;CREATE 1771 DD ADDRESS MARK STATUS
   536                          
   537   0009fc 4f              SSTS3:	LD	C,A
   538   0009fd e681            	AND	10000001B	;TEST FOR 'READY' OR 'BUSY' BITS SET
   539   0009ff 79              	LD	A,C
   540   000a00 2804            	JR	Z,SSTS4		;JUMP IF NOT READY/BUSY LOCK UP
   541                          
   542   000a02 e67e            	AND	01111110B	;ELSE CLEAR BOTH BITS AND REPLACE
   543   000a04 f610            	OR	00010000B	; WITH 'RNF' ERROR BIT INSTEAD
   544                          
   545   000a06 fd770d          SSTS4:	LD	(IY+HDWSTS),A	;STORE HARDWARE STATUS FOR ATARI
   546   000a09 1e45            	LD	E,'E'		;LOAD E WITH 'ERROR' CHARACTER
   547   000a0b fdcb0cd6        	SET	BADRW,(IY+CMDSTS)
   548   000a0f c9              	RET
   549                          ;
   550                          ;
   551                          ;
   552                          ;
   553                          ;
   554                          ;
   555                          SECTRAN:
   556                          ;	BIT	CONFIG,(IY+FLAGS)
   557                          ;	JP	NZ,STRAN3	;SKIP IF DRIVE HAS BEEN CONFIGURED
   558                          
   559   000a10 3a2eff          	LD	A,(DRVOFF)
   560   000a13 b7              	OR	A
   561   000a14 2811            	JR	Z,STRAN2	;JUMP IF DRIVES HAVE NOT BEEN STOPPED
   562                          
   563   000a16 af              	XOR	A
   564   000a17 322eff          	LD	(DRVOFF),A	;CLEAR DRIVES-STOPPED FLAGS
   565   000a1a 2164ff          	LD	HL,DMATRIX+FLAGS
   566   000a1d 111000          	LD	DE,16
   567   000a20 0604            	LD	B,4
   568   000a22 cb86            STRAN1:	RES	FIRST,(HL)	;ZIP THRU ARRAY RESETING 'FIRST' FLAGS
   569   000a24 19              	ADD	HL,DE		; TO FORCE MEDIA TO BE EXAMINED ANEW
   570   000a25 10fb            	DJNZ	STRAN1
   571                          
   572   000a27 fdcb0e46        STRAN2:	BIT	FIRST,(IY+FLAGS)
   573   000a2b 206d            	JR	NZ,STRAN3	;SKIP MEDIA CHECK IF DRIVE IS ACTIVE
   574                          
   575   000a2d 3e03            	LD	A,GETID
   576   000a2f 3298ff          	LD	(DKIOCB+DSKOP),A
   577   000a32 3a99ff          	LD	A,(DKIOCB+DSKDRV)
   578   000a35 2120ff          	LD	HL,DRVTAB
   579   000a38 85              	ADD	A,L
   580   000a39 6f              	LD	L,A		;POINT TO HEAD POSITION FOR DRIVE#
   581   000a3a 7e              	LD	A,(HL)
   582   000a3b fe50            	CP	80
   583   000a3d 3801            	JR	C,STR20		;JUMP IF TRACK# IN VALID RANGE
   584   000a3f af              	XOR	A		;ELSE GOTO TRACK ZERO
   585   000a40 329aff          STR20:	LD	(DKIOCB+DSKTRK),A
   586   000a43 21abff          	LD	HL,IDBUF
   587   000a46 229cff          	LD	(DKIOCB+DSKPTR),HL
   588   000a49 dd2198ff        	LD	IX,DKIOCB
   589   000a4d cd0f00          	CALL	DISKV		;READ AN ID MARK FROM CURRENT TRACK
   590   000a50 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   591   000a53 b7              	OR	A
   592   000a54 c0              	RET	NZ		;EXIT IF DISK ERROR ON READ-ID
   593                          ;
   594                          ;	ARRIVE HERE TO SET DISK PARAMS IMPLICITLY
   595                          ;
   596   000a55 3aaeff          	LD	A,(IDBUF+3)	;GET SECTOR LENGTH BYTE FROM ID
   597   000a58 cdcd0a          	call	getsize		;compute sector length in bytes
   598   000a5b fd7006          	ld	(iy+SECLEN),b
   599   000a5e fd7107          	ld	(iy+SECLEN+1),c	;store result in 'seclen' param slot
   600   000a61 3a9eff          	LD	A,(DKIOCB+DSKAUX)
   601   000a64 07              	RLCA
   602   000a65 07              	RLCA
   603   000a66 07              	RLCA
   604   000a67 2f              	CPL
   605   000a68 e606            	AND	00000110B	;MAKE PERCOM DENSITY/SIZE BITS
   606   000a6a fd7705          	LD	(IY+MEDIA),A
   607   000a6d cb4f            	BIT	SIZE,A
   608   000a6f 2807            	JR	Z,STR25		;JUMP IF FIVE INCH DISK SELECTED
   609                          
   610   000a71 3e4d            	LD	A,77
   611   000a73 211a00          	LD	HL,26
   612   000a76 1805            	JR	STR26
   613                          ;
   614   000a78 3e28            STR25:	LD	A,40
   615   000a7a 211200          	LD	HL,18
   616   000a7d fdbe00          STR26:	cp	(iy+NTRKS)
   617   000a80 3803            	jr	c,STR27		;skip if ntrks has been set > default
   618   000a82 fd7700          	ld	(iy+NTRKS),a	;else set param to default value
   619   000a85 fd7402          STR27:	LD	(IY+NSECS),H
   620   000a88 fd7503          	LD	(IY+NSECS+1),L	;STORE SECTORS PER TRACK PARAM
   621                          
   622   000a8b fdcb0ec6        	SET	FIRST,(IY+FLAGS)
   623   000a8f 2a96ff          	LD	HL,(OLDPTR)
   624   000a92 7c              	LD	A,H
   625   000a93 b5              	OR	L
   626   000a94 2004            	JR	NZ,STRAN3	;JUMP IF NOT THE FIRST-EVER DISKOP
   627                          
   628   000a96 fd2296ff        	LD	(OLDPTR),IY	;ELSE SET POINTER TO THIS GUYS STUFF
   629                          ;
   630                          ;	ARRIVE HERE TO COMPUTE TRACK/SECTOR AND SET DISK BYTECOUNT
   631                          ;
   632   000a9a 2afdc2          STRAN3:	LD	HL,(CFRAME+2)
   633   000a9d 2b              	DEC	HL		;REMOVE +1 BIAS FROM SECTOR NUMBER
   634   000a9e 1600            	LD	D,0
   635   000aa0 fd5e03          	LD	E,(IY+NSECS+1)
   636   000aa3 3eff            	LD	A,-1
   637   000aa5 3c              STRAN4:	INC	A
   638   000aa6 b7              	OR	A
   639   000aa7 ed52            	SBC	HL,DE
   640   000aa9 30fa            	JR	NC,STRAN4	;DIVIDE ABSOLUTE SECTOR NUMBER BY SPT
   641   000aab 19              	ADD	HL,DE
   642   000aac 23              	INC	HL		;RESTORE +1 BIAS TO SECTOR NUMBER
   643   000aad 4d              	LD	C,L
   644   000aae 219bff          	LD	HL,DKIOCB+DSKSEC
   645   000ab1 71              	LD	(HL),C		;STORE PHYSICAL SECTOR#
   646                          
   647   000ab2 fdbe00          	CP	(IY+NTRKS)	;COMPARE RESULT FROM TRACK# COMPUTATION
   648   000ab5 3808            	JR	C,STRAN5	; TO 'NTRKS' PARAM AND JUMP IF LESS
   649                          
   650   000ab7 fd9600          	SUB	(IY+NTRKS)	;ELSE SUBTRACT EXTRA AND SELECT SIDE# 1
   651   000aba 2199ff          	LD	HL,DKIOCB+DSKDRV
   652   000abd cbfe            	SET	7,(HL)
   653                          
   654   000abf 329aff          STRAN5:	LD	(DKIOCB+DSKTRK),A  ;STORE PHYSICAL TRACK#
   655   000ac2 fd6606          	LD	H,(IY+SECLEN)
   656   000ac5 fd6e07          	LD	L,(IY+SECLEN+1)
   657   000ac8 229eff          	LD	(DKIOCB+DSKAUX),HL  ;STORE PHYSICAL SECTOR SIZE FOR I/O
   658   000acb af              	XOR	A
   659   000acc c9              	RET
   660                          ;
   661                          ;
   662                          ;
   663                          getsize:
   664   000acd 018000          	ld	bc,128
   665   000ad0 e603            	and	00000011b
   666   000ad2 c8              	ret	z		;sector length code=0 means 128 bytes
   667                          
   668   000ad3 cb21            getsz2:	sla	c
   669   000ad5 cb10            	rl	b		;else multiply 128 by 2,4 or 8
   670   000ad7 3d              	dec	a
   671   000ad8 20f9            	jr	nz,getsz2
   672   000ada c9              	ret
   673                          ;
   674                          ;
   675                          ;
   676                          ;
   677                          ;
   678                          ;	... DISK STATUS COMMAND PROCESSOR ...
   679                          ;
   680                          DISKSTAT:
   681   000adb cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   682   000ade d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   683                          
   684   000adf cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
   685   000ae2 cdd30b          	CALL	HASPARMS	;CHECK IF HAS NEVER BEEN ACCESSED
   686   000ae5 3ac9ff          	LD	A,(DRVTMR)
   687   000ae8 f5              	PUSH	AF		;SAVE DRIVE TIMER VALUE RIGHT NOW
   688   000ae9 3e00            	LD	A,TSTRDY
   689   000aeb 3298ff          	LD	(DKIOCB+DSKOP),A
   690   000aee dd2198ff        	LD	IX,DKIOCB
   691   000af2 cd0f00          	CALL	DISKV		;CALL DISK HANDLER TO GET TYPE 1 STATUS
   692                          
   693   000af5 fd4e0c          	LD	C,(IY+CMDSTS)	;PREPARE TO DERRIVE REST OF 'CMDSTS'
   694   000af8 fd360c00        	LD	(IY+CMDSTS),0	; AND RESET OLD STATUS BITS
   695   000afc f1              	POP	AF
   696   000afd b7              	OR	A
   697   000afe 2804            	JR	Z,DSTAT1	;JUMP IF DRIVES WERE PREVIOUSLY STOPPED
   698                          
   699   000b00 cbe1            	SET	ACTIVE,C
   700   000b02 1802            	JR	DSTAT2
   701                          ;
   702   000b04 cba1            DSTAT1:	RES	ACTIVE,C
   703   000b06 fdcb0556        DSTAT2:	BIT	DENSTY,(IY+MEDIA)
   704   000b0a 2804            	JR	Z,DSTAT3	;JUMP IF DRIVE SET FOR SINGLE DENSITY
   705                          
   706   000b0c cbe9            	SET	SEC256,C
   707   000b0e 1802            	JR	DSTAT4
   708                          ;
   709   000b10 cba9            DSTAT3:	RES	SEC256,C
   710   000b12 ddcb0876        DSTAT4:	BIT	6,(IX+DSKSTS)
   711   000b16 2804            	JR	Z,DSTAT5	;JUMP IF DRIVE IS NOT WRITE PROTECTED
   712                          
   713   000b18 cbd9            	SET	WRPROT,C
   714   000b1a 1802            	JR	DSTAT6
   715                          ;
   716   000b1c cb99            DSTAT5:	RES	WRPROT,C
   717   000b1e 21fcc2          DSTAT6:	LD	HL,IOBUFF+LEN-4
   718   000b21 e5              	PUSH	HL
   719   000b22 71              	LD	(HL),C		;STORE DRIVE COMMAND STATUS IN BUFFER
   720   000b23 23              	INC	HL
   721   000b24 fd7e0d          	LD	A,(IY+HDWSTS)
   722   000b27 2f              	CPL
   723   000b28 77              	LD	(HL),A		;STORE HARDWARE POOP NEXT
   724   000b29 23              	INC	HL
   725   000b2a 36e0            	LD	(HL),224	;STORE MAX TIMEOUT AFTER THAT
   726   000b2c 23              	INC	HL
   727   000b2d 3a2dff          	LD	A,(TRACK)
   728   000b30 77              	LD	(HL),A		;STORE TRACK# AS FOURTH BYTE
   729   000b31 e1              	POP	HL
   730   000b32 114300          	LD	DE,'C'		;SEND DISK STATUS W/O COMPLIMENT
   731   000b35 c36c06          	JP	SENDBUFF
   732                          ;	ret
   733                          ;
   734                          ;
   735                          ;
   736                          ;	... DISK FORMAT COMMAND PROCESSOR ...
   737                          ;
   738                          DISKINIT:
   739   000b38 cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   740   000b3b d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   741                          
   742   000b3c 2a4fff          	LD	HL,(PCOUNT)
   743   000b3f 7c              	LD	A,H
   744   000b40 b5              	OR	L
   745   000b41 c0              	RET	NZ		;REFUSE TO FORMAT IF SPOOLER ACTIVE
   746                          
   747   000b42 cdd30b          	CALL	HASPARMS
   748   000b45 c8              	RET	Z		;REFUSE TO FORMAT IF PARAMS NOT SET
   749                          
   750   000b46 cd4a0c          	CALL	SENDACK
   751   000b49 3e00            	LD	A,TSTRDY
   752   000b4b 3298ff          	LD	(DKIOCB+DSKOP),A
   753   000b4e dd2198ff        	LD	IX,DKIOCB
   754   000b52 cd0f00          	CALL	DISKV		;CALL DRIVER TO TEST READY/WRITE PROT
   755   000b55 cdcb03          	CALL	STOPTMR		;THEN KILL CTC3 TO STOP DISK TIMER
   756   000b58 3a2fff          	LD	A,(OUTCPY)
   757   000b5b fdcb0556        	BIT	DENSTY,(IY+MEDIA)
   758   000b5f 2807            	JR	Z,DINIT2
   759                          
   760   000b61 cbbf            	RES	7,A		;RESET DENSITY BIT OF CONTROL BYTE
   761   000b63 2100c2          	LD	HL,IOBUFF+LEN-256
   762   000b66 1805            	JR	DINIT3
   763                          ;
   764   000b68 cbff            DINIT2:	SET	7,A		;SET SD/DD BIT IF SINGLE DENSITY
   765   000b6a 2180c2          	LD	HL,IOBUFF+LEN-128
   766   000b6d 322fff          DINIT3:	LD	(OUTCPY),A
   767   000b70 d330            	OUT	(LATCH),A
   768   000b72 e5              	PUSH	HL
   769   000b73 22c1ff          	LD	(SEQPTR),HL	;STORE POINTER FOR BAD SECTOR LIST
   770   000b76 210100          	LD	HL,1
   771   000b79 22bfff          	LD	(SEQNUM),HL	;RESET BAD SECTOR COUNTER
   772   000b7c 2a49ff          	LD	HL,(FMTPTR)
   773   000b7f 11b6ff          	LD	DE,FMTSTUFF
   774   000b82 010700          	LD	BC,FMTLEN
   775   000b85 07              	RLCA
   776   000b86 07              	RLCA
   777   000b87 e603            	AND	00000011B
   778   000b89 2804            	JR	Z,SFMT3
   779   000b8b 09              SFMT2:	ADD	HL,BC
   780   000b8c 3d              	DEC	A
   781   000b8d 20fc            	JR	NZ,SFMT2	;INDEX TO PROPER PARAMS FOR DISK TYPE
   782   000b8f edb0            SFMT3:	LDIR			;THEN COPY PARAMS TO 'FMTSTUFF'
   783   000b91 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   784   000b94 e6c0            	AND	11000000B
   785   000b96 2013            	JR	NZ,DINIT6	;ERROR IF NOT READY OR WRITE PROTECTED
   786                          
   787   000b98 fd7e04          	ld	a,(iy+NSIDES)	;set for SS/DS init
   788   000b9b 32bdff          	ld	(sides),a
   789   000b9e fd7e00          	ld	a,(iy+NTRKS)	;set for number of tracks
   790   000ba1 32beff          	ld	(tracks),a
   791   000ba4 fde5            	PUSH	IY
   792   000ba6 cdbe0c          	CALL	FORMAT		;CALL FORMAT SUBROUTINE
   793   000ba9 fde1            	POP	IY
   794                          
   795   000bab e1              DINIT6:	POP	HL
   796   000bac cde309          	CALL	SETSTAT		;UPDATE STATUS AS SPECIFIED BY ACC
   797   000baf 1600            	LD	D,0
   798   000bb1 cd6c06          	CALL	SENDBUFF	;SEND BAD SECTOR DATA FRAME
   799   000bb4 c33c00          	JP	ACTIVON		;THEN RESTART THE DISK TIMER
   800                          ;	ret
   801                          ;
   802                          ;
   803                          ;
   804                          ;
   805                          ;
   806                          FMTS:
   807   000bb7 9f0e            	DEFW	DD8N26		;DOUBLE DENSITY 8 INCH
   808   000bb9 e20e            	DEFW	SKEW17
   809   000bbb 1a              	DEFB	26
   810   000bbc b028            	DEFW	10416
   811                          
   812   000bbe 350e            	DEFW	DD5N18		;DOUBLE DENSITY 5 INCH
   813   000bc0 680e            	DEFW	SKEWDD
   814   000bc2 12              	DEFB	18
   815   000bc3 6a18            	DEFW	6250
   816                          
   817   000bc5 7a0e            	DEFW	SD8N26		;SINGLE DENSITY 8 INCH
   818   000bc7 c80e            	DEFW	SKEW13
   819   000bc9 1a              	DEFB	26
   820   000bca 5814            	DEFW	5208
   821                          
   822   000bcc 160e            	DEFW	SD5N18		;SINGLE DENSITY 5 INCH
   823   000bce 560e            	DEFW	SKEWSD
   824   000bd0 12              	DEFB	18
   825   000bd1 350c            	DEFW	3125
   826                          ;
   827                          ;
   828                          ;
   829                          ;
   830                          HASPARMS:
   831   000bd3 fd7e00          	LD	A,(IY+NTRKS)
   832   000bd6 b7              	OR	A
   833   000bd7 c0              	RET	NZ		;EXIT IF PARAMS HAVE BEEN SET
   834                          
   835   000bd8 2a96ff          	LD	HL,(OLDPTR)
   836   000bdb 7c              	LD	A,H		;IF POINTER IS ZERO THEN NO DRIVE
   837   000bdc b5              	OR	L		; PARAMS HAVE EVER BEEN SET
   838   000bdd c8              	RET	Z
   839                          
   840   000bde fde5            	PUSH	IY
   841   000be0 d1              	POP	DE
   842   000be1 010c00          	LD	BC,12
   843   000be4 edb0            	LDIR			;COPY BOOT DISK'S PARAMS TO THIS GUY
   844   000be6 c9              	RET
   845                          ;
   846                          ;
   847                          ;
   848                          ;
   849                          ;	... PERCOM 'N' COMMAND PROCESSOR ...
   850                          ;
   851                          GETPARAMS:
   852   000be7 cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   853   000bea d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   854                          
   855   000beb cdd30b          	CALL	HASPARMS
   856   000bee c8              	RET	Z		;EXIT IF DISK PARAMS NOT KNOWN
   857                          
   858   000bef cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
   859                          ;	SET	CONFIG,(IY+FLAGS)
   860   000bf2 fde5            	PUSH	IY
   861   000bf4 e1              	POP	HL
   862   000bf5 11f4c2          	LD	DE,IOBUFF+LEN-12
   863   000bf8 d5              	PUSH	DE
   864   000bf9 010c00          	LD	BC,12
   865   000bfc edb0            	LDIR			;COPY PARAMS TO OUTPUT BUFFER
   866   000bfe e1              	POP	HL
   867   000bff 114300          	LD	DE,'C'
   868   000c02 c36c06          	JP	SENDBUFF	;SEND 'C' AND PARAMS DATA FRAME
   869                          ;	ret
   870                          ;
   871                          ;
   872                          ;
   873                          ;	... PERCOM 'O' COMMAND PROCESSOR ...
   874                          ;
   875                          PUTPARAMS:
   876   000c05 cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   877   000c08 d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   878                          
   879   000c09 cd4a0c          	CALL	SENDACK
   880   000c0c cdb906          	CALL	RECVBUFF	;ATTEMPT TO READ DATA FRAME FROM ATARI
   881   000c0f c0              	RET	NZ
   882                          
   883   000c10 110c00          	LD	DE,12
   884   000c13 b7              	OR	A
   885   000c14 ed52            	SBC	HL,DE
   886   000c16 c0              	RET	NZ		;ERROR IF DATA FRAME NOT 12 BYTES
   887                          
   888   000c17 cd4a0c          	CALL	SENDACK		;ELSE SEND 'ACK' FOR DATA FRAME
   889                          ;	SET	CONFIG,(IY+FLAGS)  ;INDICATE DRIVE IS NOW CONFIGURED
   890   000c1a 2100c1          	LD	HL,IOBUFF
   891   000c1d fde5            	PUSH	IY
   892   000c1f d1              	POP	DE		;POINT DE TO PARAMETERS FOR DRIVE(N)
   893   000c20 010c00          	LD	BC,12
   894   000c23 edb0            	LDIR			;COPY NEW STUFF IN THE PLACE
   895   000c25 c3540c          	JP	SENDCOMP	;SEND 'COMPLETE' BACK TO ATARI
   896                          ;	ret
   897                          ;
   898                          ;
   899                          ;
   900                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
   901                          ;
   902                          ;NTRKS	EQU	0		;NUMBER OF TRACKS
   903                          ;STEPRT	EQU	1		;STEP RATE
   904                          ;NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
   905                          ;NSIDES	EQU	4		;NUMBER OF SIDES
   906                          ;MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
   907                          ;SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
   908                          ;DSKBITS	EQU	8		;MISC NAUGHTY BITS
   909                          ;SPARE0	EQU	9
   910                          ;SPARE1	EQU	10
   911                          ;SPARE2	EQU	11
   912                          ;
   913                          ;CMDSTS	EQU	12		;COMMAND STATUS
   914                          ;HDWSTS	EQU	13		;HARDWARE STATUS
   915                          ;
   916                          ;FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
   917                          ;SPARE3	EQU	15
   918                          ;;
   919                          ;;
   920                          ;;	EQUATES FOR BITS IN 'MEDIA' BYTE
   921                          ;;
   922                          ;SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
   923                          ;DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
   924                          ;;
   925                          ;;
   926                          ;;	EQUATES FOR BITS IN 'DSKBITS' BYTE
   927                          ;;
   928                          ;PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
   929                          ;;
   930                          ;;
   931                          ;;	EQUATES FOR BITS IN 'CMDSTS' BYTE
   932                          ;;
   933                          ;BADCMD	EQU	0		;BAD COMMAND FRAME BIT
   934                          ;BADDAT	EQU	1		;BAD DATA FRAME BIT
   935                          ;BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
   936                          ;WRPROT	EQU	3		;WRITE PROTECTED BIT
   937                          ;ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
   938                          ;SEC256	EQU	5		;LONG/SHORT SECTOR BIT
   939                          ;;
   940                          ;;
   941                          ;;	EQUATES FOR BITS IN 'FLAGS' BYTE
   942                          ;;
   943                          ;FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
   944                          ;CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
   945                          ;
   946                          ;
   947                          ;
   948                          ;
   949                          ;
   950                          DRVINDEX:
   951   000c28 3afbc2          	LD	A,(CFRAME)	;GET DRIVE# FROM COMAND FRAME
   952   000c2b d631            	SUB	'1'
   953   000c2d fe04            	CP	4
   954   000c2f 3f              	CCF
   955   000c30 d8              	RET	C		;EXIT IF NOT DRIVE 1,2,3 OR 4
   956                          
   957   000c31 2600            	LD	H,0
   958   000c33 6f              	LD	L,A
   959   000c34 29              	ADD	HL,HL
   960   000c35 29              	ADD	HL,HL
   961   000c36 29              	ADD	HL,HL
   962   000c37 29              	ADD	HL,HL		;MULTIPLY DRIVE INDEX BY 16
   963   000c38 0156ff          	LD	BC,DMATRIX
   964   000c3b 09              	ADD	HL,BC		;INDEX TO DRIVE'S PARAMETERS
   965   000c3c e5              	PUSH	HL
   966   000c3d fde1            	POP	IY		;GET POINTER INTO IY FOR RETURN
   967   000c3f fdcb0876        	BIT	PRESENT,(IY+DSKBITS)
   968   000c43 37              	SCF
   969   000c44 c8              	RET	Z		;EXIT IT DRIVE NOT PRESENT
   970                          
   971   000c45 3299ff          	LD	(DKIOCB+DSKDRV),A
   972   000c48 af              	XOR	A
   973   000c49 c9              	RET
   974                          ;
   975                          ;
   976                          ;
   977                          ;
   978                          SENDACK:
   979   000c4a db70            	IN	A,(ATARI)
   980   000c4c cb4f            	BIT	1,A
   981   000c4e 28fa            	JR	Z,SENDACK
   982                          
   983   000c50 3e41            	LD	A,'A'
   984   000c52 1802            	JR	SENDCHAR
   985                          ;
   986                          SENDCOMP:
   987   000c54 3e43            	LD	A,'C'
   988                          SENDCHAR:
   989   000c56 2101c3          	LD	HL,IOBUFF+LEN+1
   990   000c59 77              	LD	(HL),A
   991   000c5a 1600            	LD	D,0		;SET FOR TRUE DATA
   992   000c5c c38406          	JP	XMITBUF		;SEND 1 BYTE BLOCK TO ATARI
   993                          ;	ret
   994                          ;
   995                          ;
   996                          ;
   997                          ;
   998                          ;	... Z80 MEMORY READ COMMAND PROCESSOR ...
   999                          ;
  1000                          Z80READ:
  1001   000c5f cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND
  1002   000c62 cd9c0c          	CALL	ZLENGTH		;GET ZCMD BYTECOUNT INTO BC
  1003   000c65 2100c3          	LD	HL,IOBUFF+LEN
  1004   000c68 b7              	OR	A
  1005   000c69 ed42            	SBC	HL,BC
  1006   000c6b e5              	PUSH	HL
  1007   000c6c eb              	EX	DE,HL
  1008   000c6d 2ab20c          	LD	HL,(MEMPTR)
  1009   000c70 f3              	DI
  1010   000c71 edb0            	LDIR			;DO BLOCK MOVE INTO BUFFER
  1011   000c73 fb              	EI
  1012   000c74 e1              	POP	HL
  1013   000c75 114300          	LD	DE,'C'		;SEND DATA W/O INVERSION
  1014   000c78 c36c06          	JP	SENDBUFF
  1015                          ;	ret
  1016                          ;
  1017                          ;
  1018                          ;
  1019                          ;	... Z80 MEMORY WRITE COMMAND PROCESSOR ...
  1020                          ;
  1021                          Z80WRITE:
  1022   000c7b cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
  1023   000c7e cdb906          	CALL	RECVBUFF	;ATTEMPT TO READ DATA FRAME FROM ATARI
  1024   000c81 c0              	RET	NZ
  1025                          
  1026   000c82 cd9c0c          	CALL	ZLENGTH		;GET BYTECOUNT FROM CMD FRAME
  1027   000c85 b7              	OR	A
  1028   000c86 ed42            	SBC	HL,BC
  1029   000c88 c0              	RET	NZ		;ERROR IF DATA FRAME LENGTH NOT SAME
  1030                          
  1031   000c89 c5              	PUSH	BC
  1032   000c8a cd4a0c          	CALL	SENDACK		;ELSE SEND 'ACK' FOR DATA FRAME
  1033   000c8d c1              	POP	BC
  1034   000c8e 2100c1          	LD	HL,IOBUFF
  1035   000c91 ed5bb20c        	LD	DE,(MEMPTR)
  1036   000c95 f3              	DI
  1037   000c96 edb0            	LDIR			;DO BLOCK MOVE INTO BUFFER
  1038   000c98 fb              	EI
  1039   000c99 c3540c          	JP	SENDCOMP	;SEND 'COMPLETE' BACK TO ATARI
  1040                          ;	ret
  1041                          ;
  1042                          ;
  1043                          ;
  1044                          ZLENGTH:
  1045   000c9c 3afdc2          	LD	A,(CFRAME+2)	;GET BYTECOUNT FROM COMMAND FRAME
  1046   000c9f 4f              	LD	C,A
  1047   000ca0 0600            	LD	B,0		;LOAD BC WITH BYTECOUNT
  1048   000ca2 b7              	OR	A
  1049   000ca3 c0              	RET	NZ		;EXIT IF BYTECOUNT NOT=0
  1050                          
  1051   000ca4 04              	INC	B		;ELSE MAKE BC=256
  1052   000ca5 c9              	RET
  1053                          ;
  1054                          ;
  1055                          ;	... Z80 SET MEMORY POINTER COMMAND PROCESSOR ...
  1056                          ;
  1057                          Z80SET:
  1058   000ca6 cd4a0c          	CALL	SENDACK
  1059   000ca9 2afdc2          	LD	HL,(CFRAME+2)	;SET MEMORY POINTER FROM COMMAND
  1060   000cac 22b20c          	LD	(MEMPTR),HL
  1061   000caf c3540c          	JP	SENDCOMP
  1062                          ;	ret
  1063                          ;
  1064                          ;
  1065   000cb2 0000            MEMPTR:	DEFW	0		;POINTER FOR MEMORY READ/WRITE
  1066                          ;
  1067                          ;
  1068                          ;	... Z80 GOTO MEMORY LOCATION COMMAND PROCESSOR ...
  1069                          ;
  1070                          Z80GOTO:
  1071   000cb4 cd4a0c          	CALL	SENDACK
  1072   000cb7 cd540c          	CALL	SENDCOMP
  1073   000cba 2afdc2          	LD	HL,(CFRAME+2)
  1074   000cbd e9              	jp	(hl)		;execute routine @hl
  1075                          ;
  1076                          ;
  1077                          ;
  1078                          ;
  1079                          
rolli-f000.asm:
    41                          		INCLUDE	"FORMAT.MAC"
FORMAT.MAC:
     1                          	;PAGE
     2                          ;****************************************************************
     3                          ;*								*
     4                          ;*								*
     5                          ;****************************************************************
     6                          ;
     7                          ;	... DISKETTE INITIALIZATION ROUTINE ...
     8                          ;
     9                          ;	'IOBUFF' UTILIZATION IN FORMAT FUNCTION:
    10                          ;
    11                          ;	|---------------|  IOBUFF
    12                          ;	|		|
    13                          ;	| BAD SEC NUMS	|	STARTS @ LEN-(128+1) OR LEN-(256+1)
    14                          ;	|		|
    15                          ;	|---------------|  +LEN
    16                          ;	|		|
    17                          ;	|  WRTTRK CODE  |	VARIABLE LENGTH HALT/NMI/OUTI ROUTINE
    18                          ;	|		|
    19                          ;	|---------------|  +N
    20                          ;	|		|
    21                          ;	|  TRACK IMAGE  |	POINTED TO BY 'TRKPTR'
    22                          ;	|		|
    23                          ;	|		|  +10200
    24                          ;
    25                          ;
    26                          ;
    27                          FORMAT:
    28   000cbe af              	XOR	A
    29   000cbf d356            	OUT	(INDXSET),A	;SET FLIPFLOP FOR NORMAL INDEX PULSES
    30   000cc1 3c              	INC	A
    31   000cc2 d354            	OUT	(INDXCLR),A
    32                          ;	LD	A,RSTCMD+HLOAD+3
    33   000cc4 3e01            	LD	A,RSTCMD+HLOAD+1;WD1772: 1=12ms
    34   000cc6 cd6c03          	CALL	TYP1CMD		;ISSUE SLOW RESTORE COMMAND
    35   000cc9 ee04            	XOR	00000100B	;FLIP TK0 STATUS BIT
    36   000ccb e684            	AND	10000100B
    37   000ccd c29a0d          	JP	NZ,FORMX	;EXIT IF TRACK ZERO NOT INDICATED
    38                          
    39   000cd0 2100c3          	LD	HL,IOBUFF+LEN	;PREP TO BUILD IN-LINE CODE FOR FORMAT
    40   000cd3 3abcff          	LD	A,(TRKSIZ+1)
    41   000cd6 3c              	INC	A
    42   000cd7 47              	LD	B,A		;LOAD B WITH # OF PAGES/TRACK PLUS ONE
    43   000cd8 3676            FORM2:	LD	(HL),076H	;STORE 'HALT' OPCODE
    44   000cda 23              	INC	HL
    45   000cdb 36ed            	LD	(HL),0EDH	;STORE 'OUTI' OPCODE BYTE #1
    46   000cdd 23              	INC	HL
    47   000cde 36a3            	LD	(HL),0A3H	;STORE 'OUTI' OPCODE BYTE #2
    48   000ce0 23              	INC	HL
    49   000ce1 3620            	LD	(HL),020H	;STORE 'JRNZ' OPCODE BYTE
    50   000ce3 23              	INC	HL
    51   000ce4 36fb            	LD	(HL),-5		;STORE JUMP OFFSET FOR LOOP
    52   000ce6 23              	INC	HL
    53   000ce7 10ef            	DJNZ	FORM2
    54   000ce9 3ec9            	LD	A,0C9H
    55   000ceb 77              	LD	(HL),A		;STORE 'RET' OPCODE AT END
    56   000cec 326600          	LD	(0066H),A	;ALSO PLUNK ONE DOWN AT NMI VECTOR
    57   000cef 23              	INC	HL
    58   000cf0 22c3ff          	LD	(TRKPTR),HL	;SAVE ADDRESS TO BEGIN TRACK IMAGE
    59                          
    60   000cf3 af              	XOR	A
    61   000cf4 322dff          FORM3:	LD	(TRACK),A	;A HOLDS NEXT TRACK NUMBER
    62   000cf7 b7              	OR	A
    63   000cf8 2805            	JR	Z,FORM3A	;SKIP STEP-IN IF ON TRACK ZERO
    64   000cfa 3e43            	LD	A,STEPIN+HLOAD+3
    65   000cfc cd6c03          	CALL	TYP1CMD		;STEP TO NEXT TRACK
    66   000cff dd2ab6ff        FORM3A:	LD	IX,(FRMPTR)	;GET SELECTED FORMAT DATA POINTER
    67   000d03 fd2ab8ff        	LD	IY,(SKWPTR)	;GET SELECTED SKEW TABLE POINTER
    68   000d07 3abdff          	ld	a,(sides)
    69   000d0a 1f              	rra
    70   000d0b 3a2fff          	ld	a,(OUTCPY)
    71   000d0e 3007            	jr	nc,form3b	;jump if not formatting both sides
    72   000d10 ee20            	xor	00100000b
    73   000d12 322fff          	ld	(OUTCPY),a	;else flip side select bit in latch
    74   000d15 d330            	out	(LATCH),a
    75   000d17 cda40d          form3b:	call	BUILD
    76   000d1a 3a2dff          	LD	A,(TRACK)
    77   000d1d d341            	OUT	(TRKREG),A
    78   000d1f 2ac3ff          	LD	HL,(TRKPTR)	;POINT TO START OF TRACK IMAGE
    79   000d22 f3              	DI
    80   000d23 3ef4            	LD	A,11110100B	;write track + 30ms settle delay
    81   000d25 cd8703          	CALL	CMDOUT		;ISSUE WRITE TRACK COMMAND
    82   000d28 3abbff          	LD	A,(TRKSIZ)
    83   000d2b 47              	LD	B,A		;LOAD B WITH TRACK SIZE MOD 256
    84   000d2c 0e43            	LD	C,DATREG
    85   000d2e cd00c3          	CALL	IOBUFF+LEN	;EXECUTE WRITE TRACK FROM BUFFER
    86   000d31 fb              	EI
    87   000d32 db40            FORM4:	IN	A,(STSREG)
    88   000d34 cb47            	BIT	0,A
    89   000d36 20fa            	JR	NZ,FORM4
    90   000d38 ed5bbfff        	LD	DE,(SEQNUM)	;LOAD DE WITH SEQUENCE NUMBER
    91   000d3c 2ac1ff          	LD	HL,(SEQPTR)	; AND HL WITH CACA TABLE POINTER
    92   000d3f 3abaff          	LD	A,(NSECTS)
    93   000d42 47              	LD	B,A
    94   000d43 dd2ab8ff        	LD	IX,(SKWPTR)	;POINT TO SECTOR TABLE
    95   000d47 dd7e00          FORM5:	LD	A,(IX)
    96   000d4a dd23            	INC	IX
    97   000d4c d342            	OUT	(SECREG),A
    98   000d4e 3a2fff          	ld	a,(OUTCPY)
    99   000d51 e620            	and	00100000b
   100   000d53 3e80            	ld	a,RDCMD		;determine if reading side 0 or 1
   101                          ;	jr	z,form51
   102                          ;	set	1,a		;WD1772 no side-no in cmd
   103   000d55 00              	nop
   104   000d56 00              	nop
   105   000d57 00              	nop
   106   000d58 00              	nop
   107   000d59 cd6303          form51:	call	TYP2CMD		;read sector discarding the data
   108   000d5c e698            	AND	10011000B	;TEST FOR READY/RNF/CRC ERROR INDICATION
   109   000d5e 2814            	JR	Z,FORM6		;JUMP IF SECTOR READ OK
   110                          
   111   000d60 e680            	AND	10000000B
   112   000d62 2036            	JR	NZ,FORMX	;QUIT TRYING IF NOT-READY ERROR
   113   000d64 e5              	PUSH	HL
   114   000d65 c5              	PUSH	BC
   115   000d66 01fdc2          	LD	BC,IOBUFF+LEN-3
   116   000d69 b7              	OR	A
   117   000d6a ed42            	SBC	HL,BC		;TEST IF CA-CA SECTOR LIST IS FULL
   118   000d6c c1              	POP	BC
   119   000d6d e1              	POP	HL
   120   000d6e 3004            	JR	NC,FORM6	;SKIP IF NO MORE ROOM
   121   000d70 73              	LD	(HL),E
   122   000d71 23              	INC	HL
   123   000d72 72              	LD	(HL),D
   124   000d73 23              	INC	HL		;STORE BAD SECTOR NUMBER
   125   000d74 13              FORM6:	INC	DE
   126   000d75 10d0            	DJNZ	FORM5
   127   000d77 ed53bfff        	LD	(SEQNUM),DE	;STORE UPDATED ERROR TRACE STUFF
   128   000d7b 22c1ff          	LD	(SEQPTR),HL
   129   000d7e 3a2fff          	ld	a,(OUTCPY)
   130   000d81 e620            	and	00100000b
   131   000d83 c2ff0c          	jp	nz,FORM3A	;go back and do side 0 if on side 1 now
   132   000d86 3a2dff          	LD	A,(TRACK)
   133   000d89 3c              	INC	A
   134   000d8a 21beff          	ld	hl,tracks
   135   000d8d be              	CP	(HL)
   136   000d8e daf40c          	JP	C,FORM3		;FORMAT UP TO LAST TRACK ON DISK
   137                          
   138   000d91 2ac1ff          	LD	HL,(SEQPTR)
   139   000d94 36ff            	LD	(HL),255	;STORE TERMINATOR ON CA-CA BUFFER
   140   000d96 23              	INC	HL
   141   000d97 36ff            	LD	(HL),255
   142   000d99 af              	XOR	A		;INDICATE FORMAT COMPLETED
   143   000d9a f5              FORMX:	PUSH	AF
   144   000d9b 3eff            	LD	A,255
   145   000d9d 322dff          	LD	(TRACK),A
   146   000da0 d341            	OUT	(TRKREG),A	;FORCE DISK HANDLER TO RECALIBRATE
   147   000da2 f1              	POP	AF
   148   000da3 c9              	RET			;RETURN COMPLETION STATUS IN A
   149                          ;
   150                          ;
   151                          ;
   152                          ;
   153                          ;	... SUBROUTINE TO BUILD IMAGE OF FORMATTED TRACK ...
   154                          ;
   155                          ;	PARAMETERS ARE:  IX ....... (POINTER TO FORMAT PARAMETERS)
   156                          ;			 IY ....... (TABLE OF SECTOR NUMBERS)
   157                          ;			 TRKPTR ... (POINTER TO TRACK DATA BUFFER)
   158                          ;			 TRACK .... (TRACK NUMBER)
   159                          ;			 NSECTS ... (NUMBER OF SECTORS)
   160                          ;			 sides .... (copy of 'nsides' param)
   161                          ;
   162                          BUILD:
   163   000da4 3abaff          	LD	A,(NSECTS)
   164   000da7 4f              	LD	C,A
   165   000da8 dde5            	PUSH	IX
   166   000daa e1              	POP	HL
   167   000dab 46              	LD	B,(HL)		;LOAD B WITH # OF FIELDS IN PREAMBLE
   168   000dac 23              	INC	HL
   169   000dad ed5bc3ff        	LD	DE,(TRKPTR)
   170   000db1 cd0b0e          BUILD1:	CALL	INSERT		;INSERT FIELDS OF PREAMBLE
   171   000db4 10fb            	DJNZ	BUILD1
   172                          
   173   000db6 46              	LD	B,(HL)		;LOAD B WITH NUMBER OF ITEMS IN SECTOR
   174   000db7 23              	INC	HL
   175   000db8 e5              	PUSH	HL
   176   000db9 dde1            	POP	IX		;IX POINTS TO START OF SECTOR POOP
   177   000dbb 3a2dff          BUILD3:	LD	A,(TRACK)
   178   000dbe dd7707          	LD	(IX+7),A	;STORE TRACK# FOR TRACK BEING FORMATTED
   179   000dc1 3a2fff          	ld	a,(OUTCPY)
   180   000dc4 e620            	and	00100000b
   181   000dc6 3e00            	ld	a,0
   182   000dc8 2801            	jr	z,bild31	;jump if formatting side 0
   183   000dca 3c              	inc	a
   184   000dcb dd7709          bild31:	ld	(ix+9),a	;store side# in id
   185   000dce fd7e00          	LD	A,(IY)
   186   000dd1 fd23            	INC	IY
   187   000dd3 dd770b          	LD	(IX+11),A	;STORE SECTOR# INTO FORMAT CONSTANTS
   188                          
   189   000dd6 dde5            	PUSH	IX
   190   000dd8 e1              	POP	HL		;POINT HL TO SECTOR POOP
   191   000dd9 c5              	PUSH	BC
   192   000dda cd0b0e          BUILD4:	CALL	INSERT
   193   000ddd 10fb            	DJNZ	BUILD4		;INSERT ITEMS UP TO SECTOR DATA FIELD
   194                          
   195   000ddf dd7e0d          	LD	A,(IX+13)
   196   000de2 cdcd0a          	call	getsize		;compute sector size in bytes
   197   000de5 3eff            BUILD6:	ld	a,0ffh
   198   000de7 12              	ld	(de),a		;fill sector data with ff's
   199   000de8 13              	INC	DE
   200   000de9 0b              	DEC	BC		;REPEAT TILL SECTOR IMAGE IS FILLED
   201   000dea 78              	LD	A,B
   202   000deb b1              	OR	C
   203   000dec 20f7            	JR	NZ,BUILD6
   204                          
   205   000dee 46              	LD	B,(HL)		;GET #FIELDS IN POST-SECTOR STUFF
   206   000def 23              	INC	HL
   207   000df0 cd0b0e          BUILD7:	CALL	INSERT		;INSERT FIELDS UP TO GAP 3
   208   000df3 10fb            	DJNZ	BUILD7
   209   000df5 c1              	POP	BC
   210                          
   211   000df6 0d              	DEC	C
   212   000df7 20c2            	JR	NZ,BUILD3
   213                          
   214   000df9 2ac3ff          	LD	HL,(TRKPTR)
   215   000dfc 01d827          	LD	BC,10200
   216   000dff 09              	ADD	HL,BC		;COMPUTE END OF LONGEST TRACK IMAGE
   217   000e00 ed52            	SBC	HL,DE		;COMPUTE BYTES NECESSARY TO GET THERE
   218   000e02 44              	LD	B,H
   219   000e03 4d              	LD	C,L
   220   000e04 62              	LD	H,D
   221   000e05 6b              	LD	L,E
   222   000e06 13              	INC	DE
   223   000e07 77              	LD	(HL),A
   224   000e08 edb0            	LDIR			;FILL REST OF BUFFER
   225   000e0a c9              	RET
   226                          ;
   227                          ;
   228                          ;
   229   000e0b c5              INSERT:	PUSH	BC
   230   000e0c 46              	LD	B,(HL)
   231   000e0d 23              	INC	HL
   232   000e0e 7e              	LD	A,(HL)
   233   000e0f 23              	INC	HL
   234   000e10 12              INS2:	LD	(DE),A
   235   000e11 13              	INC	DE
   236   000e12 10fc            	DJNZ	INS2
   237   000e14 c1              	POP	BC
   238   000e15 c9              	RET
   239                          ;
   240                          ;
   241                          ;
   242                          ;
   243                          ;	... DISK FORMAT DATA TABLES FOR 5/8 DD/SD STANDARDS ...
   244                          ;
   245                          ;
   246   000e16 01              SD5N18:	DEFB	1
   247   000e17 10ff            	DEFB	16,0FFH
   248                          
   249   000e19 0b              	DEFB	11
   250   000e1a 0300            	DEFB	3,00H		;GAP 3 (DONE AS 2 FIELDS TO MAKE
   251   000e1c 0300            	DEFB	3,00H		; ID FIELD COME OUT IN RIGHT LOCATION)
   252   000e1e 01fe            	DEFB	1,0FEH		;ID ADDRESS MARK
   253   000e20 0100            	DEFB	1,00H		;TRACK
   254   000e22 0100            	DEFB	1,00H		;SIDE
   255   000e24 0100            	DEFB	1,00H		;SECTOR
   256   000e26 0100            	DEFB	1,00H		;LENGTH
   257   000e28 01f7            	DEFB	1,0F7H		;GENERATE CRC
   258   000e2a 0bff            	DEFB	11,0FFH		;GAP2
   259   000e2c 0600            	DEFB	6,00H		;GAP2
   260   000e2e 01fb            	DEFB	1,0FBH		;DATA ADDRESS MARK
   261                          
   262   000e30 02              	DEFB	2
   263   000e31 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   264   000e33 09ff            	DEFB	9,0FFH		;GAP 3
   265                          ;
   266                          ;
   267                          ;
   268                          ;
   269                          ;
   270   000e35 01              DD5N18:	DEFB	1
   271   000e36 204e            	DEFB	32,4EH		;GAP 1
   272                          
   273   000e38 0c              	DEFB	12
   274   000e39 0c00            	DEFB	12,00H		;SECOND PART OF GAP 3
   275   000e3b 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   276   000e3d 01fe            	DEFB	1,0FEH		;GENERATE ID ADDRESS MARK
   277   000e3f 0100            	DEFB	1,0		;TRACK#
   278   000e41 0100            	DEFB	1,00000000B	;SIDE
   279   000e43 0100            	DEFB	1,0		;SECTOR#
   280   000e45 0101            	DEFB	1,00000001B	;LENGTH
   281   000e47 01f7            	DEFB	1,0F7H		;GENERATE CRC
   282   000e49 164e            	DEFB	22,4EH		;FIRST PART OF GAP 2
   283   000e4b 0c00            	DEFB	12,00H		;SECOND PART OF GAP 2
   284   000e4d 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   285   000e4f 01fb            	DEFB	1,0FBH		;GENERATE DATA ADDRESS MARK
   286                          
   287   000e51 02              	DEFB	2
   288   000e52 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   289   000e54 104e            	DEFB	16,4EH		;FIRST PART OF GAP 3
   290                          ;
   291                          ;
   292                          ;
   293   000e56 12100e0c0a080604SKEWSD:	DEFB	18,16,14,12,10,8,6,4,2
                02              
   294   000e5f 110f0d0b09070503	DEFB	17,15,13,11,9,7,5,3,1
                01              
   295                          ;
   296   000e68 01070d          SKEWDD:	DEFB	1,7,13
   297   000e6b 060c12          	DEFB	6,12,18
   298   000e6e 050b11          	DEFB	5,11,17
   299   000e71 040a10          	DEFB	4,10,16
   300   000e74 03090f          	DEFB	3,9,15
   301   000e77 02080e          	DEFB	2,8,14
   302                          ;
   303                          ;
   304                          ;
   305   000e7a 04              SD8N26:	DEFB	4		;PREAMBLE FIELD
   306   000e7b 28ff            	DEFB	40,0FFH		;GAP 4
   307   000e7d 0600            	DEFB	6,00
   308   000e7f 01fc            	DEFB	1,0FCH		;INDEX ADDRESS MARK
   309   000e81 1aff            	DEFB	26,0FFH
   310                          
   311   000e83 0b              	DEFB	11
   312   000e84 0300            	DEFB	3,00H		;GAP 3 (DONE AS 2 FIELDS)
   313   000e86 0300            	DEFB	3,00H		;
   314   000e88 01fe            	DEFB	1,0FEH		;ID ADDRESS MARK
   315   000e8a 0100            	DEFB	1,00H		;TRACK
   316   000e8c 0100            	DEFB	1,00H		;SIDE
   317   000e8e 0100            	DEFB	1,00H		;SECTOR
   318   000e90 0100            	DEFB	1,00H		;LENGTH
   319   000e92 01f7            	DEFB	1,0F7H		;GENERATE CRC
   320   000e94 0bff            	DEFB	11,0FFH		;GAP2
   321   000e96 0600            	DEFB	6,00H		;GAP2
   322   000e98 01fb            	DEFB	1,0FBH		;DATA ADDRESS MARK
   323                          
   324   000e9a 02              	DEFB	2
   325   000e9b 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   326   000e9d 1bff            	DEFB	27,0FFH		;GAP 3
   327                          ;
   328                          ;
   329                          ;
   330   000e9f 05              DD8N26:	DEFB	5
   331   000ea0 504e            	DEFB	80,4EH		;POST-INDEX GAP
   332   000ea2 0c00            	DEFB	12,00H		;INDEX SYNC
   333   000ea4 03f6            	DEFB	3,0F6H		;GENERATE SYNC=C1 HEX
   334   000ea6 01fc            	DEFB	1,0FCH		;GENERATE INDEX ADDRESS MARK
   335   000ea8 324e            	DEFB	50,4EH		;GAP 1
   336                          
   337   000eaa 0c              	DEFB	12
   338   000eab 0c00            	DEFB	12,00H		;SECOND PART OF GAP 3
   339   000ead 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   340   000eaf 01fe            	DEFB	1,0FEH		;GENERATE ID ADDRESS MARK
   341   000eb1 0100            	DEFB	1,0		;TRACK#
   342   000eb3 0100            	DEFB	1,00000000B	;SIDE
   343   000eb5 0100            	DEFB	1,0		;SECTOR#
   344   000eb7 0101            	DEFB	1,00000001B	;LENGTH
   345   000eb9 01f7            	DEFB	1,0F7H		;GENERATE CRC
   346   000ebb 164e            	DEFB	22,4EH		;FIRST PART OF GAP 2
   347   000ebd 0c00            	DEFB	12,00H		;SECOND PART OF GAP 2
   348   000ebf 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   349   000ec1 01fb            	DEFB	1,0FBH		;GENERATE DATA ADDRESS MARK
   350                          
   351   000ec3 02              	DEFB	2
   352   000ec4 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   353   000ec6 354e            	DEFB	53,4EH		;FIRST PART OF GAP 3
   354                          ;
   355                          ;
   356                          ;
   357   000ec8 010e031005120714SKEW13:	DEFB	1,14,3,16,5,18,7,20,9,22,11,24,13,26
                09160b180d1a    
   358   000ed6 020f041106130815	DEFB	2,15,4,17,6,19,8,21,10,23,12,25
                0a170c19        
   359                          ;
   360                          ;
   361   000ee2 0112091a11081910SKEW17:	DEFB	1,18,9,26,17,8,25,16,7,24,15,6,23
                07180f0617      
   362   000eef 0e05160d04150c03	DEFB	14,5,22,13,4,21,12,3,20,11,2,19,10
                140b02130a      
   363                          ;
   364                          ;
   365                          
rolli-f000.asm:
    42                          
    43   000efc ffffffff        		DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    44   000f00 00000000        		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    45   000f04 10101010        		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    46   000f08 00              		DEFB	0		;CURRENTLY SELECTED DISK#
    47   000f09 ff              		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    48   000f0a 01              		DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    49   000f0b 00              		DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    50   000f0c 0000            		DEFW	0		;DISK SPIN PERIOD
    51   000f0e 32              		DEFB	50		;HEAD LOAD DELAY
    52   000f0f 0a              		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    53   000f10 00000000        		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    54                          					;24 bytes
    55                          
    56   000f14 2108            		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    57   000f16 be07            		DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    58   000f18 e107            		DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    59   000f1a 020d0a0000      		DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    60   000f1f 00003c00        		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    61   000f23 80              		DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    62   000f24 00              		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    63   000f25 b70b            		DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    64   000f27 00c5            		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    65   000f29 ff0f            		DEFW	4095		;MAX BUFFER INDEX OFFSET
    66                          					;23 bytes
    67                          					;--------
    68                          					;47 bytes
    69                          					;========
    70                          ;--------------------------------------------------
    71                          ; set to zero in startup code until 0ffffh
    72                          ;--------------------------------------------------
    73   000f2b 73              ff2a:		db	73h
    74   000f2c 00                   		nop
    75   000f2d 00                   		nop
    76   000f2e 00                   		nop
    77   000f2f 00                   		nop
    78   000f30 00                   		nop
    79   000f31 00                   		nop
    80   000f32 00                   		nop
    81   000f33 00              ff33:     	nop
    82   000f34 00                   		nop
    83   000f35 00                   		nop
    84   000f36 00                   		nop
    85   000f37 524f4c4c49203120		db	"ROLLI 1 Rev 1.00"
                52657620312e3030
    86                          
    87                          
