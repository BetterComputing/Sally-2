sally2-0000.asm:
     1                          NOHIGHSPEEDSIO	equ	0
     2                          
     3                          RIDCMD		equ	11000000B	;READ ID COMMAND
     4                          RDCMD		equ	10000000B	;READ COMMAND
     5                          WRTCMD		equ	10100000B	;WRITE COMMAND
     6                          FINCMD		equ	11010000B	;FORCE INTERRUPT COMMAND
     7                          SKCMD		equ	00010000B	;SEEK COMMAND
     8                          RSTCMD		equ	00000000B	;RESTORE COMMAND
     9                          STEPOUT		equ	01100000B	;STEP OUT COMMAND
    10                          STEPIN		equ	01000000B	;STEP IN COMMAND
    11                          HLOAD		equ	00000000B	;HEAD LOAD BIT FOR TYPE 1 COMMANDS
    12                          
    13                          ;
    14                          ;	... DATA STRUCTURE FOR DISK I/O CONTROL BLOCK ...
    15                          ;
    16                          DSKOP		equ	0		;DISK OPERATION CODE
    17                          DSKDRV		equ	1		;DRIVE# (WITH SIDE# IN BIT 7)
    18                          DSKTRK		equ	2		;TRACK#
    19                          DSKSEC		equ	3		;SECTOR#
    20                          DSKPTR		equ	4		;READ/WRITE POINTER
    21                          DSKAUX		equ	6		;AUXILLIARY PARAMETERS (2 BYTES)
    22                          DSKSTS		equ	8		;OPERATION COMPLETION STATUS
    23                          
    24                          TSTRDY		equ	0				;SELECT DRIVE AND TEST READY
    25                          GETSEC		equ	1				;READ SECTOR
    26                          PUTSEC		equ	2				;WRITE SECTOR
    27                          GETID		equ	3				;READ ID MARK
    28                          
    29                          DISKV		equ	0f00fh
    30                          
    31                          CFRAME		equ	IOBUFF+LEN-5
    32                          IOBUFLENHI	equ	(IOBUFF+LEN) / 256
    33                          
    34                          
    35                          ;--------------------------------------------------
    36                          ; Firmware entry points
    37                          ;--------------------------------------------------
    38                          ;	diskio.mac
    39                          ACTIVON		equ	0f03ch
    40                          SHUTDOWN	equ	0f068h
    41                          DISK3		equ	0f0bfh
    42                          SEL4		equ	0f157h
    43                          
    44                          ;	bitbang.mac
    45                          SENDBUFF	equ	0f66ch
    46                          XMITBUF		equ	0f684h
    47                          RECVBUFF	equ	0f6b9h
    48                          RXBLOCK		equ	0f6d9h
    49                          STARTBIT	equ	0f719h
    50                          
    51                          ;	atari.mac
    52                          EMULATOR	equ	0f762h
    53                          LOGON		equ	0f77eh
    54                          CMDWAIT		equ	0f7e2h
    55                          CMDL4		equ	0f7f3h
    56                          CMDL5		equ	0f809h
    57                          DISKID		equ	0f82bh
    58                          DISKTAB		equ	0f83dh
    59                          DISKWRT1	equ	0f918h					;hook for setDirectSector write
    60                          DISKWRITE	equ	0f948h
    61                          DISKRD1		equ	0f993h					;hook for read direct sector
    62                          DISKREAD	equ	0f9d4h
    63                          SETSTAT		equ	0f9e3h
    64                          SECTRAN		equ	0fa10h
    65                          HASPARMS	equ	0fbd3h
    66                          DRVINDEX	equ	0fc28h
    67                          SENDACK		equ	0fc4ah
    68                          SENDCHAR	equ	0fc56h
    69                          
    70                          ;	format.max
    71                          SKEWSD		equ	0fe56h
    72                          SKEWDD		equ	0fe68h
    73                          SKEW13		equ	0fec8h
    74                          SKEW17		equ	0fee2h
    75                          
    76                          
    77                          
    78                          ;--------------------------------------------------
    79                          ; Track-Buffer 26*256 bytes
    80                          ;--------------------------------------------------
    81                          TRKBUF		equ	00800h
    82                          
    83                          SIONORMAL	equ	40
    84                          SIOFAST		equ	8
    85                          
    86                          		include "equs.mac"
equs.mac:
     1                          KEYBUF		equ	0ff00h		;16 byte keyboard input fifo
     2                          CTCVEC		equ	0ff10h		;8 word interrupt vector table
     3                          ;
     4                          ;
     5                          ;
     6                          PRINTER		equ	020h		;PRINTER OUTPUT/INPUTS
     7                          LATCH		equ	030h		;DRIVE CONTROL LATCH
     8                          WD179X		equ	040h		;WD TYPE DISK CONTROLLER
     9                          ;
    10                          ;	EQUATES FOR DISK CONTROLLER PORTS AND COMMAND CODES
    11                          ;
    12                          STSREG		equ	WD179X+0	;STATUS REGISTER
    13                          CMDREG		equ	WD179X+0	;COMMAND REGISTER
    14                          TRKREG		equ	WD179X+1	;TRACK REGISTER
    15                          SECREG		equ	WD179X+2	;SECTOR REGISTER
    16                          DATREG		equ	WD179X+3	;DATA REGISTER;
    17                          
    18                          SERIN		equ	050h		;RS232 SERIAL INPUT
    19                          ;
    20                          ATROUT		equ	050h		;ATARI SERIAL OUTPUT
    21                          SEROUT		equ	051h		;RS232 SERIAL OUTPUT
    22                          BANKSW		equ	052h		;ROM BANKSWITCH BIT
    23                          STROBE		equ	053h		;PRINTER STROBE
    24                          INDXCLR		equ	054h		;INDEX CONTROL FLOP CLEAR
    25                          DTR		equ	055h		;DTR OUTPUT CONTROL
    26                          INDXSET		equ	056h		;INDEX CONTROL FLOP SET
    27                          CDMUX		equ	057h		;ATARI CMD/DATA MUX CONTROL
    28                          ;
    29                          ATARI		equ	070h		;ATARI INPUT BITS PORT
    30                          CTC0		equ	080h		;ZILOG COUNTER/TIMER
    31                          CTC1		equ	081h
    32                          CTC2		equ	082h
    33                          CTC3		equ	083h
    34                          ;
    35                          NULL		equ	000h
    36                          CR		equ	00dh
    37                          LF		equ	00ah
    38                          ;
    39                          
sally2-0000.asm:
    87                          		include "global.mac"
global.mac:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	GLOBAL VARIABLES FOR ATARI Z80 ROM		*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          glbvars		equ	0ff20h
     8                          ;
     9                          ;	... GLOBAL VARIABLES FOR PHYSICAL DISK HANDLER ...
    10                          ;
    11                          ;DRVTAB:	DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    12                          ;		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    13                          ;RATES:		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    14                          ;UNIT:		DEFB	0		;CURRENTLY SELECTED DISK#
    15                          ;TRACK:		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    16                          ;DRVOFF:	DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    17                          ;OUTCPY:	DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    18                          ;PERIOD:	DEFW	0		;DISK SPIN PERIOD
    19                          ;HLDTIM:	DEFB	50		;HEAD LOAD DELAY
    20                          ;RWMAX:		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    21                          ;		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    22                          
    23                          DRVTAB:		equ	glbvars		;HEAD POSITIONS FOR 4 DRIVES
    24                          					;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    25                          RATES:		equ	DRVTAB+8	;SETTLING DELAYS / STEP RATES TABLE
    26                          UNIT:		equ	RATES+4		;CURRENTLY SELECTED DISK#
    27                          TRACK:		equ	UNIT+1		;TRACK POSITION OF SELECTED DRIVE
    28                          DRVOFF:		equ	TRACK+1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    29                          OUTCPY:		equ 	DRVOFF+1	;COPY OF DISK CONTROL LATCH
    30                          PERIOD:		equ	OUTCPY+1	;DISK SPIN PERIOD
    31                          HLDTIM:		equ	PERIOD+2	;HEAD LOAD DELAY
    32                          RWMAX:		equ	HLDTIM+1	;MAX NUMBER OF READ/WRITE RETRIES
    33                          EXPANSION	equ	RWMAX+1		;ROOM FOR EXPANSION
    34                          ;
    35                          ;
    36                          ;	... GLOBAL VARIABLES FOR ATARI HANDLER ...
    37                          ;
    38                          ;IDPTR:		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    39                          ;FSMVEC:	DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    40                          ;EXTVEC:	DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    41                          ;NEWLIN:	DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    42                          ;PSMSG:		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    43                          ;PMASKS:	DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    44                          ;		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    45                          ;FMTPTR:	DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    46                          ;PBASE:		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    47                          ;PSIZE:		DEFW	4095		;MAX BUFFER INDEX OFFSET
    48                          ;
    49                          ;glbsize	equ	$-glbvars		;length of initialized variables
    50                          ;        DEFB    73h			; **** Exists in original ROM? ****
    51                          IDPTR:		equ	EXPANSION+4	;POINTER TO DEVICE ID TABLE
    52                          FSMVEC:		equ 	IDPTR+2		;POINTER FOR ATARI TASK STATE MACHINE
    53                          EXTVEC:		equ	FSMVEC+2	;POINTER FOR EXTRA TASK PROCESSOR
    54                          NEWLIN:		equ	EXTVEC+2	;PRINTER NEWLINE CHARACTERS
    55                          PSMSG:		equ	NEWLIN+5	;PRINTER STATUS FRAME
    56                          PMASKS:		equ	PSMSG+4		;MASK ALL BITS BUT 'BUSY'
    57                          					;COMPARE TO ZERO FOR READY
    58                          FMTPTR:		equ	PMASKS+2	;POINTER TO STANDARD FORMAT TABLES
    59                          PBASE:		equ	FMTPTR+2	;PUT PRINT BUFFER AFTER HERE
    60                          PSIZE:		equ	PBASE+2		;MAX BUFFER INDEX OFFSET
    61                          
    62                          glbsize		equ	$-glbvars	;length of initialized variables
    63                          ;
    64                          ;
    65                          ;	*** UNINITIALIZED SCRATCH VARIABLES COME AFTER HERE ***
    66                          ;
    67                          PCOUNT:		EQU 	PSIZE+2		;BYTECOUNT FOR BUFFER
    68                          PINP:		EQU 	PCOUNT+2	;INPUT OFFSET
    69                          POUT:		EQU 	PINP+2		;OUTPUT OFFSET
    70                          CMDFLG:		EQU 	POUT+2		;COMMAND FRAME READY FLAG FROM IRQ
    71                          DMATRIX:	EQU 	CMDFLG+1    	;DRIVE POOP TABLES
    72                          OLDPTR:		EQU 	DMATRIX+64	;POINTER TO FIRST DRIVE ACCESSED
    73                          DKIOCB:		EQU 	OLDPTR+2	;DISK I/O COMMAND BLOCK
    74                          DRWCMD:		EQU 	DKIOCB+16	;R/W COMMAND FROM ATARI TO 'DISKIO'
    75                          LOGSIZ:		EQU 	DRWCMD+1	;LOGICAL SECTOR LENGTH FOR XFER
    76                          IDBUF:		EQU	LOGSIZ+2	;BUFFER FOR ID MARK READS
    77                          IOPTR:		EQU 	IDBUF+8		;ATARI BLOCK INPUT POINTER
    78                          VFLAG:		EQU 	IOPTR+2		;VERIFY FLAG FOR DISK WRITES
    79                          
    80                          ;
    81                          ;
    82                          ;	... VARIABLES FOR DISK FORMAT FUNCTION ...
    83                          ;
    84                          FMTSTUFF	EQU	VFLAG+1
    85                          FRMPTR:		EQU 	VFLAG+1			;POINTER TO FORMAT DATA TABLE
    86                          SKWPTR:		EQU 	FRMPTR+2		;POINTER TO SKEW TABLE
    87                          NSECTS:		EQU 	SKWPTR+2		;NUMBER OF SECTORS
    88                          TRKSIZ:		EQU 	NSECTS+1		;TRACK LENGTH IN BYTES
    89                          FMTLEN		EQU	(TRKSIZ+2)-FMTSTUFF
    90                          
    91                          sides:		EQU 	TRKSIZ+2		;copy of 'nsides' for drive#
    92                          tracks:		EQU 	sides+1			;copy of 'ntrks' for drive#
    93                          SEQNUM:		EQU 	tracks+1		;TEMP SECTOR SEQUENCE NUMBER
    94                          SEQPTR:		EQU 	SEQNUM+2		;TEMP ERROR LOG TABLE POINTER
    95                          TRKPTR:		EQU 	SEQPTR+2		;POINTER TO START OF TRACK IMAGE
    96                          
    97                          ;
    98                          ;	... LOCAL VARIABLES FOR DISK HANDLER ...
    99                          ;
   100                          CMDBYT:		EQU 	TRKPTR+2		;COMMAND BYTE FOR READS/WRITES
   101                          RWTRY:		EQU	CMDBYT+1		;READ/WRITE RETRY COUNT
   102                          TICKS:		EQU	RWTRY+1			;FREE RUNNING MILISECOND COUNTER
   103                          DRVTMR:		EQU	TICKS+2			;DISK ACTIVITY TIMER
   104                          ;
   105                          ;
   106                          ;
   107                          ;
   108                          IOBUFF		EQU	0C100H			;ATARI I/O BUFFER
   109                          LEN		EQU	512
   110                          ;
   111                          ;TRKBUF		EQU	IOBUFF+LEN		;TRACK BUFFER FOR READS
   112                          ;
   113                          
   114                          ;
   115                          ;
   116                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
   117                          ;
   118                          NTRKS	EQU	0		;NUMBER OF TRACKS
   119                          STEPRT	EQU	1		;STEP RATE
   120                          NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
   121                          NSIDES	EQU	4		;NUMBER OF SIDES
   122                          MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
   123                          SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
   124                          DSKBITS	EQU	8		;MISC NAUGHTY BITS
   125                          SPARE0	EQU	9
   126                          SPARE1	EQU	10
   127                          SPARE2	EQU	11
   128                          
   129                          CMDSTS	EQU	12		;COMMAND STATUS
   130                          HDWSTS	EQU	13		;HARDWARE STATUS
   131                          
   132                          FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
   133                          SPARE3	EQU	15
   134                          ;
   135                          ;
   136                          ;	EQUATES FOR BITS IN 'MEDIA' BYTE
   137                          ;
   138                          SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
   139                          DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
   140                          MSDOS	EQU	4		;512-byte sectors
   141                          ;
   142                          ;
   143                          ;	EQUATES FOR BITS IN 'DSKBITS' BYTE
   144                          ;
   145                          PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
   146                          ;
   147                          ;
   148                          ;	EQUATES FOR BITS IN 'CMDSTS' BYTE
   149                          ;
   150                          BADCMD	EQU	0		;BAD COMMAND FRAME BIT
   151                          BADDAT	EQU	1		;BAD DATA FRAME BIT
   152                          BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
   153                          WRPROT	EQU	3		;WRITE PROTECTED BIT
   154                          ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
   155                          SEC256	EQU	5		;LONG/SHORT SECTOR BIT
   156                          ;
   157                          ;
   158                          ;	EQUATES FOR BITS IN 'FLAGS' BYTE
   159                          ;
   160                          FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
   161                          CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
   162                          
sally2-0000.asm:
    88                          
    89                          ;--------------------------------------------------
    90                          ; Code executed after Reset
    91                          ;--------------------------------------------------
    92                          		ORG	00000h
    93                          ;
    94   000000 f3              reset:		di      				;disable interrupt
    95   000001 af              		xor     a				;set a to zero
    96                          ;		ld	b, a
    97   000002 3d              restime:	dec     a				;do 256 times nothing
    98   000003 20fd            		jr      nz, restime			;loop
    99                          ;		djnz	restime
   100                          
   101   000005 215505          		ld      hl, portval			;init 11 ports with values at 0a3h
   102   000008 060b            		ld      b, 0bh
   103   00000a 4e              portinit:	ld      c, (hl)
   104   00000b 23              		inc     hl
   105   00000c eda3            		outi
   106   00000e 20fa            		jr      nz, portinit			; loop
   107                          
   108   000010 2100f0          		ld      hl,0f000h          		;test ram @F000-FFFF
   109   000013 3e01            		ld      a, 01h             		;write 1,2,4,8,16,32,64,128
   110   000015 0610            testram2:	ld      b, 10h
   111   000017 77              testram:	ld      (hl),a
   112   000018 07              		rlca
   113   000019 2c              		inc     l
   114   00001a 20fb            		jr      nz, testram
   115   00001c 24              		inc     h
   116   00001d 10f8            		djnz    testram
   117                          
   118   00001f 0e10            		ld      c, 10h
   119   000021 2b              testram1:	dec     hl
   120   000022 0f              		rrca
   121   000023 be              		cp      (hl)
   122   000024 20fe            ramerr:		jr      nz, ramerr			;if error, loop forever
   123   000026 10f9            		djnz    testram1
   124   000028 0d              		dec     c
   125   000029 20f6            		jr      nz, testram1
   126   00002b 87              		add     a, a
   127   00002c 20e7            		jr      nz, testram2
   128                          
   129   00002e 21ab05          		ld      hl, sallycode			;copy BIOS 0f000h
   130   000031 1100f0          		ld      de, 0f000h			;length always 0f00h
   131   000034 01000f          		ld      bc, 00f00h
   132   000037 edb0            		ldir
   133   000039 21a714          		ld      hl, sallycode+0efch		;copy initial values to 0ff20h
   134   00003c 1120ff          		ld      de, 0ff20h			;length $2F
   135   00003f 012f00          		ld      bc, 002fh
   136   000042 edb0            		ldir
   137                          
   138   000044 af              		xor     a				;fill up to $FFFF with zeros
   139   000045 12              ramfill:	ld      (de),a
   140   000046 1c              		inc     e
   141   000047 20fc            		jr      nz, ramfill
   142                          
   143   000049 3110ff          		ld      sp, 0ff10h			;stack-pointer to 0ff10h
   144                          
   145   00004c 3eff            		ld      a, 0ffh				;load interrupt-vector register
   146   00004e ed47            		ld      i, a				;with 0ffh
   147   000050 ed5e            		im      2				;enable interrupt mode 2 (vectored)
   148                          
   149                          ;--------------------------------------------------
   150                          ; step 5 times in and then out to trk00
   151                          ; set bit 6 for each online floppy in ff5eh
   152                          ; percom block (16 bytes, byte 8 bit 6)
   153                          ;--------------------------------------------------
   154   000052 3e4f            		ld      a, 4fh				;select drive 1-4, Motor off, side 0, B/S=1, DD
   155   000054 d330            		out     (LATCH),a
   156                          
   157   000056 57              		ld      d, a				;d = 4fh
   158   000057 0605            		ld      b, 5				;step 5 times
   159                          stepin:
   160   000059 3e49            		ld      a, 49h				;4b = 0100 1011 = step-in
   161   00005b cd4705          		call    CMDOUT				;write A to FDC command and wait
   162   00005e 10f9            		djnz    stepin
   163                          
   164   000060 0664            		ld      b, 64h				;seek track 00 for all 4 drives
   165   000062 7a              outloop1:	ld      a, d				;select all drives
   166   000063 d330            		out     (LATCH),a
   167   000065 e3              		ex      (sp),hl				;???
   168   000066 e3              		ex      (sp),hl				;???
   169   000067 3e69            		ld      a, 69h				;step out
   170   000069 cd4705          		call    CMDOUT				;write A to FDC command and wait
   171                          
   172   00006c 1e01            		ld      e, 01h
   173   00006e 7b              outloop:	ld      a, e
   174   00006f f640            		or      40h
   175   000071 d330            		out     (LATCH), a			;select one drive
   176   000073 e3              		ex      (sp), hl
   177   000074 e3              		ex      (sp), hl
   178                          ;		call    0f391h				;stop command, get status
   179   000075 db40            		in	a, (STSREG)
   180   000077 cb57            		bit     2, a
   181   000079 2804            		jr      z, excldrv			;bit not set, not at track 00
   182   00007b 7b              		ld      a, e				;drive at track 00
   183   00007c 2f              		cpl     				;exclude drive from seeking
   184   00007d a2              		and     d
   185   00007e 57              		ld      d, a
   186                          excldrv:
   187   00007f cb23            		sla     e
   188   000081 cb63            		bit     4, e
   189   000083 28e9            		jr      z, outloop			;status checked for all 4 drives?
   190   000085 10db            		djnz    outloop1			;step out again
   191                          
   192                          ;		call    0f068h				;deselect floppies and seek current track?
   193   000087 3e50            		ld	a, 50h				;reset FDC and deselct
   194   000089 d330            		out	(LATCH), a
   195   00008b 3e40            		ld	a, 40h				;reset FDC and deselct
   196   00008d d330            		out	(LATCH), a
   197                          
   198   00008f 215eff          		ld      hl, 0ff5eh			;set bit for each connected floppy?
   199   000092 011000          		ld      bc, 0010h
   200   000095 3e04            		ld      a, 04h
   201   000097 cb1a            nextdrv:	rr      d
   202   000099 3802            		jr      c, noset
   203   00009b cbf6            		set     6, (hl)
   204   00009d 09              noset:		add     hl, bc
   205   00009e 3d              		dec     a
   206   00009f 20f6            		jr      nz, nextdrv
   207                          
   208                          
   209   0000a1 210000          		ld	hl, 00000h			; source
   210   0000a4 110080          		ld	de, 08000h			; dest
   211   0000a7 010020          		ld	bc, 02000h
   212   0000aa edb0            		ldir
   213   0000ac 21b200          		ld	hl, code8000
   214   0000af cbfc            		set	7, h
   215   0000b1 e9              		jp	(hl)
   216   0000b2 3e01            code8000:	ld	a, 1
   217   0000b4 d352            		out	(BANKSW), a
   218   0000b6 210080          		ld	hl, 08000h
   219   0000b9 110000          		ld	de, 00000h
   220   0000bc 010020          		ld	bc, 02000h
   221   0000bf edb0            		ldir
   222   0000c1 c3c400          		jp	code0000
   223                          
   224                          code0000:
   225   0000c4 3100c1          		ld      sp, 0c100h			;set stack to 0c100h
   226                          
   227                          ;--------------------------------------------------
   228                          ; firmware patch
   229                          ;--------------------------------------------------
   230                          
   231   0000c7 21ffff          		ld	hl, 0ffffh			;reset drive / track buffer
   232   0000ca 229005          		ld	(drive), hl
   233                          
   234   0000cd 213ff8          		ld	hl, DISKTAB+2
   235   0000d0 116e05          		ld	de, disktab+3
   236   0000d3 011500          		ld	bc, 3*7
   237   0000d6 edb0            		ldir
   238                          
   239   0000d8 210800          		ld	hl, 8
   240   0000db 226b05          		ld	(disktab),hl
   241   0000de 3e3f            		ld	a, '?'
   242   0000e0 326d05          		ld	(disktab+2), a
   243   0000e3 eb              		ex	de, hl
   244                          
   245   0000e4 3ed1            		ld	a, getspeed & 255
   246   0000e6 77              		ld	(hl), a
   247   0000e7 23              		inc	hl
   248   0000e8 3e03            		ld	a, getspeed / 256
   249   0000ea 77              		ld	(hl), a
   250   0000eb 23              		inc	hl
   251                          
   252   0000ec 216b05          		ld	hl, disktab
   253   0000ef 222bf8          		ld	(DISKID), hl
   254   0000f2 222df8          		ld	(DISKID+2), hl
   255   0000f5 222ff8          		ld	(DISKID+4), hl
   256   0000f8 2231f8          		ld	(DISKID+6), hl
   257                          
   258   0000fb 3e28            		ld	a, SIONORMAL
   259   0000fd 328e05          		ld	(pokeydiv), a
   260   000100 af              		xor	a
   261   000101 328f05          		ld	(hispeed), a
   262   000104 3e02            		ld	a, 2
   263   000106 328d05          		ld	(direct), a
   264   000109 3ec3            		ld	a, 0c3h				;'JP' instruction
   265   00010b 3284f6          		ld	(XMITBUF), a
   266   00010e 32d9f6          		ld	(RXBLOCK), a
   267   000111 32e2f7          		ld	(CMDWAIT), a
   268   000114 327ef7          		ld	(LOGON), a
   269   000117 3218f9          		ld	(DISKWRT1), a
   270   00011a 3293f9          		ld	(DISKRD1), a
   271                          
   272   00011d 210304          		ld	hl, xmitbuf
   273   000120 2285f6          		ld	(XMITBUF+1), hl
   274   000123 214e04          		ld	hl, rxblock
   275   000126 22daf6          		ld	(RXBLOCK+1), hl
   276   000129 21e703          		ld	hl, cmdwait
   277   00012c 22e3f7          		ld	(CMDWAIT+1), hl
   278   00012f 21e102          		ld	hl, diskread
   279   000132 22d5f9          		ld	(DISKREAD+1), hl
   280   000135 21b002          		ld	hl, diskwrite
   281   000138 2249f9          		ld	(DISKWRITE+1), hl
   282   00013b 215001          		ld	hl, logon
   283   00013e 227ff7          		ld	(LOGON+1), hl
   284   000141 214e02          		ld	hl, diskwrt1
   285   000144 2219f9          		ld	(DISKWRT1+1), hl
   286   000147 21c101          		ld	hl, diskrd1
   287   00014a 2294f9          		ld	(DISKRD1+1), hl
   288                          
   289                          ;--------------------------------------------------
   290                          ; test code
   291                          ;--------------------------------------------------
   292                          ;		ld	a, 0c3h				;'JP' instruction
   293                          ;		ld	(SEL4), a
   294                          ;		ld	hl, sel4
   295                          ;		ld	(SEL4+1), hl
   296                          ;
   297                          ;		ld	a, 255
   298                          ;		ld	(CTCVEC+2), a
   299                          ;
   300                          ;		ld	b, 3
   301                          ;		ld	a, ' '
   302                          ;stars:		call	serout
   303                          ;;		djnz	stars
   304                          ;
   305                          ;		ld	ix, testdcb
   306                          ;		call	sercr
   307                          ;		call	DISKV
   308                          ;		call	dumpdcb
   309                          ;
   310                          ;		ld	a, GETID
   311                          ;		ld	(testdcb), a
   312                          ;		call	DISKV
   313                          ;		call	dumpdcb
   314                          ;		call	dumprid
   315                          ;
   316                          ;		ld	hl, 512
   317                          ;		ld	(testdcb+DSKAUX), hl
   318                          ;		ld	a, GETSEC
   319                          ;		ld	(testdcb), a
   320                          ;
   321                          ;		ld	a, '*'
   322                          ;		call	serout
   323                          ;
   324                          ;		ld	c, 1
   325                          ;secloop1:	ld	b, 18
   326                          ;		ld	hl, sectab
   327                          ;secloop:	ld	a, (hl)
   328                          ;		ld	(testdcb + DSKSEC),a
   329                          ;		inc	hl
   330                          ;		push	bc
   331                          ;		push	hl
   332                          ;		call	DISKV
   333                          ;		pop	hl
   334                          ;		pop	bc
   335                          ;		djnz	secloop
   336                          ;		dec	c
   337                          ;		jr	nz, secloop1
   338                          ;
   339                          ;		ld	a, '-'
   340                          ;		call	serout
   341                          ;
   342                          ;loop:		jr	loop
   343                          ;;
   344                          ;;
   345                          
   346                          ;
   347                          ;dumprid:
   348                          ;		ld	hl, (testdcb + DSKPTR)
   349                          ;		call	sercr
   350                          ;		ld	b, 6
   351                          ;dumprid1:	ld	a, (hl)
   352                          ;		inc	hl
   353                          ;		call	serhex
   354                          ;		call	serspace
   355                          ;		djnz	dumprid1
   356                          ;		ret
   357                          ;
   358                          ;dummy:		xor	a
   359                          ;		call	serhex
   360                          ;		ret
   361                          ;
   362                          ;testdcb:	db	TSTRDY				;DISK OPERATION CODE
   363                          ;		db	1				;DRIVE# (WITH SIDE# IN BIT 7)
   364                          ;		db	0				;TRACK#
   365                          ;		db	1				;SECTOR#
   366                          ;		dw	08000h				;READ/WRITE POINTER
   367                          ;		dw	0				;AUXILLIARY PARAMETERS (2 BYTES)
   368                          ;		db	0				;OPERATION COMPLETION STATUS
   369                          ;
   370                          ;sectab:
   371                          ;		db	1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
   372                          ;		db	1, 3, 5, 7, 9, 11, 13, 15, 17, 2, 4, 6, 8, 10, 12, 14, 16, 18
   373                          ;		db	1, 4, 7, 10, 13, 16, 2, 5, 8, 11, 14, 17, 3, 6, 9, 12, 15, 18
   374                          ;		db	1, 5, 9, 13, 17, 3, 7, 11, 15, 2, 6, 10, 14, 18, 4, 8, 12, 16
   375                          ;--------------------------------------------------
   376                          ; end of test code
   377                          ;--------------------------------------------------
   378   00014d c362f7          		jp	EMULATOR
   379                          
   380   000150 3233ff          logon:		LD	(RWMAX),A			;DO LESS RETRIES IN ATARI MODE
   381                          
   382   000153 3ec3            		ld	a, 0c3h				;'JP' instruction
   383   000155 3257f1          		ld	(SEL4), a
   384   000158 217301          		ld	hl, sel4
   385   00015b 2258f1          		ld	(SEL4+1), hl
   386   00015e 216701          		ld	hl, shutdown
   387   000161 2269f0          		ld	(SHUTDOWN+1), hl
   388   000164 c381f7          		jp	LOGON+3
   389                          
   390                          
   391   000167 cd28f2          shutdown:	call	0f228h
   392   00016a 3e07            		ld	a, 00000111B			;CTC1 4uS pulses (4Mhz / 1*16)
   393   00016c d381            		out	(CTC1), a
   394   00016e 3e01            		ld	a, 1
   395   000170 d381            		out	(CTC1), a
   396   000172 c9              		ret
   397                          ;
   398                          ;
   399                          ;
   400   000173 cb70            sel4:		bit	6, b				;8" found?
   401   000175 2844            		jr	z, sel4ex			;yes, do nothing
   402                          
   403   000177 c5              		push	bc				;save registers
   404   000178 d5              		push	de
   405   000179 e5              		push	hl
   406   00017a dde5            		push	ix
   407                          
   408   00017c 78              		ld	a, b				;switch HD on
   409   00017d cbb7            		res	6, a
   410   00017f d330            		out	(LATCH), a
   411                          
   412   000181 dde5            		push	ix				;load hl with ix
   413   000183 e1              		pop	hl
   414   000184 119c05          		ld	de, dcb
   415   000187 010900          		ld	bc, 9
   416   00018a edb0            		ldir					;copy dcb
   417                          
   418   00018c dd219c05        		ld	ix, dcb
   419   000190 21a505          		ld	hl, id
   420   000193 22a005          		ld	(dcb + DSKPTR), hl
   421   000196 3ec0            		ld	a, RIDCMD
   422   000198 32c5ff          		ld	(CMDBYT), a
   423   00019b 3e18            		ld	a, 018h				;substitute JR	Z,xx by JR xx
   424   00019d 32f0f0          		ld	(DISK3 + 031h), a
   425   0001a0 0606            		ld	b, 6
   426   0001a2 c5              sel4a:		push	bc
   427   0001a3 cdc5f0          		call	DISK3+6				;DISK3: READ 6 BYTE ID RECORD
   428   0001a6 c1              		pop	bc
   429   0001a7 10f9            		djnz	sel4a
   430                          
   431   0001a9 3e28            		ld	a, 028h				;reset JR Z,xx
   432   0001ab 32f0f0          		ld	(DISK3 + 031h), a
   433                          
   434   0001ae dde1            		pop	ix
   435   0001b0 e1              		pop	hl
   436   0001b1 d1              		pop	de
   437   0001b2 c1              		pop	bc
   438                          
   439   0001b3 3aa405          		ld	a, (dcb + DSKSTS)		;check disk status
   440   0001b6 b7              		or	a
   441   0001b7 2002            		jr	nz, sel4ex			;not zero, no HD
   442   0001b9 cbb0            		res	6, b				;
   443                          sel4ex:
   444   0001bb 78              		ld	a, b
   445   0001bc 1600            		ld	d, 0
   446   0001be c35af1          		jp	SEL4+3
   447                          
   448                          ;--------------------------------------------------
   449                          ; hook for read directSector if aux1/2 = 0
   450                          ;--------------------------------------------------
   451                          diskrd1:
   452   0001c1 3e02            		ld	a, 2
   453   0001c3 328d05          		ld	(direct), a			;clear direct
   454                          
   455   0001c6 2afdc2          		ld	hl, (CFRAME + 2)		;load DAUX1/2, test if zero
   456   0001c9 7d              		ld	a, l
   457   0001ca b4              		or	h
   458   0001cb 2806            		jr	z, diskrd1a			;if zero, use direct sector number
   459   0001cd cd10fa          		call	SECTRAN				;else use original code, call SECTRAN
   460   0001d0 c396f9          		jp	DISKRD1+3			;and procees
   461                          
   462   0001d3 dd2198ff        diskrd1a:	ld	ix, DKIOCB
   463   0001d7 dd360000        		ld	(ix + DSKOP), TSTRDY
   464                          ;		call	dumpdcb
   465   0001db e5              		push	hl
   466   0001dc cd0ff0          		call	DISKV
   467   0001df e1              		pop	hl
   468                          
   469   0001e0 cdf701          		call	sec2track			;compute sector, track, side from direct sector
   470   0001e3 dd360001        		ld	(ix + DSKOP), GETSEC
   471                          ;		call	dumpdcb
   472   0001e7 e5              		push	hl
   473   0001e8 cde102          		call	diskread			;CALL DISK I/O HANDLER
   474   0001eb e1              		pop	hl
   475                          
   476   0001ec 3aa0ff          		ld	a, (DKIOCB+DSKSTS)
   477   0001ef cde3f9          		call	SETSTAT				;call SETSTAT
   478   0001f2 1600            		ld	d, 0				;no invert
   479   0001f4 c36cf6          		jp	SENDBUFF			;jump SENDBUFF
   480                          
   481                          ;--------------------------------------------------
   482                          ;compute sector, track, side from direct sector
   483                          ;--------------------------------------------------
   484   0001f7 af              sec2track:	xor	a				;clear carry and a
   485   0001f8 06ff            		ld	b, 0ffh				;also b
   486   0001fa 2a8b05          		ld	hl, (dsector)			;compute track and side numer
   487   0001fd 111200          		ld	de, 18				;18 secs per track
   488   000200 04              sec2track1:	inc	b				;b holds track-number
   489   000201 ed52            		sbc	hl, de
   490   000203 30fb            		jr	nc, sec2track1			;subtract 18 as long carry clear
   491   000205 7d              		ld	a, l
   492   000206 c613            		add	19				;add 19 to get sector number + 1
   493   000208 329bff          		ld	(DKIOCB+DSKSEC), a
   494   00020b cb38            		srl	b				;divide track by two, (we have two sides)
   495   00020d 78              		ld	a, b
   496   00020e 329aff          		ld	(DKIOCB+DSKTRK), a
   497   000211 1f              		rra					;shift-in side-number from previously lowest-bit
   498   000212 e680            		and	080h				;mask out bit 0-6
   499   000214 2199ff          		ld	hl, DKIOCB+DSKDRV
   500   000217 cbbe            		res	7, (hl)
   501   000219 b6              		or	(hl)
   502   00021a 77              		ld	(hl), a
   503                          
   504   00021b cdf104          		call	serhex
   505   00021e cdd704          		call	serspace
   506   000221 3e53            		ld	a, 'S'
   507   000223 cd0a05          		call	serout
   508   000226 3a9bff          		ld	a, (DKIOCB+DSKSEC)
   509   000229 cdf104          		call	serhex
   510   00022c cdd704          		call	serspace
   511   00022f 3e54            		ld	a, 'T'
   512   000231 cd0a05          		call	serout
   513   000234 3a9aff          		ld	a, (DKIOCB+DSKTRK)
   514   000237 cdf104          		call	serhex
   515   00023a cddf04          		call	sercr
   516                          
   517   00023d 210002          		ld	hl, 512
   518   000240 229eff          		ld	(DKIOCB+DSKAUX), hl
   519   000243 2100c1          		ld	hl, IOBUFF
   520   000246 229cff          		ld	(DKIOCB+DSKPTR), hl
   521   000249 dd2198ff        		ld	ix, DKIOCB
   522   00024d c9              		ret
   523                          
   524                          ;--------------------------------------------------
   525                          ; hook for setDirectSector if aux1/2 = 0
   526                          ;--------------------------------------------------
   527   00024e e5              diskwrt1:	push	hl
   528   00024f 22a9ff          		ld	(LOGSIZ),HL			;SAVE DATA BLOCK LENGTH
   529                          
   530   000252 2afdc2          		ld	hl, (CFRAME + 2)		;load DAUX1/2
   531   000255 7d              		ld	a, l
   532   000256 b4              		or	h
   533   000257 2804            		jr	z, diskwrt1a			;if zero, do special stuff
   534                          
   535   000259 e1              		pop	hl				;otherwise continue
   536   00025a c31bf9          		jp	DISKWRT1+3			;normal
   537                          
   538   00025d cd4afc          diskwrt1a:	call	SENDACK
   539                          
   540   000260 218d05          		ld	hl, direct			;direct
   541                          ;		ld	a, (hl)
   542                          ;		call	serhex
   543   000263 35              		dec	(hl)
   544   000264 2813            		jr	z, diskwrt1d			;first sector
   545   000266 fa8602          		jp	m, diskwrt1b			;second sector
   546                          
   547   000269 0640            		ld	b, 64
   548   00026b 10fe            		djnz	$				;wait some time
   549                          
   550   00026d 2a00c1          		ld	hl, (IOBUFF)			;save 2-byte sector number (0-xxxx)
   551   000270 228b05          		ld	(dsector), hl
   552                          
   553   000273 e1              diskwrt1c:	pop	hl
   554   000274 3e43            		ld	a, 'C'
   555   000276 c356fc          		jp	SENDCHAR
   556                          
   557   000279 2100c1          diskwrt1d:	ld	hl, IOBUFF
   558   00027c 1102c3          		ld	de, IOBUFF+LEN+2
   559   00027f 010001          		ld	bc, 0100h			;rec first half
   560   000282 edb0            		ldir
   561   000284 18ed            		jr	diskwrt1c
   562                          
   563   000286 3602            diskwrt1b:	ld	(hl), 2				;direct = 2
   564                          
   565   000288 210002          		ld	hl, 512				;LOGSIZ 512 bytes in this case
   566   00028b 22a9ff          		ld	(LOGSIZ), hl
   567                          
   568   00028e 2100c1          		ld	hl, IOBUFF
   569   000291 1100c2          		ld	de, IOBUFF+0100h
   570   000294 010001          		ld	bc, 0100h
   571   000297 edb0            		ldir
   572   000299 2102c3          		ld	hl, IOBUFF+LEN+2
   573   00029c 1100c1          		ld	de, IOBUFF
   574   00029f 010001          		ld	bc, 0100h
   575   0002a2 edb0            		ldir
   576                          
   577   0002a4 cdf701          		call	sec2track
   578                          
   579   0002a7 dd360002        		ld	(ix + DSKOP), PUTSEC
   580   0002ab cdb002          		call	diskwrite
   581                          
   582   0002ae 18c3            		jr	diskwrt1c
   583                          ;--------------------------------------------------
   584                          ; diskwrite: write through sector
   585                          ;--------------------------------------------------
   586                          diskwrite:
   587                          ;		ld	a, 'W';
   588                          ;		call	serout
   589                          
   590                          ;		jp	DISKV
   591                          
   592   0002b0 cdc403          		call	checktrack
   593   0002b3 2010            		jr	nz, diskwrite1
   594                          
   595                          ;		ld	hl, (LOGSIZ)
   596                          ;		call	seraddr
   597                          
   598   0002b5 cda703          		call	compbufadr
   599                          ;		call	seraddr
   600                          
   601   0002b8 eb              		ex	de, hl
   602   0002b9 dd6605          		ld	h, (ix + DSKPTR+1)
   603   0002bc dd6e04          		ld	l, (ix + DSKPTR)
   604   0002bf ed4ba9ff        		ld	bc, (LOGSIZ)
   605                          
   606   0002c3 edb0            		ldir
   607                          
   608   0002c5 c30ff0          diskwrite1:	jp	DISKV
   609                          
   610                          ;--------------------------------------------------
   611                          ; Debug routine
   612                          ;--------------------------------------------------
   613                          ;debug:		call	serout
   614                          ;		ld	a, (ix + DSKDRV)
   615                          ;		call	serhex
   616                          ;		ld	a, 't'
   617                          ;		call	serout
   618                          ;		ld	a, (ix + DSKTRK)
   619                          ;		call	serhex
   620                          ;		ld	a, 's'
   621                          ;		call	serout
   622                          ;		ld	a, (ix + DSKSEC)
   623                          ;		call	serhex
   624                          ;		ld	a, (ix + DSKPTR+1)
   625                          ;		call	serhex
   626                          ;		ld	a, (ix + DSKPTR)
   627                          ;		call	serhex
   628                          ;		ld	a, (ix + DSKAUX+1)
   629                          ;		call	serhex
   630                          ;		ld	a, (ix + DSKAUX)
   631                          ;		call	serhex
   632                          ;
   633                          ;		call	serspace
   634                          ;		ld	a, (CFRAME+3)
   635                          ;		call	serhex
   636                          ;		ld	a, (CFRAME+2)
   637                          ;		call	serhex
   638                          ;		call	serspace
   639                          ;		ld	a, (IY+NSECS+1)
   640                          ;		call	serhex
   641                          ;		ld	a, (iy+NTRKS)
   642                          ;		call	serhex
   643                          ;
   644                          ;		call	sercr
   645                          ;		ret
   646                          ;
   647   0002c8 f5              dumpdcb:	push	af
   648   0002c9 c5              		push	bc
   649   0002ca e5              		push	hl
   650                          
   651   0002cb dde5            		push	ix
   652   0002cd e1              		pop	hl
   653                          ;		call	sercr
   654   0002ce 0609            		ld	b, 9
   655   0002d0 7e              dumpdcb1:	ld	a, (hl)
   656   0002d1 23              		inc	hl
   657   0002d2 cdf104          		call	serhex
   658   0002d5 cdd704          		call	serspace
   659   0002d8 10f6            		djnz	dumpdcb1
   660   0002da cddf04          		call	sercr
   661                          
   662   0002dd e1              		pop	hl
   663   0002de c1              		pop	bc
   664   0002df f1              		pop	af
   665   0002e0 c9              		ret
   666                          ;--------------------------------------------------
   667                          ; diskread: cache a track
   668                          ;--------------------------------------------------
   669                          diskread:
   670                          ;		ld	a, 'R'
   671                          ;		call	debug
   672                          
   673   0002e1 cdc403          		call	checktrack
   674   0002e4 ca6003          		jp	z, match
   675                          
   676   0002e7 ed539005        		ld	(drive), de			;save new drive and track
   677   0002eb dde5            		push	ix				;save ix
   678                          
   679   0002ed dde5            		push	ix				;load hl with ix
   680   0002ef e1              		pop	hl
   681   0002f0 119c05          		ld	de, dcb
   682   0002f3 010900          		ld	bc, 9
   683   0002f6 edb0            		ldir					;copy dcb
   684                          
   685   0002f8 dd219c05        		ld	ix, dcb				;load ix with new dcb
   686                          
   687   0002fc 3aa305          		ld	a, (dcb + DSKAUX+1)		;get sector length high-byte
   688   0002ff fe02            		cp	2
   689   000301 2020            		jr	nz, readtrack2			;no MS-DOS disk
   690                          
   691                          
   692   000303 210008          		ld	hl, TRKBUF
   693   000306 010112          		ld	bc, 18 * 256 + 1		;b=18, c = 1
   694                          
   695   000309 22a005          readtrack3:	ld	(dcb + DSKPTR), hl
   696   00030c dd7103          		ld	(ix + DSKSEC), c
   697                          
   698                          ;		call	dumpdcb
   699                          
   700   00030f e5              		push	hl
   701   000310 c5              		push	bc
   702   000311 cd0ff0          		call	DISKV
   703   000314 c1              		pop	bc
   704   000315 e1              		pop	hl
   705                          ;		call	dumpsec
   706   000316 3aa405          		ld	a, (dcb + DSKSTS)		;error occured?
   707   000319 b7              		or	a
   708   00031a 2036            		jr	nz, readtrack4			;yes
   709   00031c 24              		inc	h
   710   00031d 24              		inc	h
   711   00031e 0c              		inc	c
   712   00031f 10e8            		djnz	readtrack3
   713   000321 183b            		jr	readtrack5
   714                          
   715   000323 0600            readtrack2:	ld	b, 0				;compute skew-list from media type
   716   000325 fd4e05          		ld	c, (iy + MEDIA)
   717   000328 219405          		ld	hl, skewtab
   718   00032b 09              		add	hl, bc
   719   00032c 7e              		ld	a, (hl)
   720   00032d 23              		inc	hl
   721   00032e 66              		ld	h, (hl)
   722   00032f 6f              		ld	l, a
   723   000330 fd4603          		ld	b, (iy + NSECS+1)
   724                          
   725   000333 229205          readtrack1:	ld	(secptr), hl
   726                          
   727   000336 2a9205          readtrack:	ld	hl, (secptr)
   728   000339 7e              		ld	a, (hl)
   729   00033a 329f05          			ld	(dcb + DSKSEC), a
   730   00033d 23              		inc	hl
   731   00033e 229205          		ld	(secptr), hl
   732                          
   733   000341 c5              		push	bc
   734   000342 cda703          		call	compbufadr
   735   000345 22a005          		ld	(dcb + DSKPTR), hl
   736   000348 cd0ff0          		call	DISKV
   737   00034b c1              		pop	bc
   738                          
   739   00034c 3aa405          		ld	a, (dcb + DSKSTS)		;error occured?
   740   00034f b7              		or	a
   741   000350 280a            		jr	z, readtrack6			;no
   742                          readtrack4:	;call	dumpdcb
   743   000352 21ffff          		ld	hl, 0ffffh
   744   000355 229005          		ld	(drive), hl
   745   000358 dde1            		pop	ix				;yes, store in original dcb
   746   00035a 181e            		jr	match2
   747   00035c 10d8            readtrack6:	djnz	readtrack
   748   00035e dde1            readtrack5:	pop	ix
   749                          
   750   000360 cda703          match:		call	compbufadr
   751   000363 dd5605          		ld	d, (ix + DSKPTR+1)
   752   000366 dd5e04          		ld	e, (ix + DSKPTR)
   753   000369 ed4ba9ff        		ld	bc, (LOGSIZ)
   754   00036d 3aa305          		ld	a, (dcb + DSKAUX+1)		;get sector length high-byte
   755   000370 fe02            		cp	2
   756   000372 2003            		jr	nz, match1
   757   000374 010002          		ld	bc, 512
   758   000377 edb0            match1:		ldir
   759                          
   760   000379 af              		xor	a
   761   00037a dd7708          match2:		ld	(ix + DSKSTS), a
   762                          
   763   00037d 3ed0            		ld	a, FINCMD			;keeps motor spinning
   764   00037f cd4705          		call	CMDOUT
   765                          
   766   000382 c33cf0          		jp	ACTIVON
   767                          
   768                          
   769                          ;--------------------------------------------------
   770                          ; dump 512 bytes at hl
   771                          ;--------------------------------------------------
   772   000385 c5              dumpsec:	push	bc
   773   000386 e5              		push	hl
   774   000387 cde704          		call	seraddr
   775   00038a cddf04          		call	sercr
   776   00038d 010002          		ld	bc, 512
   777   000390 7e              match3a:	ld	a, (hl)
   778   000391 cdf104          		call	serhex
   779   000394 78              		ld	a, b
   780   000395 e60f            		and	15
   781   000397 2003            		jr	nz, match3
   782   000399 cddf04          		call	sercr
   783   00039c 23              match3:		inc	hl
   784   00039d 0d              		dec	c
   785   00039e 20f0            		jr	nz, match3a
   786   0003a0 10ee            		djnz	match3a
   787   0003a2 e1              		pop	hl
   788   0003a3 c1              		pop	bc
   789   0003a4 c3df04          		jp	sercr
   790                          
   791                          ;--------------------------------------------------
   792                          ; hl = TRKBUF + DSKSEC * (128/256/512)
   793                          ;--------------------------------------------------
   794   0003a7 210008          compbufadr:	ld	hl, TRKBUF
   795   0003aa dd4603          		ld	b, (ix + DSKSEC)
   796   0003ad 05              		dec	b
   797   0003ae 0e00            		ld	c, 0
   798   0003b0 3aa305          		ld	a, (dcb + DSKAUX + 1)		;load seclen highbyte
   799   0003b3 b7              		or	a
   800   0003b4 2808            		jr	z, compbufadr2			;if zero, assume 128 bytes length
   801   0003b6 fe01            		cp	1
   802   0003b8 2808            		jr	z, compbufadr1			;if 1, assume 256 bytes
   803   0003ba cb20            		sla	b				;512 bytes
   804   0003bc 1804            		jr	compbufadr1
   805   0003be cb38            compbufadr2:	srl	b				;128 bytes
   806   0003c0 cb19            		rr	c
   807   0003c2 09              compbufadr1:	add	hl, bc
   808   0003c3 c9              		ret
   809                          
   810   0003c4 2a9005          checktrack:	ld	hl, (drive)			;load
   811   0003c7 dd5602          		ld	d, (ix + DSKTRK)		;high
   812   0003ca dd5e01          		ld	e, (ix + DSKDRV)		;low
   813   0003cd b7              		or	a				;clear carry
   814   0003ce ed52            		sbc	hl, de
   815   0003d0 c9              		ret
   816                          
   817                          ;--------------------------------------------------
   818                          ; get Pokeydivisor command '?'
   819                          ;--------------------------------------------------
   820                          getspeed:
   821                          ;		ld	a, '?'
   822                          ;		call	serout
   823                          
   824   0003d1 cd28fc          		call	DRVINDEX			;POINT IY TO DRIVE'S DATA AREA
   825   0003d4 d8              		ret	C				;EXIT IF NOT A DRIVE IN OUR BOX
   826                          
   827                          ;		call	HASPARMS
   828                          ;		ret	Z				;EXIT IF DISK PARAMS NOT KNOWN
   829                          
   830   0003d5 cd4afc          		call	SENDACK				;SEND 'ACK' FOR COMMAND FRAME
   831                          
   832   0003d8 21ffc2          		ld	hl, IOBUFF+LEN-1
   833                          
   834                          		IF NOHIGHSPEEDSIO <> 1
   835   0003db 3e08            		ld	a, SIOFAST
   836   0003dd 77              		ld	(hl), a
   837   0003de 328f05          		ld	(hispeed), a
   838                          		ELSE
   839                          		ld	(hl), SIONORMAL
   840                          		ENDIF
   841                          
   842   0003e1 114300          		ld	de, 'C'
   843   0003e4 c36cf6          		jp	SENDBUFF			;SEND 'C' AND PARAMS DATA FRAME
   844                          
   845                          
   846                          ;--------------------------------------------------
   847                          ; cmdwait
   848                          ;--------------------------------------------------
   849   0003e7 3a55ff          cmdwait:	ld	a, (CMDFLG)
   850   0003ea b7                              or	a				;SEE IF COMMAND FRAME HAS ARRIVED
   851   0003eb c8                              ret	z				;EXIT IF NOTHING HAS HAPPENED
   852                          
   853   0003ec cdb504          		call	sercmd				;5-byte command frame
   854                          
   855   0003ef 3a55ff          		ld	a, (CMDFLG)
   856   0003f2 fe01                            cp	1
   857                          
   858   0003f4 f3              		di					;ELSE RESET INTERRUPT AND START AGAIN
   859   0003f5 3e03                            ld	a, 00000011B
   860   0003f7 d380                            out	(CTC0),A
   861   0003f9 fb              		ei
   862                          
   863   0003fa caf3f7                          jp	z, CMDL4			;good cmd-frame
   864                          
   865   0003fd cd6504          		call	togglebaud
   866   000400 c309f8          		jp	CMDL5
   867                          
   868                          
   869                          
   870                          ;--------------------------------------------------
   871                          ; xmitbuf
   872                          ;--------------------------------------------------
   873                          xmitbuf:
   874   000403 f3              		di
   875   000404 3a8e05          		ld	a, (pokeydiv)			;is fast?
   876   000407 fe28            		cp	SIONORMAL
   877   000409 2006            		jr	nz, xmitfast			;yes, jump
   878   00040b 0119f7          		ld	bc, STARTBIT
   879   00040e c388f6          		jp	XMITBUF+4
   880                          
   881                          xmitfast:
   882   000411 3e07            		ld	a, 00000111B			;CTC1 4uS pulses (4Mhz / 1*16)
   883   000413 d381            		out	(CTC1), a
   884   000415 3e01            		ld	a, 1
   885   000417 d381            		out	(CTC1), a
   886                          
   887   000419 7e              xmitfast1:	ld	a, (hl)				;7
   888   00041a 23              		inc	hl				;6
   889   00041b aa              		xor	d				;4
   890   00041c 4f              		ld	c, a				;4
   891   00041d 83              		add	a, e				;4
   892   00041e ce00            		adc	0				;7
   893   000420 5f              		ld	e, a				;4
   894   000421 cd2f04          		call	fastsend			;17 send byte in c
   895   000424 7c              		ld	a, h				;4
   896   000425 fec3            		cp	IOBUFLENHI			;7
   897   000427 38f0            		jr	c, xmitfast1			;12/7 loop if buffer end not reached
   898                          
   899   000429 3e03            		ld	a, 00000011B
   900   00042b d381            		out	(CTC1), a
   901   00042d fb              		ei
   902   00042e c9              		ret
   903                          
   904   00042f af              fastsend:	xor	a
   905   000430 d350            		out	(ATROUT), a
   906                          
   907   000432 dde5            		push	ix				;15
   908   000434 dde1            		pop	ix				;14
   909   000436 79              		ld	a, c				;4
   910   000437 0608            		ld	b, 8				;7
   911   000439 03              		inc	bc				;6
   912   00043a 00              		nop					;4
   913                          
   914   00043b 00              fastsend1:	nop					;4
   915   00043c fe01            		cp	1				;7
   916   00043e d350            		out	(ATROUT), a			;11
   917   000440 0f              		rrca					;4
   918   000441 dde5            		push	ix				;15
   919   000443 dde1            		pop	ix				;14
   920   000445 10f4            		djnz	fastsend1			;13 / 8
   921                          
   922   000447 ed5f            		ld	a, r				;9
   923   000449 3e01            		ld	a, 1				;7
   924   00044b d350            		out	(ATROUT), a			;11
   925   00044d c9              		ret					;10
   926                          
   927                          ;--------------------------------------------------
   928                          ; rxblock
   929                          ;--------------------------------------------------
   930   00044e 3a8e05          rxblock:	ld	a, (pokeydiv)			;is fast?
   931   000451 fe28            		cp	SIONORMAL
   932   000453 ca5f04          		jp	z, rxblock1
   933                          
   934   000456 cd7904          		call	fastrecv			;yes, fast speed
   935   000459 3e03            		ld	a, 00000011B			;reset timer
   936   00045b d383            		out	(CTC3), a
   937   00045d 4a              		ld	c, d				;checksum in c
   938   00045e c9              		ret
   939                          
   940                          rxblock1:
   941   00045f 010000          		ld	bc, 0				;no, normal speed
   942   000462 c3dcf6          		jp	RXBLOCK+3
   943                          
   944                          ;--------------------------------------------------
   945                          ; togglebaud
   946                          ;--------------------------------------------------
   947                          togglebaud:	;ld	a, (hispeed)
   948                          		;or	a
   949                          		;ret	z
   950                          
   951   000465 3a8e05          		ld	a, (pokeydiv)
   952   000468 fe28            		cp	SIONORMAL
   953   00046a 3e08            		ld	a, SIOFAST
   954   00046c 2802            		jr	z, togglebaud1
   955   00046e 3e28            		ld	a, SIONORMAL
   956   000470 328e05          togglebaud1:	ld	(pokeydiv), a
   957   000473 c9              		ret
   958                          
   959                          ;--------------------------------------------------
   960                          ; set 4ms watchdog
   961                          ;--------------------------------------------------
   962   000474 f1              irq4ms:		pop	af				;pop irq-addr
   963   000475 b7              		or	a				;clear carry
   964   000476 fb              irq4ms1:	ei
   965   000477 ed4d            		reti
   966                          
   967                          ;--------------------------------------------------
   968                          ; SIO receive 57600 baud
   969                          ;--------------------------------------------------
   970                          fastrecv:
   971   000479 f3              		di
   972   00047a 017404          		ld	bc, irq4ms
   973   00047d ed4316ff        		ld	(CTCVEC+6),bc			;SET VECTOR TO irq4ms ROUTINE
   974   000481 018300          		ld	bc, CTC3			;clear b, load c with CTC3
   975   000484 11a700          		ld	de, 10100111B			;clear d, load e with a7h
   976   000487 ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
   977   000489 ed49            		out	(c), c
   978   00048b fb              		ei
   979                          
   980   00048c db70            fastrecv1:	in	a, (ATARI)			;11
   981   00048e 17              		rla					;4
   982   00048f da8c04          		jp	c, fastrecv1			;10	NEW BYTE IS COMING IF START BIT LOW
   983                          							;14-25 / 7
   984   000492 7a              		ld	a, d				;4
   985   000493 80              		add	a, b				;4
   986   000494 ce00            		adc	a, 0				;7 ACCUMULATE CHECKSUM ATARI STYLE
   987   000496 57              		ld	d, a				;4
   988                          
   989   000497 067f            		ld	b, 07fh				;7
   990   000499 c39e04          		jp	fastrecv2a			;10 = 50
   991                          ;
   992                          ; SERIAL->PARALLEL CONVERSION AT 17,36 MICROSECONDS PER BIT
   993                          ;
   994   00049c f5              fastrecv2:	push	af				;11
   995   00049d f1              		pop	af				;10
   996   00049e 7e              fastrecv2a:	ld	a, (hl)				;7
   997   00049f 7e              		ld	a, (hl)				;7
   998                          
   999   0004a0 db70            		in	a, (ATARI)			;11 CYCLES
  1000   0004a2 17              		rla					; 4 CYCLES
  1001   0004a3 cb18            		rr	b				; 8 CYCLES
  1002   0004a5 38f5            		jr	c, fastrecv2			;12/7 = 70 / 65 cycles
  1003                          
  1004   0004a7 70              		ld	(hl), b				;7 THEN STORE IN MEMORY BUFFER @HL
  1005   0004a8 23              		inc	hl				;6
  1006   0004a9 7c              		ld	a, h				;4
  1007   0004aa fec3            		cp	IOBUFLENHI			;7
  1008   0004ac 3f              		ccf					;4
  1009   0004ad d8              		ret	c				;5 RETURN WITH CARRY SET IF BUFFER FILLED
  1010                          
  1011   0004ae ed59            		out	(c), e				;12 PUT CTC3 IN TIMER MODE, PRESCALE 256
  1012   0004b0 ed49            		out	(c), c				;12 COUNT MOD 256
  1013                          
  1014   0004b2 c38c04          		jp	fastrecv1			;10
  1015                          
  1016                          
  1017                          ;serdumpcpl:	push	hl
  1018                          ;               push	af
  1019                          ;               push	bc
  1020                          ;               push	de
  1021                          ;		ld	d, 255
  1022                          ;		jr	serdump1
  1023                          
  1024                          ;--------------------------------------------------
  1025                          ; RS232 sercmd
  1026                          ;--------------------------------------------------
  1027   0004b5 e5              sercmd:		push	hl
  1028   0004b6 21fbc2          		ld	hl, CFRAME
  1029   0004b9 cddf04          		call	sercr
  1030   0004bc 1801            		jr	serdump2
  1031                          
  1032                          ;--------------------------------------------------
  1033                          ; RS232 dump
  1034                          ;--------------------------------------------------
  1035   0004be e5              serdump:	push	hl
  1036   0004bf f5              serdump2:	push	af
  1037   0004c0 c5              		push	bc
  1038   0004c1 d5              		push	de
  1039                          
  1040   0004c2 1600            		ld	d, 0
  1041                          
  1042   0004c4 7e              serdump1:	ld	a, (hl)
  1043   0004c5 aa              		xor 	d
  1044   0004c6 cdf104          		call	serhex
  1045   0004c9 cdd704          		call	serspace
  1046   0004cc 23              		inc	hl
  1047   0004cd 7c              		ld	a, h
  1048   0004ce fec3            		cp	a, 0c3h
  1049   0004d0 38f2            		jr	c, serdump1
  1050                          
  1051   0004d2 d1              		pop	de
  1052   0004d3 c1              		pop	bc
  1053   0004d4 f1              		pop	af
  1054   0004d5 e1              		pop	hl
  1055   0004d6 c9              		ret
  1056                          
  1057                          ;--------------------------------------------------
  1058                          ; RS232 <space>
  1059                          ;--------------------------------------------------
  1060   0004d7 f5              serspace:	push	af
  1061   0004d8 3e20            		ld	a, ' '
  1062   0004da cd0a05          		call	serout
  1063   0004dd f1              		pop	af
  1064   0004de c9              		ret
  1065                          
  1066                          ;--------------------------------------------------
  1067                          ; RS232 <CR>
  1068                          ;--------------------------------------------------
  1069   0004df f5              sercr:		push	af
  1070   0004e0 3e0d            		ld	a, '\r'
  1071   0004e2 cd0a05          		call	serout
  1072   0004e5 f1              		pop	af
  1073   0004e6 c9              		ret
  1074                          
  1075                          ;--------------------------------------------------
  1076                          ; RS232 output HL in hex
  1077                          ;--------------------------------------------------
  1078   0004e7 7c              seraddr:	ld	a, h
  1079   0004e8 cdf104          		call	serhex
  1080   0004eb 7d              		ld	a, l
  1081   0004ec cdf104          		call	serhex
  1082   0004ef 18e6            		jr	serspace
  1083                          ;--------------------------------------------------
  1084                          ; RS232 output A in hex
  1085                          ;--------------------------------------------------
  1086   0004f1 f5              serhex:		push	af
  1087   0004f2 f5              		push	af
  1088   0004f3 0f              		rrca
  1089   0004f4 0f              		rrca
  1090   0004f5 0f              		rrca
  1091   0004f6 0f              		rrca
  1092   0004f7 cd0005          		call	sernib
  1093   0004fa f1              		pop	af
  1094   0004fb cd0005          		call	sernib
  1095   0004fe f1              		pop	af
  1096   0004ff c9              		ret
  1097                          
  1098   000500 e60f            sernib:		and	0fh
  1099   000502 c630            		add	'0'
  1100   000504 fe3a            		cp	'9' + 1
  1101   000506 3802            		jr	c, sernib1
  1102   000508 c607            		add	7
  1103                          sernib1:
  1104                          ;--------------------------------------------------
  1105                          ; RS232 out	208 T-States
  1106                          ;--------------------------------------------------
  1107                          serout:
  1108   00050a f5              		push	af
  1109   00050b c5              		push	bc
  1110   00050c 47              		ld	b, a
  1111   00050d af              		xor	a
  1112   00050e f3              		di
  1113   00050f d351            		out	(SEROUT), a			;startbit
  1114   000511 cd4105          		call	time19600			;17
  1115                          
  1116   000514 78              		ld	a, b
  1117   000515 0608            		ld	b, 8				;7
  1118   000517 d351            serout1:	out	(SEROUT), a			;11
  1119   000519 cd4105          		call	time19600			;17
  1120   00051c 0f              		rrca					;4
  1121   00051d 10f8            		djnz	serout1				;8
  1122   00051f fb              		ei
  1123   000520 3e01            		ld	a, 1				;7
  1124   000522 d351            		out	(SEROUT), a			;11
  1125   000524 cd4105          		call	time19600			;17
  1126                          
  1127   000527 c1              		pop	bc
  1128   000528 f1              		pop	af
  1129   000529 c9              		ret
  1130                          
  1131                          
  1132                          ;--------------------------------------------------
  1133                          ; RS232 in	208 T-States
  1134                          ;--------------------------------------------------
  1135   00052a c5              serin:		push	bc
  1136   00052b db50            serin2:		in	a, (SERIN)
  1137   00052d 07              		rlca
  1138   00052e 38fb            		jr	c, serin2
  1139                          
  1140   000530 e3              		ex	(sp), hl			;19, 4.75uS
  1141   000531 e3              		ex	(sp), hl			;19  9uS
  1142                          
  1143   000532 0680            		ld	b, 80h
  1144   000534 cd4105          serin1:		call	time19600
  1145   000537 db50            		in	a, (SERIN)
  1146   000539 07              		rlca
  1147   00053a cb18            		rr	b
  1148   00053c 30f6            		jr	nc, serin1
  1149                          
  1150   00053e 78              		ld	a, b
  1151   00053f c1              		pop	bc
  1152   000540 c9              		ret
  1153                          
  1154   000541 0e09            time19600:	ld	c, 9				;4
  1155   000543 0d              time19600a:	dec	c				;4
  1156   000544 20fd            		jr	nz, time19600a			;12/7
  1157   000546 c9              		ret					;10
  1158                          
  1159                          CMDOUT:
  1160   000547 d340            		OUT	(CMDREG),A			;OUTPUT DISK CONTROLLER COMMAND BYTE
  1161   000549 3e0e            CMDT1:		LD	A,14
  1162   00054b 3d              CMDT2:		DEC	A
  1163   00054c 20fd            		JR	NZ,CMDT2			;DELAY 56 MICROSECONDS
  1164   00054e db40            CMDT3:		in	a, (STSREG)
  1165   000550 cb47            		bit	0, a
  1166   000552 20f5            		jr	nz, CMDT1
  1167   000554 c9              		RET
  1168                          
  1169                          ;--------------------------------------------------
  1170                          ; 11 times port:value
  1171                          ;--------------------------------------------------
  1172   000555 5001            portval:	db	050h, 001h			;Bit0	set ATARI DATA
  1173   000557 5101            		db	051h, 001h			;Bit1	set RS232 TX
  1174   000559 8003            		db	080h, 003h			;CTC	Channel 0 reset
  1175   00055b 8010            		db 	080h, 010h			;CTC	Channel 0 interrupt vector
  1176   00055d 8107            		db	081h, 007h			;CTC	Channel 1 reset + set time constant
  1177   00055f 8101            		db	081h, 001h			;CTC	Channel 1 time contant
  1178   000561 8203            		db	082h, 003h			;CTC	Channel 2 reset
  1179   000563 8303            		db	083h, 003h			;CTC	Channel 3 reset
  1180   000565 5701            		db	057h, 001h			;Bit7	ATARI RXD
  1181   000567 3050            		db	030h, 050h			;DRIVE CONTROL reset FDC
  1182   000569 3040            		db	030h, 040h			;DRIVE CONTROL 8Mhz
  1183                          
  1184                          ;--------------------------------------------------
  1185                          ; variables and data structure
  1186                          ;--------------------------------------------------
  1187                          ;
  1188                          ; 32 bytes for disktab
  1189                          ; 7 commands copied in from DISKTAB, 3x7=21
  1190                          ; 2 commands added '?' and 0xDD (setDirectSector)
  1191                          ;
  1192   00056b 0000000000000000disktab:	dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
  1193   00057b 0000000000000000		dw	0, 0, 0, 0, 0, 0, 0, 0
                0000000000000000
  1194                          
  1195                          ;
  1196                          ; direct MSDOS sector for each drive
  1197                          ;
  1198   00058b 0000            dsector:	db	0, 0
  1199   00058d 00              direct:		db	0
  1200                          
  1201   00058e 28              pokeydiv:	db	SIONORMAL
  1202   00058f 00              hispeed:	db	0
  1203                          
  1204   000590 ff              drive:		db	255
  1205   000591 ff              track:		db	255
  1206   000592 0000            secptr:		dw	0
  1207                          
  1208   000594 56fe            skewtab:	dw	SKEWSD
  1209   000596 c8fe            		dw	SKEW13
  1210   000598 68fe            		dw	SKEWDD
  1211   00059a e2fe            		dw	SKEW17
  1212                          
  1213   00059c 00              dcb:		db	0				;DISK OPERATION CODE
  1214   00059d 00              		db	0				;DRIVE# (WITH SIDE# IN BIT 7)
  1215   00059e 00              		db	0				;TRACK#
  1216   00059f 00              		db	0				;SECTOR#
  1217   0005a0 0000            		dw	0				;READ/WRITE POINTER
  1218   0005a2 0000            		dw	0				;AUXILLIARY PARAMETERS (2 BYTES)
  1219   0005a4 00              		db	0				;OPERATION COMPLETION STATUS
  1220                          
  1221   0005a5 000000000000    id:		dw	0, 0, 0
  1222                          
  1223                          sallycode	equ	ASMPC				;append Sally code here
  1224                          
  1225                          
