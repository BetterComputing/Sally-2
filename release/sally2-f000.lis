sally2-f000.asm:
     1                          serin		equ	03
     2                          serout		equ	serin+3
     3                          serhex		equ	serout+3
     4                          sercmd		equ	serhex+3
     5                          serdump		equ	sercmd+3
     6                          serrecv		equ	serdump+3
     7                          ;
     8                          
     9                          		ORG	0f000h
    10                          ;
    11                          ;
    12                          ;
    13                          		INCLUDE	"EQUS.MAC"
EQUS.MAC:
     1                          KEYBUF		equ	0ff00h		;16 byte keyboard input fifo
     2                          CTCVEC		equ	0ff10h		;8 word interrupt vector table
     3                          ;
     4                          ;
     5                          ;
     6                          PRINTER		equ	020h		;PRINTER OUTPUT/INPUTS
     7                          LATCH		equ	030h		;DRIVE CONTROL LATCH
     8                          WD179X		equ	040h		;WD TYPE DISK CONTROLLER
     9                          ;
    10                          ;	EQUATES FOR DISK CONTROLLER PORTS AND COMMAND CODES
    11                          ;
    12                          STSREG		equ	WD179X+0	;STATUS REGISTER
    13                          CMDREG		equ	WD179X+0	;COMMAND REGISTER
    14                          TRKREG		equ	WD179X+1	;TRACK REGISTER
    15                          SECREG		equ	WD179X+2	;SECTOR REGISTER
    16                          DATREG		equ	WD179X+3	;DATA REGISTER;
    17                          
    18                          SERIN		equ	050h		;RS232 SERIAL INPUT
    19                          ;
    20                          ATROUT		equ	050h		;ATARI SERIAL OUTPUT
    21                          SEROUT		equ	051h		;RS232 SERIAL OUTPUT
    22                          BANKSW		equ	052h		;ROM BANKSWITCH BIT
    23                          STROBE		equ	053h		;PRINTER STROBE
    24                          INDXCLR		equ	054h		;INDEX CONTROL FLOP CLEAR
    25                          DTR		equ	055h		;DTR OUTPUT CONTROL
    26                          INDXSET		equ	056h		;INDEX CONTROL FLOP SET
    27                          CDMUX		equ	057h		;ATARI CMD/DATA MUX CONTROL
    28                          ;
    29                          ATARI		equ	070h		;ATARI INPUT BITS PORT
    30                          CTC0		equ	080h		;ZILOG COUNTER/TIMER
    31                          CTC1		equ	081h
    32                          CTC2		equ	082h
    33                          CTC3		equ	083h
    34                          ;
    35                          NULL		equ	000h
    36                          CR		equ	00dh
    37                          LF		equ	00ah
    38                          ;
    39                          
sally2-f000.asm:
    14                          		INCLUDE	"GLOBAL.MAC"
GLOBAL.MAC:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	GLOBAL VARIABLES FOR ATARI Z80 ROM		*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          glbvars		equ	0ff20h
     8                          ;
     9                          ;	... GLOBAL VARIABLES FOR PHYSICAL DISK HANDLER ...
    10                          ;
    11                          ;DRVTAB:	DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    12                          ;		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    13                          ;RATES:		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    14                          ;UNIT:		DEFB	0		;CURRENTLY SELECTED DISK#
    15                          ;TRACK:		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    16                          ;DRVOFF:	DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    17                          ;OUTCPY:	DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    18                          ;PERIOD:	DEFW	0		;DISK SPIN PERIOD
    19                          ;HLDTIM:	DEFB	50		;HEAD LOAD DELAY
    20                          ;RWMAX:		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    21                          ;		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    22                          
    23                          DRVTAB:		equ	glbvars		;HEAD POSITIONS FOR 4 DRIVES
    24                          					;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    25                          RATES:		equ	DRVTAB+8	;SETTLING DELAYS / STEP RATES TABLE
    26                          UNIT:		equ	RATES+4		;CURRENTLY SELECTED DISK#
    27                          TRACK:		equ	UNIT+1		;TRACK POSITION OF SELECTED DRIVE
    28                          DRVOFF:		equ	TRACK+1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    29                          OUTCPY:		equ 	DRVOFF+1	;COPY OF DISK CONTROL LATCH
    30                          PERIOD:		equ	OUTCPY+1	;DISK SPIN PERIOD
    31                          HLDTIM:		equ	PERIOD+2	;HEAD LOAD DELAY
    32                          RWMAX:		equ	HLDTIM+1	;MAX NUMBER OF READ/WRITE RETRIES
    33                          EXPANSION	equ	RWMAX+1		;ROOM FOR EXPANSION
    34                          ;
    35                          ;
    36                          ;	... GLOBAL VARIABLES FOR ATARI HANDLER ...
    37                          ;
    38                          ;IDPTR:		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    39                          ;FSMVEC:	DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    40                          ;EXTVEC:	DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    41                          ;NEWLIN:	DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    42                          ;PSMSG:		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    43                          ;PMASKS:	DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    44                          ;		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    45                          ;FMTPTR:	DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    46                          ;PBASE:		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    47                          ;PSIZE:		DEFW	4095		;MAX BUFFER INDEX OFFSET
    48                          ;
    49                          ;glbsize	equ	$-glbvars		;length of initialized variables
    50                          ;        DEFB    73h			; **** Exists in original ROM? ****
    51                          IDPTR:		equ	EXPANSION+4	;POINTER TO DEVICE ID TABLE
    52                          FSMVEC:		equ 	IDPTR+2		;POINTER FOR ATARI TASK STATE MACHINE
    53                          EXTVEC:		equ	FSMVEC+2	;POINTER FOR EXTRA TASK PROCESSOR
    54                          NEWLIN:		equ	EXTVEC+2	;PRINTER NEWLINE CHARACTERS
    55                          PSMSG:		equ	NEWLIN+5	;PRINTER STATUS FRAME
    56                          PMASKS:		equ	PSMSG+4		;MASK ALL BITS BUT 'BUSY'
    57                          					;COMPARE TO ZERO FOR READY
    58                          FMTPTR:		equ	PMASKS+2	;POINTER TO STANDARD FORMAT TABLES
    59                          PBASE:		equ	FMTPTR+2	;PUT PRINT BUFFER AFTER HERE
    60                          PSIZE:		equ	PBASE+2		;MAX BUFFER INDEX OFFSET
    61                          
    62                          glbsize		equ	$-glbvars	;length of initialized variables
    63                          ;
    64                          ;
    65                          ;	*** UNINITIALIZED SCRATCH VARIABLES COME AFTER HERE ***
    66                          ;
    67                          PCOUNT:		EQU 	PSIZE+2		;BYTECOUNT FOR BUFFER
    68                          PINP:		EQU 	PCOUNT+2	;INPUT OFFSET
    69                          POUT:		EQU 	PINP+2		;OUTPUT OFFSET
    70                          CMDFLG:		EQU 	POUT+2		;COMMAND FRAME READY FLAG FROM IRQ
    71                          DMATRIX:	EQU 	CMDFLG+1    	;DRIVE POOP TABLES
    72                          OLDPTR:		EQU 	DMATRIX+64	;POINTER TO FIRST DRIVE ACCESSED
    73                          DKIOCB:		EQU 	OLDPTR+2	;DISK I/O COMMAND BLOCK
    74                          DRWCMD:		EQU 	DKIOCB+16	;R/W COMMAND FROM ATARI TO 'DISKIO'
    75                          LOGSIZ:		EQU 	DRWCMD+1	;LOGICAL SECTOR LENGTH FOR XFER
    76                          IDBUF:		EQU	LOGSIZ+2	;BUFFER FOR ID MARK READS
    77                          IOPTR:		EQU 	IDBUF+8		;ATARI BLOCK INPUT POINTER
    78                          VFLAG:		EQU 	IOPTR+2		;VERIFY FLAG FOR DISK WRITES
    79                          
    80                          ;
    81                          ;
    82                          ;	... VARIABLES FOR DISK FORMAT FUNCTION ...
    83                          ;
    84                          FMTSTUFF	EQU	VFLAG+1
    85                          FRMPTR:		EQU 	VFLAG+1			;POINTER TO FORMAT DATA TABLE
    86                          SKWPTR:		EQU 	FRMPTR+2		;POINTER TO SKEW TABLE
    87                          NSECTS:		EQU 	SKWPTR+2		;NUMBER OF SECTORS
    88                          TRKSIZ:		EQU 	NSECTS+1		;TRACK LENGTH IN BYTES
    89                          FMTLEN		EQU	(TRKSIZ+2)-FMTSTUFF
    90                          
    91                          sides:		EQU 	TRKSIZ+2		;copy of 'nsides' for drive#
    92                          tracks:		EQU 	sides+1			;copy of 'ntrks' for drive#
    93                          SEQNUM:		EQU 	tracks+1		;TEMP SECTOR SEQUENCE NUMBER
    94                          SEQPTR:		EQU 	SEQNUM+2		;TEMP ERROR LOG TABLE POINTER
    95                          TRKPTR:		EQU 	SEQPTR+2		;POINTER TO START OF TRACK IMAGE
    96                          
    97                          ;
    98                          ;	... LOCAL VARIABLES FOR DISK HANDLER ...
    99                          ;
   100                          CMDBYT:		EQU 	TRKPTR+2		;COMMAND BYTE FOR READS/WRITES
   101                          RWTRY:		EQU	CMDBYT+1		;READ/WRITE RETRY COUNT
   102                          TICKS:		EQU	RWTRY+1			;FREE RUNNING MILISECOND COUNTER
   103                          DRVTMR:		EQU	TICKS+2			;DISK ACTIVITY TIMER
   104                          ;
   105                          ;
   106                          ;
   107                          ;
   108                          IOBUFF		EQU	0C100H			;ATARI I/O BUFFER
   109                          LEN		EQU	512
   110                          ;
   111                          ;TRKBUF		EQU	IOBUFF+LEN		;TRACK BUFFER FOR READS
   112                          ;
   113                          
   114                          ;
   115                          ;
   116                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
   117                          ;
   118                          NTRKS	EQU	0		;NUMBER OF TRACKS
   119                          STEPRT	EQU	1		;STEP RATE
   120                          NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
   121                          NSIDES	EQU	4		;NUMBER OF SIDES
   122                          MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
   123                          SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
   124                          DSKBITS	EQU	8		;MISC NAUGHTY BITS
   125                          SPARE0	EQU	9
   126                          SPARE1	EQU	10
   127                          SPARE2	EQU	11
   128                          
   129                          CMDSTS	EQU	12		;COMMAND STATUS
   130                          HDWSTS	EQU	13		;HARDWARE STATUS
   131                          
   132                          FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
   133                          SPARE3	EQU	15
   134                          ;
   135                          ;
   136                          ;	EQUATES FOR BITS IN 'MEDIA' BYTE
   137                          ;
   138                          SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
   139                          DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
   140                          ;
   141                          ;
   142                          ;	EQUATES FOR BITS IN 'DSKBITS' BYTE
   143                          ;
   144                          PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
   145                          ;
   146                          ;
   147                          ;	EQUATES FOR BITS IN 'CMDSTS' BYTE
   148                          ;
   149                          BADCMD	EQU	0		;BAD COMMAND FRAME BIT
   150                          BADDAT	EQU	1		;BAD DATA FRAME BIT
   151                          BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
   152                          WRPROT	EQU	3		;WRITE PROTECTED BIT
   153                          ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
   154                          SEC256	EQU	5		;LONG/SHORT SECTOR BIT
   155                          ;
   156                          ;
   157                          ;	EQUATES FOR BITS IN 'FLAGS' BYTE
   158                          ;
   159                          FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
   160                          CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
   161                          
sally2-f000.asm:
    15                          
    16                          MONITOR		equ	$
    17   000000 c31b00          		jp	RESTART
    18   000003 c3de03          		jp	MINIMON		;MONITOR WARM ENTRY POINT
    19   000006 c33506          CSV:		jp	CONST		;CONSOLE STATUS
    20   000009 c34006          CIV:		jp	CONIN		;CONSOLE INPUT
    21   00000c c35006          COV:		jp	CONOUT		;CONSOLE OUTPUT
    22   00000f c32200          DISKV:		jp	DISKDVR		;DISK HANDLER
    23   000012 c3dc04          LISTV:		jp	CENTOUT		;PARALLEL PRINTER OUT
    24   000015 c3eb04          		jp	CENTRDY		;PARALLEL PRINTER STATUS
    25   000018 c31506          RENEW:		jp	CINIT2		;CONSOLE PORT INITAILZATION
    26                          ;
    27                          ;
    28                          ;
    29                          RESTART:
    30   00001b f3              		di
    31   00001c af              		xor	A
    32   00001d d352            		out	(BANKSW),A
    33   00001f c30000          		jp	0		;JUMP TO ROM
    34                          ;
    35                          ;
    36                          ;
    37                          		include	"DISKIO.MAC"
DISKIO.MAC:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	DISK I/O DRIVER FOR ATARI BOX.	18-FEB-82	*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          ;
     8                          ;
     9                          RIDCMD	EQU	11000000B	;READ ID COMMAND
    10                          RDCMD	EQU	10000000B	;READ COMMAND
    11                          WRTCMD	EQU	10100000B	;WRITE COMMAND
    12                          FINCMD	EQU	11010000B	;FORCE INTERRUPT COMMAND
    13                          SKCMD	EQU	00010000B	;SEEK COMMAND
    14                          RSTCMD	EQU	00000000B	;RESTORE COMMAND
    15                          STEPOUT	EQU	01100000B	;STEP OUT COMMAND
    16                          STEPIN	EQU	01000000B	;STEP IN COMMAND
    17                          HLOAD	EQU	00000000B	;HEAD LOAD BIT FOR TYPE 1 COMMANDS
    18                          ;
    19                          ;
    20                          NMIVEC	EQU	0066H
    21                          ;
    22                          ;
    23                          ;
    24                          ;
    25                          ;	... DATA STRUCTURE FOR DISK I/O CONTROL BLOCK ...
    26                          ;
    27                          DSKOP	EQU	0		;DISK OPERATION CODE
    28                          DSKDRV	EQU	1		;DRIVE# (WITH SIDE# IN BIT 7)
    29                          DSKTRK	EQU	2		;TRACK#
    30                          DSKSEC	EQU	3		;SECTOR#
    31                          DSKPTR	EQU	4		;READ/WRITE POINTER
    32                          DSKAUX	EQU	6		;AUXILLIARY PARAMETERS (2 BYTES)
    33                          DSKSTS	EQU	8		;OPERATION COMPLETION STATUS
    34                          ;
    35                          ;
    36                          ;	... DISK DRIVER OPERATION CODE DEFINITIONS ...
    37                          ;
    38                          TSTRDY	EQU	0		;SELECT DRIVE AND TEST READY
    39                          GETSEC	EQU	1		;READ SECTOR
    40                          PUTSEC	EQU	2		;WRITE SECTOR
    41                          GETID	EQU	3		;READ ID MARK
    42                          ;
    43                          ;
    44                          ;
    45                          DISKDVR:
    46   000022 cdb603          	CALL	STOPTMR		;KILL DISK TIMER INTERRUPT FROM CTC3
    47   000025 dd7e00          	LD	A,(IX+DSKOP)
    48   000028 b7              	OR	A
    49   000029 2845            	JR	Z,TESTDRV	;JUMP IF TEST READY OPERATION
    50   00002b 0680            	LD	B,RDCMD
    51   00002d 3d              	DEC	A
    52   00002e 2873            	JR	Z,SETSSO	;JUMP IF DISK READ OPERATION
    53   000030 06a0            	LD	B,WRTCMD
    54   000032 3d              	DEC	A
    55   000033 286e            	JR	Z,SETSSO	;JUMP IF DISK WRITE OPERATION
    56   000035 3d              	DEC	A
    57   000036 2857            	JR	Z,READID	;JUMP IF DISK ID READ OPERATION
    58   000038 dd3608ff        	LD	(IX+DSKSTS),255	;ELSE SET ALL ERROR BITS AND RETURN
    59                          
    60                          ACTIVON:
    61   00003c f3              	DI
    62   00003d 3ea7            	LD	A,10100111B
    63   00003f d383            	OUT	(CTC3),A	;PUT CTC3 IN TIMER MODE, PRESCALE 256
    64   000041 af              	XOR	A
    65   000042 d383            	OUT	(CTC3),A	;COUNT MOD 256
    66   000044 3d              	DEC	A
    67                          ;	LD	A, 140
    68   000045 32c9ff          	LD	(DRVTMR),A	;STOP DRIVES AFTER 255 INTERRUPTS
    69   000048 215000          	LD	HL,ACTIVTY
    70   00004b 2216ff          	LD	(CTCVEC+6),HL	;SET VECTOR TO ACTIVITY-CHECK ROUTINE
    71   00004e fb              	EI
    72   00004f c9              	RET
    73                          
    74                          ACTIVTY:
    75   000050 f5              	PUSH	AF
    76   000051 3ac9ff          	LD	A,(DRVTMR)
    77   000054 3d              	DEC	A
    78   000055 32c9ff          	LD	(DRVTMR),A
    79   000058 200a            	JR	NZ,ACTV2	;EXIT IF 4 SECONDS NOT ELAPSED
    80                          
    81   00005a cd6800          	call	shutdown
    82   00005d 3e21            	LD	A,00100001B
    83   00005f d383            	OUT	(CTC3),A	;RESET INTERRUPT BUT KEEP COUNTER GOING
    84   000061 322eff          	LD	(DRVOFF),A	;SET 'DRVOFF' FLAG TO NON-ZERO VALUE
    85                          
    86   000064 f1              ACTV2:	POP	AF
    87   000065 fb              	EI
    88   000066 ed4d            	RETI
    89                          ;
    90                          ;
    91                          ;
    92                          shutdown:
    93   000068 cd2802          	CALL	resetfdc
    94                          ;	LD	a, (OUTCPY)
    95                          ;	AND	a, 11110000b
    96                          ;	OR	a, 01000000b
    97   00006b 3e40            	LD	a, 040h
    98   00006d d330            	OUT	(LATCH),a
    99   00006f c9              	ret
   100                          
   101                          ;	IN	A,(TRKREG)
   102                          ;	OUT	(DATREG),A
   103                          ;	LD	A,SKCMD
   104                          ;	OUT	(CMDREG),A	;DUMMY SEEK TO UNLOAD THE HEADS
   105                          ;	LD	A,(OUTCPY)
   106                          ;	AND	11110000B	;DESELECT ALL 4 DRIVES
   107                          ;	OR	00010000B
   108                          ;	OUT	(LATCH),A	;RESET FDC
   109                          ;	AND	11101111B
   110                          ;	OUT	(LATCH),A
   111                          ;	ret
   112                          
   113                          ;
   114                          ;
   115                          ;
   116                          ;
   117                          ;
   118                          ;	... DRIVE READY/STATUS TEST FUNCTION ...
   119                          ;
   120                          ;
   121                          TESTDRV:
   122   000070 cd0a01          	CALL	SELECT		;SELECT DRIVE FOR SPIN/STATUS CHECK
   123   000073 cb7f            	BIT	7,A
   124   000075 2805            	JR	Z,TDRV2		;JUMP IF DRIVE READY INDICATED
   125                          
   126   000077 2130ff          	LD	HL,PERIOD	;ELSE SET PERIOD TO ZERO
   127   00007a 3600            	LD	(HL),0
   128                          
   129   00007c dd7708          TDRV2:	LD	(IX+DSKSTS),A	;RETURN TYPE 1 STATUS IN 'DSKSTS'
   130   00007f 3a2fff          	LD	A,(OUTCPY)
   131   000082 dd7706          	LD	(IX+DSKAUX),A	;RETURN CONTROL BITS IN AUX BYTE #1
   132   000085 3a30ff          	LD	A,(PERIOD)
   133   000088 dd7707          	LD	(IX+DSKAUX+1),A	;RETURN PERIOD IN AUX BYTE #2
   134   00008b cd3c00          	CALL	ACTIVON		;START DISK ACTIVITY MONITOR AGAIN
   135   00008e c9              	RET
   136                          ;
   137                          ;
   138                          ;
   139                          ;	... READ ID MARK FUNCTION ...
   140                          ;
   141                          READID:
   142   00008f dd360606        	LD	(IX+DSKAUX),6
   143   000093 dd360700        	LD	(IX+DSKAUX+1),0
   144   000097 06c0            	LD	B,RIDCMD
   145   000099 cda300          	CALL	DISK		;READ 6 BYTE ID RECORD
   146   00009c 3a2fff          	LD	A,(OUTCPY)
   147   00009f dd7706          	LD	(IX+DSKAUX),A	;RETURN DRIVE CONTROL LATCH BYTE
   148   0000a2 c9              	RET
   149                          ;
   150                          ;
   151                          ;
   152                          ;	... SECTOR READ/WRITE FUNCTION ...
   153                          ;
   154                          SETSSO:
   155                          ;	BIT	7,(IX+DSKDRV)	;TEST SIDE# BIT IN DRIVE PARAM
   156                          ;	JR	Z,DISK
   157                          ;	SET	1,B		;SET 'SSO' CONTROL BIT IN 1797 CMD
   158                          DISK:
   159   0000a3 78              	LD	A,B
   160   0000a4 32c5ff          	LD	(CMDBYT),A	;STORE 1797 COMMAND PASSED IN B
   161   0000a7 cd0a01          	CALL	SELECT		;SELECT DRIVE/SIDE FOR DISK OPERATION
   162   0000aa cb7f            	BIT	7,A
   163   0000ac 2052            	JR	NZ,DISKX	;EXIT IF NOT READY
   164                          
   165   0000ae 3a2dff          	LD	A,(TRACK)
   166   0000b1 feff            	CP	255
   167   0000b3 2805            	JR	Z,DISK2
   168   0000b5 ddbe02          	CP	(IX+DSKTRK)	;TEST IF ALREADY AT DESIRED TRACK
   169   0000b8 2805            	JR	Z,DISK3		;SKIP SEEK PART IF SO
   170                          
   171   0000ba cde901          DISK2:	CALL	SEEKTRK		;GO LOOKING FOR TRACK# IN IOCB
   172   0000bd 2041            	JR	NZ,DISKX	;EXIT IF HEAD POSITIONING ERROR
   173                          
   174   0000bf 3a12ff          DISK3:	LD	A,(CTCVEC+2)
   175   0000c2 3c              	INC	A		;LOOP TILL TX CTC TURNS ITSELF OFF
   176   0000c3 20fa            	JR	NZ,DISK3	;(INTERRUPT VECTOR LSB SET=FFH)
   177                          
   178   0000c5 f3              	DI
   179   0000c6 3e03            	LD	A,00000011B
   180   0000c8 d380            	OUT	(CTC0),A	;DISABLE RX INTERRUPT FROM CTC0
   181   0000ca 3e27            	LD	A,00100111B
   182   0000cc d382            	OUT	(CTC2),A	;DISABLE CTC2 AND ALSO INIT FOR
   183   0000ce 3e3d            	LD	A,61		; CLOCK SOURCE FOR WATCHDOG TIMER
   184   0000d0 d382            	OUT	(CTC2),A
   185   0000d2 219303          	LD	HL,WATCHDOG	;STORE NEW CTC3 VECTOR FOR SAFETY
   186   0000d5 2216ff          	LD	(CTCVEC+6),HL
   187                          
   188   0000d8 3a33ff          	LD	A,(RWMAX)
   189   0000db 32c6ff          	LD	(RWTRY),A	;SET READ/WRITE RETRY COUNT
   190   0000de dd7e03          DISK4:	LD	A,(IX+DSKSEC)	;OUTPUT SECTOR NUMBER FOR READ/WRITE
   191   0000e1 d342            	OUT	(SECREG),A
   192   0000e3 dd7e02          	LD	A,(IX+DSKTRK)
   193   0000e6 d341            	OUT	(TRKREG),A	;DITTO FOR TRACK NUMBER
   194   0000e8 3ac5ff          	LD	A,(CMDBYT)
   195   0000eb d340            	OUT	(CMDREG),A	;START 1791 WORKING ON W/R COMMAND
   196   0000ed cda302          	CALL	RWDISK		;DO HALT/NMI DISK DATA TRANSFER
   197   0000f0 280e            	JR	Z,DISKX		;EXIT IF NO DISK ERRORS
   198   0000f2 f5              	PUSH	AF
   199   0000f3 cdfc02          	CALL	RECOVER		;DO READ/WRITE ERROR RECOVERY ROUTINE
   200   0000f6 c1              	POP	BC
   201   0000f7 2006            	JR	NZ,DISK5	;SKIP RETRY IF IRRECOVERABLE ERROR
   202   0000f9 21c6ff          	LD	HL,RWTRY
   203   0000fc 35              	DEC	(HL)
   204   0000fd 20df            	JR	NZ,DISK4	;ELSE DECREMENT RETRY COUNT TILL=0
   205   0000ff 78              DISK5:	LD	A,B		;THEN LOAD A WITH ERROR STATUS
   206   000100 dd7708          DISKX:	LD	(IX+DSKSTS),A	;SAVE COMPLETION STATUS CARRIED IN ACC
   207   000103 cd1800          	CALL	RENEW		;RESTART ATARI AND RS232 INTERRUPTS
   208   000106 cd3c00          	CALL	ACTIVON		;START DISK ACTIVITY TIMER
   209   000109 c9              	RET
   210                          ;
   211                          ;
   212                          ;
   213                          ;	... SELECT DRIVE# PASSED @IX AND RETURN TYPE 1 STATUS ...
   214                          ;
   215                          SELECT:
   216   00010a dd7e01          	LD	A,(IX+DSKDRV)
   217   00010d cbbf            	RES	7,A		;CLEAR SIDE SELECT BIT FROM DRIVE#
   218   00010f fe04            	CP	4
   219   000111 3073            	JR	NC,SELX		;EXIT IF INVALID DRIVE NUMBER
   220                          
   221   000113 0600            	LD	B,0
   222   000115 4f              	LD	C,A		;LOAD BC WITH NEW DRIVE# TO BE SELECTED
   223   000116 212cff          	LD	HL,UNIT
   224   000119 96              	SUB	(HL)		;COMPARE NEW AND OLD SELECT CODES AND
   225   00011a f5              	PUSH	AF		; SAVE RESULT STATUS ON STACK
   226   00011b 50              	LD	D,B
   227   00011c 5e              	LD	E,(HL)		;LOAD DE WITH LAST SELECTED DRIVE#
   228   00011d 71              	LD	(HL),C		;THEN STORE NEW UNIT# FROM C
   229                          
   230   00011e 2120ff          	LD	HL,DRVTAB
   231   000121 19              	ADD	HL,DE		;INDEX INTO TABLE BY CURRENT DRIVE#
   232   000122 3a2dff          	LD	A,(TRACK)
   233   000125 77              	LD	(HL),A		;REMEMBER CURENT TRACK NUMBER
   234   000126 1e04            	LD	E,4
   235   000128 19              	ADD	HL,DE		;NOW INDEX TO CONTROL BYTE FOR UNIT
   236   000129 3a2fff          	LD	A,(OUTCPY)
   237   00012c 77              	LD	(HL),A		;REMEMBER CURRENT DENSITY/TYPE
   238                          
   239   00012d 2120ff          	LD	HL,DRVTAB
   240   000130 09              	ADD	HL,BC		;INDEX INTO TABLE BY NEW DRIVE#
   241   000131 7e              	LD	A,(HL)
   242   000132 322dff          	LD	(TRACK),A	;STORE CURRENT (ASSUMED) HEAD POSITION
   243   000135 19              	ADD	HL,DE
   244   000136 d1              	POP	DE		;POP UNIT# COMPARE RESULT INTO D
   245   000137 7e              	LD	A,(HL)		;GET CURRENT SELECT/TYPE BITS FOR DRIVE
   246   000138 b7              	OR	A
   247   000139 201f            	JR	NZ,SEL5
   248                          ;
   249                          ;	ARRIVE HERE ON INITIAL DRIVE SELECT
   250                          ;
   251   00013b 219101          	LD	HL,SELTAB
   252   00013e 09              	ADD	HL,BC		;ELSE INDEX INTO TABLE OF SELECT BITS
   253   00013f 7e              	LD	A,(HL)
   254   000140 d330            	OUT	(LATCH),A	;OUTPUT NEW DRIVE SELECTS
   255   000142 f5              	PUSH	AF
   256   000143 cd9501          	CALL	SPIN		;NOW SPIN UP TO TEST READY
   257   000146 c1              	POP	BC
   258   000147 fede            	CP	222		;ERROR IF SLOWER THAN 222 MS
   259   000149 303b            	JR	NC,SELX
   260                          
   261   00014b cbf0            	SET	6,B
   262   00014d feb5            	CP	181		;MINI FLOPPY IF BETWEEN 222 AND 181 MS
   263   00014f 3006            	JR	NC,SEL4
   264                          
   265   000151 cbb0            	RES	6,B
   266   000153 fe99            	CP	153		;BIG FLOPPY IF BETWEEN 181 AND 153 MS
   267   000155 382f            	JR	C,SELX
   268                          
   269   000157 78              SEL4:	LD	A,B		;GET CONTROL BITS INTO A
   270   000158 1600            	LD	D,0		;SET D=0 TO DISABLE HEAD LOAD DELAY
   271                          ;
   272                          ;	ARRIVE HERE WITH DENSITY/TYPE/SELECT BITS IN ACC
   273                          ;
   274   00015a cbaf            SEL5:	RES	5,A		;RESET SIDE SELECT BIT UNCONDITIONALLY
   275   00015c ddcb017e        	BIT	7,(IX+DSKDRV)
   276   000160 2802            	JR	Z,SEL5A		;JUMP IF SELECTING SIDE# ZERO
   277   000162 cbef            	SET	5,A		;ELSE SET SIDE SELECT BIT IN ACC
   278   000164 d330            SEL5A:	OUT	(LATCH),A
   279   000166 322fff          	LD	(OUTCPY),A	;OUTPUT AND SAVE NEW PATTERN
   280   000169 14              	INC	D
   281   00016a 15              	DEC	D
   282   00016b c48403          	CALL	NZ,HLDWAIT	;DO HEAD LOAD DELAY IF NEW DRIVE SELECT
   283   00016e db41            	IN	A,(TRKREG)	;get status
   284   000170 d343                    OUT	(DATREG),A
   285   000172 3e10                    LD	A,SKCMD
   286   000174 cd7403          	CALL	CMDOUT
   287   000177 cd7c03          	CALL	FORCE
   288   00017a cb6f            	BIT	5,A		;TEST 1797 HEAD-LOAD STATUS
   289   00017c c0              	RET	NZ		;EXIT IF LOADED AND MOTORS ON
   290                          
   291   00017d cd9501          	CALL	SPIN		;ELSE LET THINGS SPIN A BIT
   292   000180 b7              	OR	A		;TEST PERIOD AFTER RE-SPINUP
   293   000181 2803            KLUDGE:	JR	Z,SELX		;ERROR IF DISK REFUSES TO TURN
   294                          
   295   000183 c37c03          	JP	FORCE		;ELSE RETURN TYPE 1 STATUS THIS TIME
   296                          ;	RET
   297                          
   298                          ;
   299                          ;	ARRIVE HERE IF DRIVE CANNOT BE SELECTED AT ALL
   300                          ;
   301   000186 af              SELX:	XOR	A		;TURN OFF EVERYTHING
   302   000187 322fff          	LD	(OUTCPY),A
   303   00018a 3e40            	LD	a, 040h		;TURN OFF -> 8Mhz
   304   00018c d330            	OUT	(LATCH),A
   305                          ;	LD	A,10000000B
   306   00018e 07              	rlca			;40h --> 80h
   307   00018f b7              	OR	A		;RETURN WITH NOT-READY ERROR
   308   000190 c9              	RET
   309                          
   310                          
   311                          ;
   312                          ;
   313                          ;
   314                          ;
   315   000191 01              SELTAB:	DEFB	00000001B
   316   000192 02              	DEFB	00000010B
   317   000193 04              	DEFB	00000100B
   318   000194 08              	DEFB	00001000B
   319                          ;
   320                          ;
   321                          ;
   322                          SPIN:
   323                          ;	XOR	A
   324                          ;	OUT	(INDXSET),A
   325                          ;	INC	A
   326                          ;	OUT	(INDXCLR),A	;SET TO ENABLE NORMAL INDEX PULSES
   327                          
   328                          ;	IN	A,(TRKREG)
   329                          ;	OUT	(DATREG),A
   330                          ;	LD	A,SKCMD+HLOAD
   331                          ;	OUT	(CMDREG),A	;DO DUMMY SEEK TO START THE MOTORS
   332                          ;	CALL	CMDOUT
   333                          ;	CALL	FORCE
   334   000195 cda503          	CALL	STARTMR		;THEN RE-PROGRAM CTC1 FOR TIMER
   335                          ;	CALL	FORCE
   336   000198 3ed0            	LD	a, FINCMD
   337   00019a cd7403          	CALL	CMDOUT
   338   00019d 4f              	LD	C,A		;SAVE CURRENT TYPE 1 DISK STATUS
   339   00019e 0606            	LD	B,6		;SET FOR 6 DISK REVOLUTIONS
   340   0001a0 210000          	LD	HL,0
   341   0001a3 22c7ff          	LD	(TICKS),HL	;RESET MILLISECOND COUNTER FOR IRQ
   342   0001a6 ed5bc7ff        SPIN2:	LD	DE,(TICKS)
   343   0001aa cdd501          	CALL	EDGE		;WAIT FOR INDEX INPUT TO CHANGE
   344   0001ad 3821            	JR	C,SPIN3		;ABORT IF TIMEOUT
   345   0001af cdd501          	CALL	EDGE		;WAIT FOR CHANGE BACK AGAIN
   346   0001b2 381c            	JR	C,SPIN3
   347   0001b4 10f0            	DJNZ	SPIN2		;LET 6 REVOLUTIONS PASS
   348                          
   349   0001b6 2ac7ff          	LD	HL,(TICKS)	;READ TIME AT END OF REVOLUTION
   350   0001b9 b7              	OR	A
   351   0001ba ed52            	SBC	HL,DE		;COMPUTE INDEX PERIOD IN MILLISECONDS
   352                          ;	XOR	A
   353                          ;	OUT	(INDXCLR),A
   354                          ;	INC	A
   355                          ;	OUT	(INDXSET),A	;DISABLE INDEX PULSES AFTER THIS
   356                          SPIN5:
   357                          	;call	FORCE
   358   0001bc db40            	in	a, (STSREG)
   359   0001be cb7f            	bit	7, a
   360   0001c0 20fa            	jr	nz, SPIN5
   361   0001c2 cdb603          SPIN6:	CALL	STOPTMR		;KILL INTERRUPT FROM CTC3
   362   0001c5 7d              	LD	A,L
   363   0001c6 24              	INC	H
   364   0001c7 25              	DEC	H
   365   0001c8 2802            	JR	Z,SPIN4		;A HOLDS VALID PERIOD IF H=0
   366   0001ca 3eff            	LD	A,255
   367   0001cc 3230ff          SPIN4:	LD	(PERIOD),A
   368   0001cf c9              	RET
   369                          
   370   0001d0 cd2802          SPIN3:	CALL	resetfdc
   371   0001d3 18ed            	JR	SPIN6
   372                          ;
   373                          ;
   374                          ;
   375                          EDGE:
   376                          ;	CALL	FORCE		;GET 1797 TYPE 1 STATUS
   377   0001d5 db40            	IN	a, (STSREG)
   378   0001d7 a9              	XOR	C
   379   0001d8 e602            	AND	00000010B	;CHECK FOR CHANGE IN INDEX BIT
   380   0001da 2009            	JR	NZ,EDGE2	;EXIT IF BIT CHANGES
   381   0001dc 3ac8ff          	LD	A,(TICKS+1)
   382   0001df fe08            	CP	2048/256	;ELSE CHECK TIME ACCUMULATED IN 'TICKS'
   383   0001e1 38f2            	JR	C,EDGE		;KEEP LOOPING TILL 2 SECONDS PASS
   384                          
   385   0001e3 37              	SCF
   386   0001e4 c9              	RET			;THEN RETURN WITH CARRY=1
   387                          ;
   388   0001e5 79              EDGE2:	LD	A,C
   389   0001e6 2f              	CPL			;FLIP INDEX STATE HELD IN C
   390   0001e7 4f              	LD	C,A
   391   0001e8 c9              	RET			;RETURN WITH CARRY=0
   392                          ;
   393                          ;
   394                          ;
   395                          ;
   396                          ;	... SEEK TRACK# IN (IX+DSKTRK) FROM TRACK# IN (TRACK) ...
   397                          ;
   398                          SEEKTRK:
   399   0001e9 3a2dff          	LD	A,(TRACK)
   400   0001ec feff            	CP	255
   401   0001ee 2005            	JR	NZ,SEEK1	;JUMP IF HEAD POSITION IS KNOWN
   402                          
   403   0001f0 cd3a02          	CALL	RESTORE		;ELSE DO SLOW RESTORE TO RECALIBRATE
   404   0001f3 202a            	JR	NZ,SEEKX	;EXIT WITH PERMANENT ERROR IF FAILURE
   405                          
   406   0001f5 0601            SEEK1:	LD	B,1
   407   0001f7 cd4702          	CALL	SEEK		;FIRST SEEK (IX+DSKTRK) WITH NO RETRIES
   408   0001fa c8              	RET	Z		;EXIT IF WE GOT TO THE DESIRED TRACK
   409   0001fb 3005            	JR	NC,SEEK2	;JUMP IF WE LANDED ON SOME OTHER TRACK
   410                          
   411   0001fd cd3a02          	CALL	RESTORE		;ELSE RECALIBRATE BEFORE TRYING AGAIN
   412   000200 201d            	JR	NZ,SEEKX	;EXIT IF TRACK ZERO NOT FOUND
   413                          
   414   000202 0602            SEEK2:	LD	B,2
   415   000204 cd4702          	CALL	SEEK		;NOW SEEK WITH TWO TRIES
   416   000207 c8              	RET	Z		;EXIT IF SUCCESSFUL THIS TIME
   417   000208 3815            	JR	C,SEEKX		;EXIT IF NO ID MARK COULD BE FOUND
   418                          
   419   00020a 216400          	LD	HL,100
   420   00020d cd8903          	CALL	WAIT		;DELAY TO LET THE STEPPER RELAX ITSELF
   421   000210 2128ff          	LD	HL,RATES
   422   000213 3a2cff          	LD	A,(UNIT)
   423   000216 85              	ADD	A,L
   424   000217 6f              	LD	L,A		;INDEX INTO TABLE TO DRIVE'S STEP RATE
   425   000218 34              	INC	(HL)		; AND MAKE STEP RATE ONE NOTCH SLOWER
   426   000219 7e              	LD	A,(HL)
   427   00021a e603            	AND	00000011B	;CHECK FOR ROLL AROUND IN LOWER 2 BITS
   428   00021c 20e4            	JR	NZ,SEEK2	;REPEAT IF STEP RATE BITS WERE NOT=3
   429                          
   430   00021e 35              	DEC	(HL)		;ELSE RESTORE FROM ROLL AROUND
   431   00021f 3eff            SEEKX:	LD	A,255
   432   000221 322dff          	LD	(TRACK),A	;FLAG TRACK POSITION AS UNKNOWN
   433   000224 3e10            	LD	A,00010000B	;SET SEEK ERROR BIT IN STATUS WORD
   434   000226 b7              	OR	A
   435   000227 c9              	RET			;RETURN WITH RNF ERROR STATUS IN A
   436                          ;
   437                          ;
   438                          ;
   439                          ;
   440                          resetfdc:
   441   000228 3a2fff          	LD	A,(OUTCPY)
   442   00022b cbe7            	SET	4,A
   443   00022d d330            	OUT	(LATCH),A	;TWANG THE DISK CONTROLLER RESET PIN
   444   00022f 060f            	LD	B,15
   445   000231 10fe            	DJNZ	$		;HOLD RESET 50 MICROSECONDS
   446   000233 cba7            	RES	4,A
   447   000235 d330            	OUT	(LATCH),A
   448                          ;	LD	B,30
   449                          ;	LD	B,0
   450   000237 10fe            	DJNZ	$
   451                          ;	CALL	FORCE		;THEN FORCE CLEAR THE BEAST
   452   000239 c9              	ret
   453                          
   454                          RESTORE:
   455   00023a cd2802          	CALL	resetfdc
   456   00023d 3e01            	LD	A,RSTCMD+HLOAD+1
   457   00023f cd5903          	CALL	TYP1CMD		;DO RESTORE AT SLOWEST STEP RATE
   458   000242 ee04            	XOR	00000100B
   459                          ;	AND	10000100B
   460   000244 e604            	AND	00000100B
   461   000246 c9              	RET			;RETURN WITH ACC=0 IF HOME
   462                          ;
   463                          ;
   464                          ;
   465                          SEEK:
   466   000247 c5              	PUSH	BC		;SAVE LOOPCOUNT IN B
   467   000248 3a2dff          	LD	A,(TRACK)
   468   00024b 47              	LD	B,A		;LOAD B WITH CURRENT TRACK POSITION
   469   00024c dd4e02          	LD	C,(IX+DSKTRK)	;LOAD C WITH DESTINATION TRACK#
   470   00024f cd6502          	CALL	STEP		;HAVE A GO AT STEPPING
   471   000252 cd8302          	CALL	VERIFY		;VERIFY HEAD POSITION WITH READ-ID
   472   000255 c1              	POP	BC
   473   000256 37              	SCF
   474   000257 c0              	RET	NZ		;EXIT WITH CARRY SET IF READ-ID FAILS
   475                          
   476   000258 db42            	IN	A,(SECREG)
   477   00025a 322dff          	LD	(TRACK),A	;STORE ACTUAL TRACK# FROM ID MARK
   478   00025d dd9602          	SUB	(IX+DSKTRK)	;COMPARE IF WE GOT THERE THIS TIME
   479   000260 c8              	RET	Z		;EXIT WITH ACC=0 IF TRACK# VERIFIED
   480                          
   481   000261 10e4            	DJNZ	SEEK		;DO PRESCRIBED NUMBER OF SEEK RETRIES
   482                          
   483   000263 b7              	OR	A
   484   000264 c9              	RET			;RETURN WITH CARRY AND ZERO FLAGS CLEAR
   485                          ;
   486                          ;
   487                          ;
   488                          ;	STEP FROM TRACK# IN B TOWARDS TRACK# IN C
   489                          ;
   490                          STEP:
   491   000265 78              	LD	A,B
   492   000266 d341            	OUT	(TRKREG),A	;STARTING TRACK# TO TRACK REGISTER
   493   000268 79              	LD	A,C
   494   000269 d343            	OUT	(DATREG),A	;DESTINATION TRACK# TO DATA REGISTER
   495   00026b 2128ff          	LD	HL,RATES
   496   00026e 3a2cff          	LD	A,(UNIT)
   497   000271 85              	ADD	A,L
   498   000272 6f              	LD	L,A		;INDEX INTO STEP RATE TABLE FOR DRIVE
   499   000273 7e              	LD	A,(HL)
   500                          ;	AND	00000011B	;EXTRACT LOWER 2 BITS FOR STEP RATE
   501                          ;	OR	SKCMD+HLOAD	;MERGE WITH SEEK COMAND
   502   000274 3e11            	ld	a, SKCMD+HLOAD+1
   503   000276 cd5903          	CALL	TYP1CMD		;DO SEEK WITH SPECIFIED STEP RATE
   504   000279 7e              	LD	A,(HL)
   505   00027a e6fc            	AND	11111100B	;EXTRACT UPPER 6 BITS FOR SETTLE TIME
   506   00027c 2600            	LD	H,0
   507   00027e 6f              	LD	L,A
   508   00027f cd8903          	CALL	WAIT		;4..256 MILLISECOND HEAD SETTLING DELAY
   509   000282 c9              	RET
   510                          ;
   511                          ;
   512                          ;
   513                          ;
   514                          VERIFY:
   515   000283 3ec0            	LD	A,RIDCMD
   516   000285 cd5003          	CALL	TYP2CMD		;READ NEXT ID MARK TO VERIFY SEEK
   517                          ;	AND	10011000B	;WD1772, bit 7 reset by TYP2CMD!
   518   000288 e618            	AND	00011000B	;WD1772, bit 7 reset by TYP2CMD!
   519   00028a c8              	RET	Z		;EXIT IF ID MARK READ OK
   520                          
   521   00028b 3a2fff          	LD	A,(OUTCPY)
   522   00028e ee80            	XOR	10000000B	;COMPLIMENT DENSITY BIT OF DRIVE TYPE
   523   000290 322fff          	LD	(OUTCPY),A
   524   000293 d330            	OUT	(LATCH),A
   525   000295 213200          	LD	HL,50
   526   000298 cd8903          	CALL	WAIT		;ALLOW 50 MS DELAY AFTER CLOCK SWITCH
   527   00029b 3ec0            	LD	A,RIDCMD
   528   00029d cd5003          	CALL	TYP2CMD		;TRY AGAIN IN NEW DENSITY
   529                          ;	AND	10011000B
   530   0002a0 e618            	AND	00011000B
   531   0002a2 c9              	RET			;A=0 IF AN ID MARK WAS FOUND
   532                          ;
   533                          ;
   534                          ;
   535                          ;
   536                          ;
   537                          ;
   538                          RWDISK:				;A=1797 TYPE 2 COMMAND BYTE
   539   0002a3 2a6600          	LD	HL,(NMIVEC)
   540   0002a6 e5              	PUSH	HL
   541   0002a7 2a6800          	LD	HL,(NMIVEC+2)
   542   0002aa e5              	PUSH	HL		;SAVE 4 BYTES AT NMI VECTOR
   543   0002ab 21eda2          	LD	HL,0A2EDH	;LOAD HL WITH 'INI' OPCODE
   544   0002ae cb6f            	BIT	5,A		;TEST IF READ OR WRITE BEING DONE
   545   0002b0 2801            	JR	Z,RW2		;JUMP IF COMMAND IS A READ
   546   0002b2 24              	INC	H		;ELSE TRANSFORM 'INI' INTO 'OUTI'
   547   0002b3 226600          RW2:	LD	(NMIVEC),HL
   548   0002b6 216800          	LD	HL,NMIVEC+2
   549   0002b9 36c9            	LD	(HL),0C9H	;STORE 'RET' OPCODE AFTER INI/OUTI
   550   0002bb f3              	DI
   551   0002bc 3ec7            	LD	A,11000111B
   552   0002be d383            	OUT	(CTC3),A	;ARM CTC3 FOR COUNTER MODE INTERRUPT
   553   0002c0 af              	XOR	A
   554   0002c1 d383            	OUT	(CTC3),A	;COUNT 256 PULSES FROM CTC1
   555   0002c3 fb              	EI
   556   0002c4 dd6e04          	LD	L,(IX+DSKPTR)	;HL=DISK READ/WRITE DATA POINTER
   557   0002c7 dd6605          	LD	H,(IX+DSKPTR+1)
   558   0002ca dd4606          	LD	B,(IX+DSKAUX)	;B=SECTOR LENGTH COUNT (LSB)
   559   0002cd 0e43            	LD	C,DATREG	;C=DISK DATA PORT#
   560   0002cf dd7e07          	LD	A,(IX+DSKAUX+1)
   561   0002d2 cb3f            	SRL	A
   562   0002d4 280d            	JR	Z,RW256		;JUMP IF BLOCKSIZE <= 256 BYTES
   563   0002d6 cb3f            	SRL	A
   564   0002d8 2806            	JR	Z,RW512		;JUMP IF BLOCKSIZE <= 512 BYTES
   565   0002da 76              RW1024:	HALT
   566   0002db 20fd            	JR	NZ,$-1
   567   0002dd 76              	HALT
   568   0002de 20fd            	JR	NZ,$-1
   569   0002e0 76              RW512:	HALT
   570   0002e1 20fd            	JR	NZ,$-1
   571   0002e3 76              RW256:	HALT
   572   0002e4 20fd            	JR	NZ,$-1
   573   0002e6 db40            RWBUSY:	IN	A,(STSREG)
   574   0002e8 cb47            	BIT	0,A
   575   0002ea 20fa            	JR	NZ,RWBUSY	;LOOP TILL 1797 BUSY BIT GOES AWAY
   576   0002ec 47              	ld	b,a
   577   0002ed cdb603          	call	STOPTMR
   578   0002f0 78              	ld	a,b
   579   0002f1 e1              RWEXIT:	POP	HL
   580   0002f2 226800          	LD	(NMIVEC+2),HL
   581   0002f5 e1              	POP	HL
   582   0002f6 226600          	LD	(NMIVEC),HL	;RESTORE CODE AT NMI
   583                          ;	AND	11111101B	;MASK FOR DISK ERRORS
   584   0002f9 e67d            	AND	01111101B	;MASK FOR DISK ERRORS
   585   0002fb c9              	RET			;RETURN WITH DISK ERROR FLAGS SET
   586                          ;
   587                          ;
   588                          ;
   589                          ;
   590                          RECOVER:
   591   0002fc 47              	LD	B,A
   592   0002fd e6e7            	AND	11100111B	;MASK OFF ALL BUT RNF/CRC ERROR BITS
   593   0002ff 2808            	JR	Z,RECOV1	;JUMP IF ONE OF THOSE TWO WERE SET
   594                          
   595   000301 f5              	PUSH	AF
   596   000302 cd7c03          	CALL	FORCE		;RESET ERROR FLAGS IN 179X STATUS REG
   597   000305 f1              	POP	AF
   598                          ;	AND	11100001B	;CLEAR BITS ASSOCIATED WITH LOST DATA
   599   000306 e661            	AND	01100001B	;CLEAR BITS ASSOCIATED WITH LOST DATA
   600   000308 c9              	RET			;RETURN WITH ACC=0 IF RETRY TO BE DONE
   601                          ;
   602   000309 cb60            RECOV1:	BIT	4,B
   603   00030b 2023            	JR	NZ,RECOV3	;JUMP IF RECORD-NOT-FOUND ERROR
   604                          ;
   605                          ;	ARRIVE HERE IF BAD CRC ERROR
   606                          ;
   607   00030d 3a33ff          RECOV2:	LD	A,(RWMAX)
   608   000310 21c6ff          	LD	HL,RWTRY
   609   000313 96              	SUB	(HL)		;COMPUTE HOW MANY RETRYS HAVE BEEN DONE
   610   000314 c8              	RET	Z		;EXIT IF FIRST RETRY
   611                          
   612   000315 3a2dff          	LD	A,(TRACK)	;ELSE PREPARE TO WIGGLE BACK AND FORTH
   613   000318 47              	LD	B,A		; TO AN ADJACENT TRACK TO RE-CALIBRATE
   614   000319 b7              	OR	A		; AND REMOVE POSSIBLE MEDIA CONTAMINANT
   615   00031a 2004            	JR	NZ,RCOV2A
   616   00031c 0e01            	LD	C, 1		;STEP TO TRACK#1 IF ON TRACK# 0
   617   00031e 1802            	JR	RCOV2B
   618                          ;
   619   000320 3d              RCOV2A:	DEC	A		;STEP TO NEXT OUTER TRACK
   620   000321 4f              	LD	C,A
   621   000322 c5              RCOV2B:	PUSH	BC
   622   000323 cd6502          	CALL	STEP		;STEP HEAD TO ADJACENT TRACK
   623   000326 d1              	POP	DE
   624   000327 43              	LD	B,E		;EXCHANGE CONTENTS OF B AND C
   625   000328 4a              	LD	C,D
   626   000329 cd6502          	CALL	STEP		;STEP BACK TO ORIGINAL TRACK
   627   00032c cd8302          	call	VERIFY
   628   00032f c9              	ret			;allow retry successful read id
   629                          ;
   630                          ;	ARRIVE HERE IF RECORD-NOT-FOUND ERROR
   631                          ;
   632   000330 cd8302          RECOV3:	call	VERIFY		;read an id mark to verify position
   633   000333 2012            	JR	NZ,RCOV4A	;RECALIBRATE IF VERIFY FAILS
   634                          
   635   000335 db42            	IN	A,(SECREG)	;LOAD A WITH CURENT TRACK# UNDER HEAD
   636   000337 ddbe02          	CP	(IX+DSKTRK)
   637   00033a 200d            	JR	NZ,RCOV4B	;JUMP IF NOT ON CORRECT TRACK
   638                          ;
   639                          ;	ARRIVE HERE IF ON CORRECT TRACK
   640                          ;
   641   00033c 3a33ff          	ld	a,(RWMAX)
   642   00033f 21c6ff          	ld	hl,RWTRY
   643   000342 96              	sub	(hl)		;test if this is first retry after rnf error
   644   000343 c8              	ret	z
   645                          
   646   000344 3e10            	ld	a,00010000b
   647   000346 c9              	ret			;indicate permanent rnf error
   648                          ;
   649                          ;	ARRIVE HERE IF HEAD POSITION IS INCORRECT
   650                          ;
   651   000347 3eff            RCOV4A:	LD	A,255		;SET A TO FORCE RESTORE BEFORE SEEK
   652   000349 322dff          RCOV4B:	LD	(TRACK),A
   653   00034c cde901          	CALL	SEEKTRK		;SEEK TRACK# SPECIFIED IN IOCB
   654   00034f c9              	RET
   655                          ;
   656                          ;
   657                          ;
   658                          ;
   659                          ;	EXECUTE TYPE 2 COMMAND (READ/WRITE/READ ID) WITH TIMEOUT
   660                          ;
   661                          TYP2CMD:
   662   000350 cd7403          	CALL	CMDOUT		;ISSUE COMMAND
   663   000353 c5              	PUSH	BC
   664   000354 016a18          	LD	BC,6250		;500,000/80 FOR ONE HALF SECOND DELAY
   665   000357 1807            	JR	TPCMD2
   666                          ;
   667                          ;
   668                          ;	EXECUTE TYPE 1 COMMAND (SEEK/STEP/RESTORE)
   669                          ;
   670                          TYP1CMD:
   671   000359 cd7403          	CALL	CMDOUT
   672   00035c c5              	PUSH	BC
   673   00035d 017c92          	LD	BC,37500	;3,000,000/80 FOR 3 SECONDS DELAY
   674   000360 db40            TPCMD2:	IN	A,(STSREG)
   675   000362 cb47            	BIT	0,A
   676   000364 280a            	JR	Z,TPCMD3	;EXIT IF BUSY BIT GOES AWAY
   677                          
   678   000366 cd7603          	CALL	CMDT1		;DELAY 56 MICROSECONDS
   679   000369 0b              	DEC	BC
   680   00036a 78              	LD	A,B
   681   00036b b1              	OR	C
   682   00036c 20f2            	JR	NZ,TPCMD2	;LOOP TAKES 80 MICROSECONDS
   683                          
   684   00036e 3e10            	LD	A,00010000B
   685                          TPCMD3:
   686   000370 cbbf            	res	7, a		;reset WD1797: drive not ready, WD1772: motor on!
   687                          	;LD	B,A
   688                          	;CALL	FORCE1
   689                          	;LD	A,B
   690   000372 c1              	POP	BC
   691   000373 c9              	RET
   692                          ;
   693                          ;
   694                          ;
   695                          CMDOUT:
   696   000374 d340            	OUT	(CMDREG),A	;OUTPUT DISK CONTROLLER COMMAND BYTE
   697   000376 3e0e            CMDT1:	LD	A,14
   698   000378 3d              CMDT2:	DEC	A
   699   000379 20fd            	JR	NZ,CMDT2	;DELAY 56 MICROSECONDS
   700   00037b c9              	RET
   701                          ;
   702                          ;
   703                          ;
   704                          ;
   705   00037c db41            FORCE:	IN	a, (TRKREG)
   706   00037e d343            	OUT	(DATREG), a
   707   000380 3e18            	LD	A,SKCMD+8	;disable spinup HLOAD
   708   000382 18d5            	jr	TYP1CMD		;CLEAR 179X AND LATCH READY/HLD/TK0 ETC
   709                          ;	IN	A,(STSREG)	;READ STATUS REGISTER CONTENTS
   710                          ;	RET
   711                          ;
   712                          ;
   713                          ;
   714                          ;
   715                          ;
   716                          HLDWAIT:
   717   000384 2a32ff          	LD	HL,(HLDTIM)	;LOAD HL WITH HEAD LOAD DELAY
   718   000387 2600            	LD	H,0		;RANGE 1..256 MILLISECONDS
   719                          
   720   000389 af              WAIT:	XOR	A
   721   00038a 3d              WAIT2:	DEC	A
   722   00038b 20fd            	JR	NZ,WAIT2	;DELAY 1 MILLISECOND
   723   00038d 2b              	DEC	HL
   724   00038e 7c              	LD	A,H
   725   00038f b5              	OR	L
   726   000390 20f7            	JR	NZ,WAIT		;LOOP UNTIL HL=0
   727   000392 c9              	RET
   728                          ;
   729                          ;
   730                          ;
   731                          ;	... CTC INTERRUPT CONTROL ROUTINES FOR DISK HANDLER ...
   732                          ;
   733                          ;
   734                          ;
   735                          WATCHDOG:
   736   000393 3ed0            	LD	A,FINCMD
   737   000395 d340            	OUT	(CMDREG),A	;ABORT DISK CONTROLLER OPERATION
   738   000397 3e01            	LD	A,00000001B
   739   000399 d383            	OUT	(CTC3),A	;RESET INTERRUPT FROM CTC3
   740   00039b 21f102          	LD	HL,RWEXIT
   741   00039e e3              	EX	(SP),HL		;TOSS RETURN ADDRESS AND PLANT FAKE ONE
   742   00039f 3e10            	LD	A,00010000B
   743   0003a1 b7              	OR	A		;INDICATE RECORD-NOT-FOUND ERROR
   744   0003a2 fb              	EI
   745   0003a3 ed4d            	RETI			;INSURE CTC IRQ LOGIC GETS RESTORED
   746                          ;
   747                          ;
   748                          ;
   749                          ;
   750                          ;
   751                          ;	... MILLISECOND TIMER INTERRUPT ROUTINES ...
   752                          ;
   753                          ;
   754                          STARTMR:
   755   0003a5 f3              	DI
   756   0003a6 3e87            	LD	A,10000111B
   757   0003a8 d383            	OUT	(CTC3),A
   758   0003aa 3efa            	LD	A,250
   759   0003ac d383            	OUT	(CTC3),A
   760   0003ae 21bd03          	LD	HL,TMRIRQ
   761   0003b1 2216ff          	LD	(CTCVEC+6),HL
   762   0003b4 fb              	EI
   763   0003b5 c9              	RET
   764                          ;
   765                          ;
   766                          ;
   767                          STOPTMR:
   768   0003b6 f3              	DI
   769   0003b7 3e01            	LD	A,00000001B
   770   0003b9 d383            	OUT	(CTC3),A
   771   0003bb fb              	EI
   772   0003bc c9              	RET
   773                          ;
   774                          ;
   775                          ;
   776                          TMRIRQ:
   777   0003bd e5              	PUSH	HL
   778   0003be fb              	EI
   779   0003bf 2ac7ff          	LD	HL,(TICKS)
   780   0003c2 23              	INC	HL		;BUMP FREE RUNING MILLISECOND COUNTER
   781   0003c3 22c7ff          	LD	(TICKS),HL
   782   0003c6 e1              	POP	HL
   783   0003c7 ed4d            	RETI
   784                          ;
   785                          ;
   786   0003c9 00              	nop
   787   0003ca 00              	nop
   788   0003cb 00              	nop
   789   0003cc 00              	nop
   790   0003cd 00              	nop
   791   0003ce 00              	nop
   792   0003cf 00              	nop
   793   0003d0 00              	nop
   794   0003d1 00              	nop
   795   0003d2 00              	nop
   796   0003d3 00              	nop
   797   0003d4 00              	nop
   798   0003d5 00              	nop
   799   0003d6 00              	nop
   800   0003d7 00              	nop
   801   0003d8 00              	nop
   802   0003d9 00              	nop
   803   0003da 00              	nop
   804   0003db 00              	nop
   805   0003dc 00              	nop
   806   0003dd 00              	nop
   807                          
   808                          
sally2-f000.asm:
    38                          		include	"minimon.mac"
minimon.mac:
     1                          ;
     2                          ;
     3                          ;
     4                          MINIMON:
     5   0003de 3e01            	LD	A,1
     6   0003e0 d352            	OUT	(BANKSW),A	;SWITCH TO ALL-RAM CONFIGURATION
     7   0003e2 cdfc05          	CALL	CONINIT		;INITIALIZE SERIAL CONSOLE PORT
     8   0003e5 cdc904          	CALL	PNEXT
     9   0003e8 0d0a            	DEFB	CR,LF
    10   0003ea 53616c6c7932    	DEFB	"Sally2"
    11   0003f0 00              	DEFB	NULL
    12   0003f1 21f103          PROMPT:	LD	HL,PROMPT
    13   0003f4 e5              	PUSH	HL		;PUT RETURN ADDRESS ON STACK
    14   0003f5 cdc904          	CALL	PNEXT
    15   0003f8 0d0a232000      	DEFB	CR,LF,"# ",NULL
    16   0003fd cdb204          	CALL	ECHO
    17   000400 fe20            	CP	' '
    18   000402 d8              	RET	C		;IGNORE NON-PRINTABLE CHATACTERS
    19                          
    20   000403 4f              	LD	C,A		;SAVE COMMAND CHARACTER IN C
    21   000404 af              	XOR	A
    22   000405 67              	LD	H,A
    23   000406 6f              	LD	L,A
    24   000407 29              PROM1:	ADD	HL,HL		;MULTIPLY RESULT BY 16
    25   000408 29              	ADD	HL,HL
    26   000409 29              	ADD	HL,HL
    27   00040a 29              	ADD	HL,HL
    28   00040b b5              	OR	L		;APPEND NEW LOW ORDER DIGIT
    29   00040c 6f              	LD	L,A
    30   00040d cdb204          	CALL	ECHO		;GET A CHARACTER FROM LINE INPUT
    31   000410 fe0d            	CP	CR
    32   000412 280c            	JR	Z,PROM3		;EXIT LOOP IF RETURN TYPED
    33   000414 cd8304          	CALL	ASCHEX		;CONVERT ASCII TO NUMERIC
    34   000417 30ee            	JR	NC,PROM1	;KEEP SHIFTING IF VALID HEX
    35                          
    36   000419 cdc904          PROM2:	CALL	PNEXT
    37   00041c 203f00          	DEFB	" ?",NULL
    38   00041f c9              	RET
    39                          ;
    40   000420 cdd504          PROM3:	CALL	CRLF
    41   000423 79              	LD	A,C
    42   000424 fe47            	CP	'G'
    43   000426 2836            	JR	Z,GOTO		;DO GOTO IF 'G'
    44   000428 fe42            	CP	'B'
    45   00042a 2833            	JR	Z,BOOT		;DO BOOT LOADER IF 'B'
    46   00042c fe4d            	CP	'M'
    47   00042e 20e9            	JR	NZ,PROM2	;***TEMP***
    48                          
    49                          ;  **** This code section does not exist on production ROM ****
    50                          ;	.COMMENT %
    51                          ;	JR	Z,VIEW		;DO MEMORY EXAMINE/CHANGE IF 'M'
    52                          ;	CP	'D'
    53                          ;	JR	NZ,PROM2	;FALL INTO MEMORY DUMP IF 'D'
    54                          ;
    55                          ;
    56                          ;
    57                          ;	-- TABULAR MEMORY DUMP COMMAND --
    58                          ;
    59                          ;DUMP:
    60                          ;	LD	C,16
    61                          ;DUMP1:	PUSH	HL		;SAVE STARTING ADDRESS
    62                          ;	CALL	PUT4HS		;PRINT STARTING ADDRESS IN HEX
    63                          ;	LD	B,8
    64                          ;DUMP2:	LD	A,(HL)		;GET A DATA BYTE @ HL
    65                          ;	INC	HL
    66                          ;	CALL	PUT2HS		;PRINT THE DATA IN HEX
    67                          ;	DJNZ	DUMP2		;REPEAT 16 TIMES
    68                          ;	POP	HL		;RESTORE STARTING ADDRESS
    69                          ;	LD	B,8
    70                          ;DUMP3:	LD	A,(HL)		;GET BACK DATA BYTE @ HL
    71                          ;	INC	HL
    72                          ;	RES	7,A
    73                          ;	CP	20H
    74                          ;	JR	C,DUMP4
    75                          ;	CP	7FH
    76                          ;	JR	C,DUMP5
    77                          ;DUMP4:	LD	A,'.'		;PRINT A DOT IF DATA < 20 OR > 7F
    78                          ;DUMP5:	CALL	OUTPUT		;PRINT ASCII CHARACTER IN A
    79                          ;	DJNZ	DUMP3
    80                          ;	CALL	CRLF
    81                          ;	DEC	C
    82                          ;	JR	NZ,DUMP1
    83                          ;	RET
    84                          ;
    85                          ;
    86                          ;	-- MEMORY EXAMINE COMMAND --
    87                          ;
    88                          VIEW:
    89   000430 cd9304          	CALL	PUT4HS
    90   000433 7e              	LD	A,(HL)
    91   000434 cd9804          	CALL	PUT2HS
    92   000437 cdb204          	CALL	ECHO
    93   00043a fe0d            	CP	CR
    94   00043c 2818            	JR	Z,VIEW4
    95   00043e fe2d            	CP	'-'
    96   000440 2816            	JR	Z,VIEW5
    97   000442 cd8304          	CALL	ASCHEX
    98   000445 3f              	CCF
    99   000446 d0              	RET	NC
   100   000447 07              	RLCA
   101   000448 07              	RLCA
   102   000449 07              	RLCA
   103   00044a 07              	RLCA
   104   00044b 4f              	LD	C,A
   105   00044c cdb204          	CALL	ECHO
   106   00044f cd8304          	CALL	ASCHEX
   107   000452 3f              	CCF
   108   000453 d0              	RET	NC
   109   000454 b1              	OR	C
   110   000455 77              	LD	(HL),A
   111   000456 23              VIEW4:	INC	HL
   112   000457 23              	INC	HL
   113   000458 2b              VIEW5:	DEC	HL
   114   000459 cdd504          	CALL	CRLF
   115   00045c 18d2            	JR	VIEW
   116                          ;
   117                          ;
   118                          ;
   119                          ;	-- JUMP TO MEMORY LOCATION COMMAND --
   120                          ;
   121                          GOTO:
   122   00045e e9              	JP	(HL)
   123                          ;
   124                          ;
   125                          ;
   126                          ;	-- DISK BOOT LOADER --
   127                          ;
   128                          BOOT:
   129   00045f dd217a04        	LD	IX,BOOTCB
   130   000463 cd2200          	CALL	DISKDVR		;ATTEMPT TO READ BOOT SECTOR
   131   000466 dd7e08          	LD	A,(IX+DSKSTS)
   132   000469 b7              	OR	A
   133   00046a cc8000          	CALL	Z,0080H		;EXECUTE BOOT IF NO ERRORS
   134   00046d f5              	PUSH	AF
   135   00046e cdc904          	CALL	PNEXT
   136   000471 204552522000    	DEFB	" ERR ",NULL
   137   000477 f1              	POP	AF
   138   000478 1825            	JR	PUT2HX
   139                          ;
   140                          ;
   141   00047a 01              BOOTCB:	DEFB	GETSEC
   142   00047b 00              	DEFB	0
   143   00047c 00              	DEFB	0
   144   00047d 01              	DEFB	1
   145   00047e 8000            	DEFW	0080H
   146   000480 8000            	DEFW	128
   147   000482 00              	DEFB	0
   148                          ;
   149                          ;
   150                          ;
   151                          ASCHEX:
   152   000483 d630            	SUB	'0'
   153   000485 d8              	RET	C
   154   000486 fe0a            	CP	10
   155   000488 3f              	CCF
   156   000489 d0              	RET	NC
   157   00048a d607            	SUB	7
   158   00048c fe0a            	CP	10
   159   00048e d8              	RET	C
   160   00048f fe10            	CP	16
   161   000491 3f              	CCF
   162   000492 c9              	RET
   163                          ;
   164                          ;
   165                          ;
   166                          PUT4HS:
   167   000493 7c              	LD	A,H
   168   000494 cd9f04          	CALL	PUT2HX
   169   000497 7d              	LD	A,L
   170                          PUT2HS:
   171   000498 cd9f04          	CALL	PUT2HX
   172   00049b 3e20            	LD	A,' '
   173   00049d 181f            	JR	OUTPUT
   174                          ;
   175                          ;
   176                          PUT2HX:
   177   00049f f5              	PUSH	AF
   178   0004a0 1f              	RRA
   179   0004a1 1f              	RRA
   180   0004a2 1f              	RRA
   181   0004a3 1f              	RRA
   182   0004a4 cda804          	CALL	PUTNIB
   183   0004a7 f1              	POP	AF
   184   0004a8 e60f            PUTNIB:	AND	00001111B
   185   0004aa c690            	ADD	A,90H
   186   0004ac 27              	DAA
   187   0004ad ce40            	ADC	A,40H
   188   0004af 27              	DAA
   189   0004b0 180c            	JR	OUTPUT
   190                          ;
   191                          ;
   192                          ;
   193                          ;
   194                          ECHO:
   195   0004b2 e5              	PUSH	HL
   196   0004b3 c5              	PUSH	BC
   197   0004b4 cd0900          	CALL	CIV		;CALL CONSOLE INPUT VECTOR
   198   0004b7 c1              	POP	BC
   199   0004b8 e1              	POP	HL
   200   0004b9 cbbf            	RES	7,A
   201   0004bb fe20            	CP	' '
   202   0004bd d8              	RET	C		;DO NOT ECHO CONTROL CHARACTERS
   203                          
   204                          OUTPUT:
   205   0004be e5              	PUSH	HL
   206   0004bf c5              	PUSH	BC
   207   0004c0 f5              	PUSH	AF
   208   0004c1 4f              	LD	C,A
   209   0004c2 cd0c00          	CALL	COV		;CALL CONSOLE OUTPUT VECTOR
   210   0004c5 f1              	POP	AF
   211   0004c6 c1              	POP	BC
   212   0004c7 e1              	POP	HL
   213   0004c8 c9              	RET
   214                          ;
   215                          ;
   216                          ;
   217                          PNEXT:
   218   0004c9 e3              	EX	(SP),HL
   219   0004ca 7e              PNXT1:	LD	A,(HL)
   220   0004cb cdbe04          	CALL	OUTPUT
   221   0004ce 7e              	LD	A,(HL)
   222   0004cf 23              	INC	HL
   223   0004d0 b7              	OR	A
   224   0004d1 20f7            	JR	NZ,PNXT1
   225   0004d3 e3              	EX	(SP),HL
   226   0004d4 c9              	RET
   227                          ;
   228                          ;
   229                          ;
   230   0004d5 cdc904          CRLF:	CALL	PNEXT
   231   0004d8 0d0a00          	DEFB	CR,LF,NULL
   232   0004db c9              	RET
   233                          ;
   234                          ;
   235                          ;
   236                          
sally2-f000.asm:
    39                          		include	"PRINTER.MAC"
PRINTER.MAC:
     1                          ;
     2                          ;
     3                          ;	... PARALLEL PRINTER OUTPUT ROUTINE ...
     4                          ;
     5                          CENTOUT:
     6                          
     7   0004dc 79              	LD	A,C
     8   0004dd d320            	OUT	(PRINTER),A	;OUTPUT DATA BYTE TO PRINTER
     9   0004df e3              	EX	(SP),HL
    10   0004e0 e3              	EX	(SP),HL
    11   0004e1 3e19            	LD	A,25
    12   0004e3 d353            	OUT	(STROBE),A
    13   0004e5 3d              CENT2:	DEC	A
    14   0004e6 20fd            	JR	NZ,CENT2
    15   0004e8 d353            	OUT	(STROBE),A	;TWANG THE STROBE
    16   0004ea c9              	RET
    17                          ;
    18                          ;
    19                          ;
    20                          CENTRDY:
    21   0004eb 2a47ff          	LD	HL,(PMASKS)
    22   0004ee db20            	IN	A,(PRINTER)
    23   0004f0 a5              	AND	L		;MASK BITS WITH 'AND'
    24   0004f1 ac              	XOR	H		;COMPARE WITH 'XOR'
    25   0004f2 c9              	RET			;ACC=0 IF PRINTER IS READY
    26                          ;
    27                          ;
    28                          ;
    29                          ;
    30                          
sally2-f000.asm:
    40   0004f3 95              		DEFB 95h                ; **** Exists on original ROM? ****
    41   0004f4 0000000000000000		dw	0, 0, 0, 0, 0, 0
                00000000        
    42                          ;		defs	(($ and 0ff00h)+100h)-$
    43                          		INCLUDE	"SERIAL.MAC"
SERIAL.MAC:
     1                          ;
     2                          ;
     3                          ;
     4                          ;	... BAUDRATE AND TIMING CONSIDERATIONS ...
     5                          ;
     6                          ;	THE FOLLOWING TABLE DETAILS THE BIT TIMES FOR THE BAUDRATES
     7                          ;    SUPPORTED BY THE ATR-8000 AND THE CTC PROGRAMMING PARAMETERS
     8                          ;    REQUIRED TO GENERATE THEM USING THE CTC IN THE TIMER MODE.
     9                          ;    (IE. BY DIVIDING DOWN THE 4MHZ CLOCK WITH 16 OR 256 PRESCALE.)
    10                          ;
    11                          ;	BAUD      PERIOD    MODULUS   PRESCALE
    12                          ;	----      ------    -------   --------
    13                          ;      19200        52 us      13        16
    14                          ;	9600       104 us      26        16
    15                          ;	4800       208 us      52        16
    16                          ;	2400       416 us     104        16
    17                          ;	1200       832 us     208        16
    18                          ;	 600      1664 us      26       256
    19                          ;	 300      3328 us      52       256
    20                          ;	 150      6656 us     104       256
    21                          ;	  75     13312 us     208       256
    22                          ;
    23                          ;
    24                          ;
    25                          ;
    26                          ;	... INTERRUPT SERVICE ROUTINES FOR SERIAL CONSOLE INPUT ...
    27                          ;
    28                          ;	AVERAGE EXECUTION TIME = 24.55 us FOR INTERRUPT SERVICE
    29                          ;				  4.75 us FOR INTERRUPT ACKNOWLEDGE
    30                          ;				 ------
    31                          ;				 29.30 us PER BIT
    32                          ;
    33                          ;
    34                          ;	*** START BAGE BOUNDARY RESTRICTIONS ***
    35                          ;
    36                          CONPAGE	EQU	$
    37                          ;
    38                          ;
    39                          RXSTART:
    40   000500 f5              	PUSH	AF
    41   000501 3e87            	LD	A,10000111B
    42   000503 d380            	OUT	(CTC0),A	;RESET CTC AND PROGRAM FOR TIMER MODE
    43   000505 3e1a            	LD	A,26
    44                          RXBAUD	EQU	$-1		;BAUDRATE PARAM IS STORED HERE
    45   000507 d380            	OUT	(CTC0),A
    46   000509 3e17            	LD	A,RXDATA & 255
    47   00050b 3210ff          	LD	(CTCVEC),A
    48   00050e 3e7f            	LD	A,01111111B
    49   000510 320000          RXDAT2:	LD	(RXTEMP),A	;SET DATA SHIFTER TO ALL ONES
    50   000513 f1              	POP	AF
    51   000514 fb              	EI
    52   000515 ed4d            	RETI			;EXECUTION TIME = 115 CLOCK CYCLES
    53                          ;
    54                          ;
    55                          ;
    56                          RXDATA:
    57   000517 f5              	PUSH	AF
    58   000518 db70            	IN	A,(ATARI)	;READ SERIAL INPUT BIT STREAM
    59   00051a 17              	RLA			;SHIFT DATA BIT (=MSB) INTO CARRY
    60   00051b 3e00            	LD	A,NULL		;LOAD A WITH PARTIAL DATA BYTE
    61                          RXTEMP	EQU	$-1
    62   00051d 1f              	RRA			;SHIFT NEW BIT IN AND ONES OUT
    63   00051e 38f0            	JR	C,RXDAT2
    64                          
    65   000520 3200ff          	LD	(KEYBUF),A	;STORE CHARACTER IN CIRCULAR BUFFER
    66                          RXINP	EQU	$-2
    67   000523 3e2c            	LD	A,RXSTOP & 255
    68   000525 3210ff          	LD	(CTCVEC),A	;ADVANCE TO STOP BIT STATE
    69   000528 f1              	POP	AF
    70   000529 fb              	EI
    71   00052a ed4d            	RETI			;EXECUTION TIME = 105 CYCLES
    72                          ;
    73                          ;
    74                          ;
    75                          RXSTOP:
    76   00052c f5              	PUSH	AF
    77   00052d 3ec7            	LD	A,11000111B
    78   00052f d380            	OUT	(CTC0),A	;ENABLE INTERRUPT FROM START BIT
    79   000531 3e01            	LD	A,1
    80   000533 d380            	OUT	(CTC0),A
    81   000535 3a0000          	LD	A,(RXINP)
    82   000538 3c              	INC	A
    83   000539 e60f            	AND	00001111B	;BUMP BUFFER POINTER MODULO 16
    84   00053b 320000          	LD	(RXINP),A
    85   00053e 3e00            	LD	A,RXSTART & 255
    86   000540 3210ff          	LD	(CTCVEC),A	;SET VECTOR BACK TO START BIT CODE
    87   000543 f1              	POP	AF
    88   000544 fb              	EI
    89   000545 ed4d            	RETI			;EXECUTION TIME = 132 CYCLES
    90                          ;
    91                          ;
    92                          ;
    93                          ;
    94                          ;	... INTERRUPT ROUTINES FOR SERIAL DATA OUTPUT ...
    95                          ;
    96                          TXSTART:
    97   000547 f5              	PUSH	AF
    98   000548 af              	XOR	A
    99   000549 d350            	OUT	(ATROUT),A	;SEND COMPLIMENT OF MARK AS START BIT
   100   00054b 3e54            	LD	A,TXDAT0 & 255
   101   00054d 3212ff          	LD	(CTCVEC+2),A	;SET INTERRUPT VECTOR FOR DATA BIT 0
   102   000550 f1              	POP	AF
   103   000551 fb              	EI
   104   000552 ed4d            	RETI
   105                          ;
   106                          ;
   107                          ;
   108                          ;
   109                          ;
   110                          TXDAT0:
   111   000554 f5              	PUSH	AF
   112   000555 3e00            	LD	A,NULL
   113                          TXTMP0	EQU	$-1
   114   000557 d350            	OUT	(ATROUT),A	;OUTPUT LSB OF SERIAL DATA TO CONSOLE
   115   000559 1f              	RRA
   116   00055a 320000          	LD	(TXTMP1),A	;SHIFT RIGHT TO PREPARE FOR NEXT BIT
   117   00055d 3e66            	LD	A,TXDAT1 & 255
   118   00055f 3212ff          	LD	(CTCVEC+2),A	;DINK WITH VECTOR FOR NEXT TIME
   119   000562 f1              	POP	AF
   120   000563 fb              	EI
   121   000564 ed4d            	RETI			;EXECUTION TIME = 94 CYCLES
   122                          ;
   123                          ;
   124                          TXDAT1:
   125   000566 f5              	PUSH	AF
   126   000567 3e00            	LD	A,NULL
   127                          TXTMP1	EQU	$-1
   128   000569 d350            	OUT	(ATROUT),A
   129   00056b 1f              	RRA
   130   00056c 320000          	LD	(TXTMP2),A
   131   00056f 3e78            	LD	A,TXDAT2 & 255
   132   000571 3212ff          	LD	(CTCVEC+2),A
   133   000574 f1              	POP	AF
   134   000575 fb              	EI
   135   000576 ed4d            	RETI
   136                          ;
   137                          ;
   138                          TXDAT2:
   139   000578 f5              	PUSH	AF
   140   000579 3e00            	LD	A,NULL
   141                          TXTMP2	EQU	$-1
   142   00057b d350            	OUT	(ATROUT),A
   143   00057d 1f              	RRA
   144   00057e 320000          	LD	(TXTMP3),A
   145   000581 3e8a            	LD	A,TXDAT3 & 255
   146   000583 3212ff          	LD	(CTCVEC+2),A
   147   000586 f1              	POP	AF
   148   000587 fb              	EI
   149   000588 ed4d            	RETI
   150                          ;
   151                          ;
   152                          TXDAT3:
   153   00058a f5              	PUSH	AF
   154   00058b 3e00            	LD	A,NULL
   155                          TXTMP3	EQU	$-1
   156   00058d d350            	OUT	(ATROUT),A
   157   00058f 1f              	RRA
   158   000590 320000          	LD	(TXTMP4),A
   159   000593 3e9c            	LD	A,TXDAT4 & 255
   160   000595 3212ff          	LD	(CTCVEC+2),A
   161   000598 f1              	POP	AF
   162   000599 fb              	EI
   163   00059a ed4d            	RETI
   164                          ;
   165                          ;
   166                          TXDAT4:
   167   00059c f5              	PUSH	AF
   168   00059d 3e00            	LD	A,NULL
   169                          TXTMP4	EQU	$-1
   170   00059f d350            	OUT	(ATROUT),A
   171   0005a1 1f              	RRA
   172   0005a2 320000          	LD	(TXTMP5),A
   173   0005a5 3eae            	LD	A,TXDAT5 & 255
   174   0005a7 3212ff          	LD	(CTCVEC+2),A
   175   0005aa f1              	POP	AF
   176   0005ab fb              	EI
   177   0005ac ed4d            	RETI
   178                          ;
   179                          ;
   180                          TXDAT5:
   181   0005ae f5              	PUSH	AF
   182   0005af 3e00            	LD	A,NULL
   183                          TXTMP5	EQU	$-1
   184   0005b1 d350            	OUT	(ATROUT),A
   185   0005b3 1f              	RRA
   186   0005b4 320000          	LD	(TXTMP6),A
   187   0005b7 3ec0            	LD	A,TXDAT6 & 255
   188   0005b9 3212ff          	LD	(CTCVEC+2),A
   189   0005bc f1              	POP	AF
   190   0005bd fb              	EI
   191   0005be ed4d            	RETI
   192                          ;
   193                          ;
   194                          TXDAT6:
   195   0005c0 f5              	PUSH	AF
   196   0005c1 3e00            	LD	A,NULL
   197                          TXTMP6	EQU	$-1
   198   0005c3 d350            	OUT	(ATROUT),A
   199   0005c5 1f              	RRA
   200   0005c6 320000          	LD	(TXTMP7),A
   201   0005c9 3ed2            	LD	A,TXDAT7 & 255
   202   0005cb 3212ff          	LD	(CTCVEC+2),A
   203   0005ce f1              	POP	AF
   204   0005cf fb              	EI
   205   0005d0 ed4d            	RETI
   206                          ;
   207                          ;
   208                          ;
   209                          TXDAT7:
   210   0005d2 f5              	PUSH	AF
   211   0005d3 3e00            	LD	A,NULL
   212                          TXTMP7	EQU	$-1
   213   0005d5 d350            	OUT	(ATROUT),A	;SEND LAST BIT WITHOUT SHIFTING AFTER
   214   0005d7 3ee0            	LD	A,TXSTOP & 255
   215   0005d9 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR FOR STOP BIT NEXT TIME
   216   0005dc f1              	POP	AF
   217   0005dd fb              	EI
   218   0005de ed4d            	RETI
   219                          ;
   220                          ;
   221                          ;
   222                          TXSTOP:
   223   0005e0 f5              	PUSH	AF
   224   0005e1 3e01            	LD	A,1
   225   0005e3 d350            	OUT	(ATROUT),A
   226   0005e5 3eee            	LD	A,TXEXIT & 255
   227   0005e7 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR TO CLEAR TX BUSY FLAG
   228   0005ea f1              	POP	AF
   229   0005eb fb              	EI
   230   0005ec ed4d            	RETI
   231                          ;
   232                          ;
   233                          TXEXIT:
   234   0005ee f5              	PUSH	AF
   235   0005ef 3e01            	LD	A,00000001B
   236   0005f1 d381            	OUT	(CTC1),A	;DISABLE INTERRUPT FROM XMIT BAUDRATE
   237   0005f3 3eff            	LD	A,255
   238   0005f5 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR SO BACKGROUND MONITOR IRQ
   239   0005f8 f1              	POP	AF
   240   0005f9 fb              RETI1:	EI
   241   0005fa ed4d            	RETI
   242                          ;
   243                          ;
   244                          ;	IF	(HIGH CONPAGE) NE (HIGH $)
   245                          ;	.ERROR /PAGE ERROR ON CONSOLE IO/
   246                          ;	ENDIF
   247                          ;
   248                          ;
   249                          ;
   250                          ;	*** END PAGE BOUNDARY RESTRICTIONS ***
   251                          ;
   252                          ;
   253                          ;
   254                          CONINIT:
   255   0005fc f3              	DI
   256   0005fd 21ee05          	LD	HL,TXEXIT
   257   000600 2212ff          	LD	(CTCVEC+2),HL
   258   000603 3e07            	LD	A,00000111B
   259   000605 d381            	OUT	(CTC1),A	;PROGRAM TX CTC IN TIMER MODE
   260   000607 3a0000          	LD	A,(RXBAUD)
   261   00060a d381            	OUT	(CTC1),A	;DIVIDE BY 26 GIVES 9600 BAUD
   262                          
   263   00060c 2100ff          	LD	HL,KEYBUF
   264   00060f 220000          	LD	(RXINP),HL	;RESET RX FIFO IN/OUT POINTERS
   265   000612 223306          	LD	(RXOUT),HL
   266                          CINIT2:
   267   000615 f3              	DI			;ALTERNATE ENTRY FROM 'DISKIO'
   268   000616 3e01            	LD	A,1
   269   000618 d357            	OUT	(CDMUX),A	;SET MUX TO ENABLE DATA TO CTC0
   270   00061a 067e            CINIT3:	LD	B,126
   271   00061c db70            CINIT4:	IN	A,(ATARI)
   272   00061e 17              	RLA
   273   00061f 30f9            	JR	NC,CINIT3	;RE-LOAD COUNT IN B IF INPUT LOW
   274   000621 10f9            	DJNZ	CINIT4		;ELSE LOOP FOR ONE 9600 BAUD CHAR TIME
   275                          
   276   000623 3ec7            	LD	A,11000111B
   277   000625 d380            	OUT	(CTC0),A	;PROGRAM RX CTC IN COUNTER MODE
   278   000627 3e01            	LD	A,1
   279   000629 d380            	OUT	(CTC0),A	;INTERRUPT ON NEXT START BIT
   280   00062b 210005          	LD	HL,RXSTART
   281   00062e 2210ff          	LD	(CTCVEC),HL
   282   000631 fb              	EI
   283   000632 c9              	RET
   284                          ;
   285                          ;
   286   000633 00ff            RXOUT:	DEFW	KEYBUF		;KEYBOARD BUFFER OUTPUT POINTER
   287                          ;
   288                          ;
   289                          CONST:
   290   000635 213306          	LD	HL,RXOUT
   291   000638 3a0000          	LD	A,(RXINP)
   292   00063b 96              	SUB	(HL)
   293   00063c c8              	RET	Z		;A=0 IF NO DATA AVAILABLE
   294                          
   295   00063d 3eff            	LD	A,255
   296   00063f c9              	RET
   297                          ;
   298                          ;
   299                          ;
   300                          CONIN:
   301   000640 cd3506          	CALL	CONST
   302   000643 28fb            	JR	Z,CONIN
   303                          
   304   000645 2a3306          	LD	HL,(RXOUT)
   305   000648 7e              	LD	A,(HL)		;GET RECEIVED DATA FROM FIFO
   306   000649 2c              	INC	L
   307   00064a cba5            	RES	4,L		;INCREMENT HL MODULO 16
   308   00064c 223306          	LD	(RXOUT),HL
   309   00064f c9              	RET
   310                          ;
   311                          ;
   312                          ;
   313                          CONOUT:
   314   000650 3a12ff          	LD	A,(CTCVEC+2)
   315   000653 feee            	CP	TXEXIT & 255
   316   000655 38f9            	JR	C,CONOUT	;LOOP TILL WE REACH 'TEXIT' OR HIGHER
   317                          
   318   000657 79              	LD	A,C
   319   000658 e67f            	AND	01111111B	;CLEAR BIT 7 AND SET FLAGS
   320   00065a e25f06          	JP	PO,COUT2
   321   00065d f680            	OR	10000000B
   322   00065f 320000          COUT2:	LD	(TXTMP0),A	;STORE RESULTING CHARACTER FOR XMIT
   323   000662 3e47            	LD	A,TXSTART & 255
   324   000664 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR FOR START BIT INTERRUPT
   325   000667 3e81            	LD	A,10000001B
   326   000669 d381            	OUT	(CTC1),A	;PROGRAM TX CTC IN TIMER MODE
   327   00066b c9              	RET
   328                          ;
   329                          ;
   330                          ;
   331                          
sally2-f000.asm:
    44                          ;
    45                          ;		CODE PAST THIS POINT IS ONLY USED IN ATARI DISK MODE
    46                          ;
    47                          		INCLUDE	"BITBANG.MAC"
BITBANG.MAC:
     1                          ;********************************************************
     2                          ;*							*
     3                          ;*	19200 BAUD SERIAL I/O FOR ATARI COMM PORT	*
     4                          ;*							*
     5                          ;********************************************************
     6                          ;
     7                          ;
     8                          ;	19200 BAUD SERIAL I/O IS HALF DUPLEX DUE TO OBVIOUS
     9                          ;	TIMING CONSTRAINTS. ALL TRANSFERS ARE DONE FROM 4K PAGE
    10                          ;	ALIGNED BUFFER 'IOBUFF', WITH BLOCK START ADDRESS
    11                          ;	ARRANGED SO END-OF-BLOCK CONDITION IS MET WHEN POINTER
    12                          ;	ROLLS OVER THE NEXT EVEN PAGE BYTE BOUNDARY.
    13                          ;
    14                          ;	CALL WITH BLOCK START POINTER IN HL ,DATA POLARITY MASK
    15                          ;	IN D (WHERE D=0 TRUE DATA, D=FF INVERTED DATA) AND
    16                          ;	'C' OR 'E' HANDSHAKE CHARACTER IN E.
    17                          ;
    18                          ;
    19                          SENDBUFF:
    20   00066c e5              	PUSH	HL		;SAVE DATA BLOCK POINTER
    21   00066d d5              	PUSH	DE		;SAVE POLARITY MASK FOR DATA
    22   00066e 2101c3          	LD	HL,IOBUFF+LEN+1
    23   000671 73              	LD	(HL),E
    24   000672 1600            	LD	D,0
    25   000674 cd8406          	CALL	XMITBUF		;SEND 'C' OR 'E' CHARACTER FROM E
    26   000677 d1              	POP	DE
    27   000678 e1              	POP	HL
    28   000679 1e00            	LD	E,0
    29   00067b cd8406          	CALL	XMITBUF		;THEN SEND DATA BLOCK TO ATARI
    30   00067e 2101c3          	LD	HL,IOBUFF+LEN+1
    31   000681 73              	LD	(HL),E		;FALL THROUGH TO SEND CHECKSUM
    32   000682 1600            	LD	D,0
    33                          ;
    34                          ;	CALL WITH DATA BLOCK POINTER IN HL.
    35                          ;	PRESERVES MASK/CKECKSUM IN D/E.
    36                          ;
    37                          XMITBUF:
    38   000684 f3              	DI
    39   000685 011507          	LD	BC,STARBIT
    40   000688 ed4312ff        	LD	(CTCVEC+2),BC	;SET UP INITIAL INTERRUPT VECTOR
    41   00068c 0608            	LD	B,8
    42   00068e 3e87            	LD	A,10000111B
    43   000690 d381            	OUT	(CTC1),A	;PROGRAM CTC1 TO INTERRUPT AT BIT RATE
    44   000692 3e0d            	LD	A,13
    45   000694 d381            	OUT	(CTC1),A	;COUNT 13*(16*250 NS) GIVES 19200 BAUD
    46   000696 fb              	EI
    47   000697 18fe            	JR	$		;SPIN HERE TILL INTERRUPTS GET US OUT
    48                          ;
    49                          ;
    50                          ;
    51                          ;
    52                          ;
    53                          ;
    54                          ;	... INTERRUPT FOR COMMAND INPUT HIGH->LOW TRANSITION ..
    55                          ;
    56                          CSTART:
    57   000699 08              	EX	AF,AF'
    58   00069a d9              	EXX
    59   00069b 3eff            	LD	A,255
    60   00069d 3255ff          	LD	(CMDFLG),A	;SET 'CMDFLG' FLAG TO ERROR STATE FIRST
    61   0006a0 d357            	OUT	(CDMUX),A	;SWITCH MUX TO ENABLE SERIAL DATA IRQ
    62   0006a2 21fbc2          	LD	HL,IOBUFF+LEN-5	;POINT DE 5 BYTES BEFORE END OF BUFFER
    63   0006a5 cdd906          	CALL	RXBLOCK		;ATTEMPT TO RECEIVE COMMAND FRAME
    64   0006a8 300a            	JR	NC,CSTRT1	;JUMP IF NO DATA HAPPENED
    65                          
    66   0006aa 2b              	DEC	HL
    67   0006ab 7e              	LD	A,(HL)
    68   0006ac b9              	CP	C		;COMPARE DERRIVED AND RECVD CHECKSUMS
    69   0006ad 2005            	JR	NZ,CSTRT1	;JUMP IF CHECKSUM ERROR
    70                          
    71   0006af 3e01            	LD	A,1
    72   0006b1 3255ff          	LD	(CMDFLG),A	;SET FLAG IF GOOD COMMAND FRAME
    73   0006b4 08              CSTRT1:	EX	AF,AF'
    74   0006b5 d9              	EXX
    75   0006b6 fb              	EI
    76   0006b7 ed4d            	RETI
    77                          ;
    78                          ;
    79                          ;
    80                          ;	... DATA FRAME RECEIVE SUBROUTINE ...
    81                          ;
    82                          RECVBUFF:
    83   0006b9 f3              	DI
    84   0006ba 2100c1          	LD	HL,IOBUFF
    85   0006bd cdd906          	CALL	RXBLOCK		;BITBANG A BLOCK OF INPUT DATA
    86   0006c0 fb              	EI
    87   0006c1 380d            	JR	C,RBUFF2	;JUMP IF BUFFER OVERFLOWED
    88                          
    89   0006c3 2b              	DEC	HL
    90   0006c4 7e              	LD	A,(HL)
    91   0006c5 b9              	CP	C
    92   0006c6 2008            	JR	NZ,RBUFF2	;JUMP IF CHECKSUMS DON'T AGREE
    93   0006c8 1100c1          	LD	DE,IOBUFF
    94   0006cb b7              	OR	A
    95   0006cc ed52            	SBC	HL,DE		;ELSE COMPUTE LENGTH OF BLOCK LESS
    96   0006ce af              	XOR	A		; CHECKSUM BYTE AND RETURN WITH
    97                          
    98   0006cf c9              	RET			; RESULT IN HL AND ZERO FLAG SET
    99                          ;
   100   0006d0 3e4e            RBUFF2:	LD	A,'N'
   101   0006d2 cd560c          	CALL	SENDCHAR	;SEND 'NAK' FOR BAD DATA FRAME
   102   0006d5 3eff            	LD	A,255
   103   0006d7 b7              	OR	A
   104   0006d8 c9              	RET			;RETURN WITH ACC SET NON=ZERO
   105                          ;
   106                          ;
   107                          ;
   108                          ;
   109                          ;
   110                          ;	... BITBANG INPUT SUBROUTINE ...
   111                          ;
   112                          ;	CALL WITH BLOCK START POINTER IN HL. RETURNS WITH
   113                          ;	HL POINTING TO LAST BYTE+1 OF BLOCK RECEIVED.
   114                          ;	THE CARRY BIT IS SET IF THE BUFFER FILLED UP BEFORE
   115                          ;	THE BIT STREAM STOPPED.
   116                          ;
   117                          ;
   118                          RXBLOCK:
   119                          ;	LD	DE,2730		;SET ABORT COUNTER FOR 32 MILLISECONDS
   120   0006d9 010000          	LD	BC,0		;CLEAR B/C FOR CHECKSUM DERRIVATION
   121   0006dc 1829            	JR	RXB35		;GO START LOOPING FOR START BIT
   122                          ;
   123   0006de 79              RXB1:	LD	A,C
   124   0006df 80              	ADD	A,B
   125   0006e0 ce00            	ADC	A,0		;ACCUMULATE CHECKSUM ATARI STYLE
   126   0006e2 4f              	LD	C,A
   127   0006e3 e3              	EX	(SP),HL
   128   0006e4 e3              	EX	(SP),HL
   129   0006e5 e3              	EX	(SP),HL
   130   0006e6 e3              	EX	(SP),HL
   131   0006e7 0608            	LD	B,8
   132                          ;
   133                          ;	SERIAL->PARALLEL CONVERSION AT 52 MICROSECONDS PER BIT
   134                          ;
   135   0006e9 3e0b            RXB2:	LD	A,11		;  7 CYCLES
   136   0006eb 3e0b            	LD	A,11		;  7 CYCLES
   137   0006ed 00              	NOP			;  4 CYCLES
   138   0006ee 3d              RXB3:	DEC	A		; 44 CYCLES  (11*4)
   139   0006ef c2ee06          	JP	NZ,RXB3		;110 CYCLES  (11*10)
   140   0006f2 db70            	IN	A,(ATARI)	; 11 CYCLES
   141   0006f4 17              	RLA			;  4 CYCLES
   142   0006f5 cb1a            	RR	D		;  8 CYCLES
   143   0006f7 10f0            	DJNZ	RXB2		; 13 CYCLES  (8 ON FINAL BIT)
   144                          
   145   0006f9 42              	LD	B,D		;SAVE COPY OF LAST DATA BYTE IN B
   146   0006fa 72              	LD	(HL),D		;THEN STORE IN MEMORY BUFFER @HL
   147   0006fb 23              	INC	HL
   148   0006fc 7c              	LD	A,H
   149                          iobuflenhi	equ	(IOBUFF+LEN) / 256
   150   0006fd fec3            	CP	iobuflenhi
   151   0006ff 3f              	CCF
   152   000700 d8              	RET	C		;RETURN WITH CARRY SET IF BUFFER FILLED
   153                          
   154   000701 3e06            	ld	a, 6
   155   000703 3d              rxb3a:	dec	a
   156   000704 c20307          	jp	nz, rxb3a
   157                          
   158                          RXB35:	;LD	A,01000111B
   159                          	;OUT	(CTC0),A	;PUT CTC0 IN COUNTER MODE
   160                          	;XOR	A
   161                          	;OUT	(CTC0),A	;COUNT DATA HIGH->LOW EDGES MOD 256
   162   000707 11a101          	LD	DE,417		;5 MILLISECONDS @ 12 MICROSECONDS/LOOP
   163                          RXB4:	;IN	A,(CTC0)
   164                          	;OR	A
   165                          	;JR	NZ,RXB1		;NEW BYTE IS COMING IF START BIT LOW
   166   00070a db70            	IN	A, (ATARI)
   167   00070c 17              	RLA
   168   00070d 30cf            	JR	NC, RXB1
   169   00070f 1b              	DEC	DE
   170   000710 7a              	LD	A,D
   171   000711 b3              	OR	E
   172   000712 20f6            	JR	NZ,RXB4		;ELSE LOOP TILL TIMER RUNS OUT
   173                          
   174   000714 c9              	RET			;RETURN WITH CARRY CLEAR IF TIMED OUT
   175                          ;
   176                          ;
   177                          ;
   178                          ;
   179                          ;	**** PAGE BOUNDARY SENSITIVE CODE STARTS HERE ****
   180                          ;
   181                          SERPAGE	EQU	$
   182                          ;
   183                          ;
   184                          ;	... DAMN FAST TRASMIT INTERRUPTS ...
   185                          ;
   186                          ;	HL ... POINTS TO DATA BLOCK TO BE SENT
   187                          ;	 D ... HOLDS DATA POLARITY MASK
   188                          ;	 E ... USED TO ACCUMULATE CHECKSUM
   189                          ;	 B ... USED FOR DJNZ TO COUNT BITS
   190                          ;	 C ... USED FOR PARALLEL-SERIAL OUTPUT
   191                          ;
   192                          ;
   193                          STARBIT:
   194   000715 af              	XOR	A
   195   000716 d350            	OUT	(ATROUT),A	;SEND START BIT
   196   000718 fb              	EI
   197   000719 7e              	LD	A,(HL)		;LOAD A WITH TRANSMIT DATA BYTE
   198   00071a 23              	INC	HL		; AND INCREMENT BUFFER POINTER
   199   00071b aa              	XOR	D		;DO DATA POLARITY THING
   200   00071c 4f              	LD	C,A		;THEN STUFF IN C FOR SHIFTING OUT
   201   00071d 83              	ADD	A,E
   202   00071e ce00            	ADC	A,0
   203   000720 5f              	LD	E,A		;ACCUMULATE CHECKSUM IN E
   204   000721 3e28            	LD	A,DATBIT & 255
   205   000723 3212ff          	LD	(CTCVEC+2),A	;FIX BAUDRATE INTERRUPT VECTOR
   206   000726 ed4d            	RETI			;RETURN TO IDLE LOOP
   207                          ;
   208                          ;
   209                          ;
   210                          DATBIT:
   211   000728 79              	LD	A,C
   212   000729 d350            	OUT	(ATROUT),A	;SEND DATA BIT (LSB)
   213   00072b fb              	EI
   214   00072c cb19            	RR	C		;SHIFT DATA FOR NEXT BIT
   215   00072e 1005            	DJNZ	DATB2		;DECREMENT AND SKIP IF NOT LAST BIT
   216                          
   217   000730 3e37            	LD	A,STOPB1 & 255
   218   000732 3212ff          	LD	(CTCVEC+2),A	;THEN FIX VECTOR TO SEND STOP BIT
   219   000735 ed4d            DATB2:	RETI			;RETURN TO IDLE LOOP
   220                          ;
   221                          ;
   222                          ;
   223                          STOPB1:
   224   000737 3e01            	LD	A,1
   225   000739 d350            	OUT	(ATROUT),A	;SEND STOP BIT
   226   00073b fb              	EI
   227   00073c 7c              	LD	A,H
   228   00073d fec3            	CP	iobuflenhi
   229   00073f 3009            	JR	NC,STOP1A	;JUMP IF BUFFER END REACHED
   230                          
   231   000741 0608            	LD	B,8		;LOAD BITCOUNT FOR NEXT RECEIVE BYTE
   232   000743 3e15            	LD	A,STARBIT & 255
   233   000745 3212ff          	LD	(CTCVEC+2),A
   234   000748 ed4d            	RETI			;SET TO SEND SECOND STOP BIT
   235                          ;
   236   00074a 3e51            STOP1A:	LD	A,ENDBIT & 255
   237   00074c 3212ff          	LD	(CTCVEC+2),A	;SET TO END TRANSMISSION
   238   00074f ed4d            	RETI
   239                          ;
   240                          ;
   241                          ;
   242                          ;	IF	(HIGH SERPAGE) NE (HIGH $)
   243                          ;	.ERROR /PAGE ERROR ON ATARI SIO/
   244                          ;	ENDIF
   245                          ;
   246                          ;
   247                          ;
   248                          ENDBIT:
   249   000751 3e03            	LD	A,00000011B	;STOP INTERRUPTS FROM BAUDRATE CTC
   250   000753 d381            	OUT	(CTC1),A	; BUT KEEP ON COUNTING TO CLOCK U26
   251   000755 fb              	EI
   252   000756 3eff            	LD	A,255
   253   000758 3212ff          	LD	(CTCVEC+2),A	;SET VECTOR BACK TO STANDARD PLACE
   254   00075b e1              	POP	HL		;DISCARD IRQ RETURN ADDRESS AND RETURN
   255   00075c ed4d            	RETI			; TO SECOND ADDRESS ON STACK
   256                          ;
   257                          ;
   258                          ;	**** END PAGE BOUNDARY RESTRICTIONS ****
   259                          ;
   260                          ;
   261   00075e 00              	nop
   262   00075f 00              	nop
   263   000760 00              	nop
   264   000761 00              	nop
   265                          
   266                          
sally2-f000.asm:
    48                          		INCLUDE	"ATARI.MAC"
ATARI.MAC:
     1                          ;
     2                          ;
     3                          ;	PAGE
     4                          ;
     5                          ;	<<< MAIN LOOP FOR ATARI DISK EMULATOR >>>
     6                          ;
     7                          ;
     8                          ;
     9                          ;
    10                          EMULATOR:
    11   000762 3e01            	LD	A,1
    12   000764 d352            	OUT	(BANKSW),A	;TURN OFF THE ROM
    13                          ;
    14                          ;	CHECK TO DETERMINE WHICH CONSOLE IS ACTIVE
    15                          ;
    16   000766 21fec2          LOGON:	LD	HL,IOBUFF+LEN-2
    17   000769 f3              	DI
    18   00076a cdd906          	CALL	RXBLOCK		;LISTEN FOR A MESSAGE FROM ABOVE
    19   00076d fb              	EI
    20   00076e 30f6            	JR	NC,LOGON	;KEEP LOOPING TILL SOMETHING RECEIVED
    21   000770 2afec2          	LD	HL,(IOBUFF+LEN-2)
    22   000773 11e680          	LD	DE,80E6H
    23   000776 b7              	OR	A
    24   000777 ed52            	SBC	HL,DE
    25   000779 cade03          	JP	Z,MINIMON	;GOTO MONITOR IF 9600 BAUD <CR>
    26                          ;
    27                          ;	ENTER ATARI DISK EMULATOR MODE
    28                          ;
    29   00077c 3e03            	LD	A,3
    30   00077e 3233ff          	LD	(RWMAX),A	;DO LESS RETRIES IN ATARI MODE
    31   000781 3e38            	LD	A,38H		;LOAD ACC WITH 'JR C,XX' OPCODE
    32   000783 328101          	LD	(KLUDGE),A	;CRIPPLE READY ERROR FROM 'SELECT'
    33   000786 db50            	IN	A,(SERIN)
    34   000788 cb5f            	BIT	3,A
    35   00078a 2005            	JR	NZ,HAS850	;JUMP IF 850 JUMPER PRESENT
    36                          
    37   00078c 3eff            	LD	A,255
    38   00078e 322308          	LD	(PTRID),A	;ELSE ZAP PRINTER ID IN TABLE
    39                          
    40   000791 21e107          HAS850:	LD	HL,DUMMY
    41   000794 221900          	LD	(RENEW+1),HL	;MAKE DUMMY CONSOLE RE-INIT VECTOR
    42   000797 ed5b1940        	LD	DE,(RENEW+1+16384)
    43   00079b b7              	OR	A
    44   00079c ed52            	SBC	HL,DE
    45   00079e 280c            	JR	Z,MAIN		;JUMP IF 16K MEMORY SIZE MACHINE
    46                          
    47   0007a0 210022          	LD	HL, 02200h	;was 0000h, now 0800h+26*256 track buffer = 2200h
    48   0007a3 224bff          	LD	(PBASE),HL	;ELSE SETUP FOR 48K PRINTER BUFFER
    49   0007a6 21ff9d          	LD	HL,09DFFH	;bfffh - 2200h = 9dffh
    50   0007a9 224dff          	LD	(PSIZE),HL
    51                          
    52   0007ac cdd108          MAIN:	CALL	SPOOLER		;KEEP BACKGROUND PRINTING GOING
    53   0007af 2a3aff          	LD	HL,(FSMVEC)
    54   0007b2 cdbd07          	CALL	CALLHL		;DO ATARI TASK ROUTINE
    55   0007b5 2a3cff          	LD	HL,(EXTVEC)
    56   0007b8 cdbd07          	CALL	CALLHL		;DO EXTRA TASK ROUTINE
    57   0007bb 18ef            	JR	MAIN
    58                          ;
    59                          ;
    60   0007bd e9              CALLHL:	JP	(HL)
    61                          ;
    62                          ;
    63                          ;
    64                          PWRWAIT:
    65   0007be db70            	IN	A,(ATARI)
    66   0007c0 e68a            	AND	10001010B	;MASK TO DATA/POWER/COMMAND BITS
    67   0007c2 fe8a            	CP	10001010B
    68   0007c4 c0              	RET	NZ
    69                          
    70   0007c5 f3              	DI
    71   0007c6 af              	XOR	A
    72   0007c7 3255ff          	LD	(CMDFLG),A	;RESET COMMAND FRAME FLAG
    73   0007ca d357            	OUT	(CDMUX),A	;SET MUX TO GATE COMMAND LINE TO CTC0
    74   0007cc 3ed7            	LD	A,11010111B
    75   0007ce d380            	OUT	(CTC0),A	;RESET CTC AND ARM FOR HIGH->LOW IRQ
    76   0007d0 3e01            	LD	A,1
    77   0007d2 d380            	OUT	(CTC0),A
    78   0007d4 219906          	LD	HL,CSTART
    79   0007d7 2210ff          	LD	(CTCVEC),HL	;STORE INTERRUPT VECTOR
    80   0007da fb              	EI
    81   0007db 21e207          	LD	HL,CMDWAIT
    82   0007de 223aff          	LD	(FSMVEC),HL	;SET FSM VECTOR TO 'CMDHIGH' STATE
    83   0007e1 c9              DUMMY:	RET
    84                          ;
    85                          ;
    86                          ;
    87                          CMDWAIT:
    88   0007e2 3a55ff          	LD	A,(CMDFLG)
    89   0007e5 b7              	OR	A		;SEE IF COMMAND FRAME HAS ARRIVED
    90   0007e6 c8              	RET	Z		;EXIT IF NOTHING HAS HAPPENED
    91                          
    92   0007e7 fe01            	CP	1
    93   0007e9 2808            	JR	Z,CMDL4		;PROCESS COMMAND IF GOOD FRAME RECVD
    94                          
    95   0007eb f3              	DI			;ELSE RESET INTERRUPT AND START AGAIN
    96   0007ec 3e03            	LD	A,00000011B
    97   0007ee d380            	OUT	(CTC0),A
    98   0007f0 fb              	EI
    99   0007f1 1816            	JR	CMDL5		;GO SET FSM VECTOR
   100                          ;
   101                          ;
   102                          CFRAME	EQU	IOBUFF+LEN-5	;COMMAND FRAME IS LAST 5 BYTES OF BUFF
   103                          ;
   104   0007f3 3afbc2          CMDL4:	LD	A,(CFRAME)
   105   0007f6 2a38ff          	LD	HL,(IDPTR)	;GET POINTER TO ID CODE TABLE
   106   0007f9 cd1008          	CALL	SCAN		;SCAN TABLE FOR MATCHING UNIT ID CODE
   107   0007fc 200b            	JR	NZ,CMDL5	;EXIT IF COMMAND IS NOT FOR US
   108                          
   109   0007fe 3afcc2          	LD	A,(CFRAME+1)
   110   000801 cd1008          	CALL	SCAN		;SCAN FOR COMMAND CODE IN TABLE
   111   000804 2003            	JR	NZ,CMDL5	;ERROR IF NO MATCH FOUND
   112                          
   113   000806 cdbd07          	CALL	CALLHL		;GO TO COMMAND PROCESSOR @HL
   114                          ;
   115   000809 21be07          CMDL5:	LD	HL,PWRWAIT
   116   00080c 223aff          	LD	(FSMVEC),HL	;SET FSM VECTOR BACK TO IDLE STATE
   117   00080f c9              	RET
   118                          ;
   119                          ;
   120                          ;
   121                          ;
   122                          SCAN:
   123   000810 4e              	LD	C,(HL)		;LOAD BC WITH TABLE LENGTH @HL
   124   000811 23              	INC	HL
   125   000812 46              	LD	B,(HL)
   126   000813 23              	INC	HL
   127   000814 edb1            	CPIR			;SCAN STRING @HL FOR MATCH WITH ACC
   128   000816 c0              	RET	NZ		;EXIT IF NO MATCH
   129                          
   130   000817 f5              	PUSH	AF
   131   000818 09              	ADD	HL,BC		;ELSE ADD RESIDUE FROM CPIR TO HL
   132   000819 09              	ADD	HL,BC		; THREE TIMES TO POINT TO ADDRESS
   133   00081a 09              	ADD	HL,BC		; CORRESPONDING TO MATCHED VALUE
   134   00081b 7e              	LD	A,(HL)
   135   00081c 23              	INC	HL
   136   00081d 66              	LD	H,(HL)
   137   00081e 6f              	LD	L,A
   138   00081f f1              	POP	AF
   139   000820 c9              	RET			;RETURN TABLE ENTRY IN HL
   140                          ;
   141                          ;
   142                          ;
   143                          ;	... DEVICE ID TABLE FOR DISK/PRINTER/RS232 COMBO BOX ...
   144                          ;
   145                          IDTAB:
   146   000821 0000            	DEFW	IDMAX
   147                          
   148   000823 40              PTRID:	DEFB	'@'		;PRINTER CONTROLLER ID CODE
   149   000824 31              	DEFB	'1'		;DISK UNIT #1 ID CODE
   150   000825 32              	DEFB	'2'		;DISK #2
   151   000826 33              	DEFB	'3'		;DISK #3
   152   000827 34              	DEFB	'4'		;DISK #4
   153   000828 5a              	DEFB	'Z'		;Z80 LOAD/DUMP/GOTO
   154                          
   155   000829 5408            	DEFW	Z80TAB
   156   00082b 3d08            	DEFW	DISKTAB
   157   00082d 3d08            	DEFW	DISKTAB
   158   00082f 3d08            	DEFW	DISKTAB
   159   000831 3d08            	DEFW	DISKTAB
   160   000833 3508            	DEFW	PTRTAB
   161                          IDMAX	EQU	($-IDTAB)/3
   162                          ;
   163                          ;
   164                          ;
   165                          PTRTAB:				;PRINTER COMMANDS
   166   000835 0000            	DEFW	PTRMAX
   167                          
   168   000837 53              	DEFB	'S'		;PRINTER STATUS
   169   000838 57              	DEFB	'W'		;PRINTER OUTPUT
   170                          
   171   000839 7808            	DEFW	PTRWRITE
   172   00083b 6208            	DEFW	PTRSTAT
   173                          PTRMAX	EQU	($-(PTRTAB+2))/3
   174                          ;
   175                          ;
   176                          ;
   177                          DISKTAB:			;DISK COMMANDS
   178   00083d 0000            	DEFW	DISKMAX
   179                          
   180   00083f 52              	DEFB	'R'		;DISK READ
   181   000840 53              	DEFB	'S'		;DISK STATUS
   182   000841 57              	DEFB	'W'		;DISK WRITE
   183   000842 50              	DEFB	'P'		;DISK PUT
   184   000843 4e              	DEFB	'N'		;GET PARAMETERS
   185   000844 4f              	DEFB	'O'		;PUT PARAMETERS
   186   000845 21              	DEFB	'!'		;FORMAT DISK
   187                          
   188   000846 380b            	DEFW	DISKINIT
   189   000848 050c            	DEFW	PUTPARAMS
   190   00084a e70b            	DEFW	GETPARAMS
   191   00084c 0509            	DEFW	DISKPUT
   192   00084e 0809            	DEFW	DISKWRITE
   193   000850 db0a            	DEFW	DISKSTAT
   194   000852 8c09            	DEFW	DISKREAD
   195                          DISKMAX	EQU	($-(DISKTAB+2))/3
   196                          ;
   197                          ;
   198                          ;
   199                          Z80TAB:				;Z80 COMMANDS
   200   000854 0000            	DEFW	Z80MAX
   201                          
   202   000856 52              	DEFB	'R'		;MEMORY READ
   203   000857 57              	DEFB	'W'		;MEMORY WRITE
   204   000858 53              	DEFB	'S'		;SET ADDRESS
   205   000859 47              	DEFB	'G'		;GOTO ADDRESS
   206                          
   207   00085a b40c            	DEFW	Z80GOTO
   208   00085c a60c            	DEFW	Z80SET
   209   00085e 7b0c            	DEFW	Z80WRITE
   210   000860 5f0c            	DEFW	Z80READ
   211                          Z80MAX	EQU	($-(Z80TAB+2))/3
   212                          ;
   213                          ;
   214                          ;
   215                          ;	PAGE
   216                          ;
   217                          ;
   218                          ;	... PRINTER STATUS COMMAND PROCESSOR ...
   219                          ;
   220                          PTRSTAT:
   221   000862 cd4a0c          	CALL	SENDACK
   222   000865 2143ff          	LD	HL,PSMSG
   223   000868 11fcc2          	LD	DE,IOBUFF+LEN-4
   224   00086b d5              	PUSH	DE
   225   00086c 010400          	LD	BC,4
   226   00086f edb0            	LDIR			;COPY PRINTER STATUS FRAME FROM RAM
   227   000871 e1              	POP	HL
   228   000872 114300          	LD	DE,'C'		;SEND PRINTER STATUS UN-INVERTED
   229   000875 c36c06          	JP	SENDBUFF
   230                          ;	ret
   231                          ;
   232                          ;
   233                          ;	... PRINTER WRITE COMMAND PROCESSOR ...
   234                          ;
   235                          PTRWRITE:
   236   000878 cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
   237   00087b cdb906          	CALL	RECVBUFF	;GET PRINT DATA FROM SERIAL BUS
   238   00087e c0              	RET	NZ		;EXIT IF ERROR OR TIMEOUT
   239                          
   240   00087f 112800          	LD	DE,40
   241   000882 b7              	OR	A
   242   000883 ed52            	SBC	HL,DE
   243   000885 c0              	RET	NZ		;ERROR IF RX BLOCK LENGTH <> 40 BYTES
   244                          
   245   000886 cd4a0c          	CALL	SENDACK		;ELSE SEND 'ACK'
   246   000889 2100c1          	LD	HL,IOBUFF
   247   00088c 0628            	LD	B,40
   248   00088e 7e              PWRIT3:	LD	A,(HL)
   249   00088f fe9b            	CP	9BH		;CHECK FOR 'ATASCII' CARRIAGE RETURN
   250   000891 2005            	JR	NZ,PWRT3A
   251                          
   252   000893 213eff          	LD	HL,NEWLIN
   253   000896 46              	LD	B,(HL)		;OUTPUT PRINTER'S NEWLINE CHARACTER(S)
   254   000897 23              	INC	HL
   255                          
   256   000898 e5              PWRT3A:	PUSH	HL
   257   000899 2a4fff          	LD	HL,(PCOUNT)
   258   00089c ed5b4dff        	LD	DE,(PSIZE)
   259   0008a0 b7              	OR	A
   260   0008a1 ed52            	SBC	HL,DE		;TEST IF PRINTER BUFFER IS FULL
   261   0008a3 e1              	POP	HL
   262   0008a4 380e            	JR	C,PWRIT4	;STORE ANOTHER CHARACTER IF NOT FULL
   263                          
   264   0008a6 e5              	PUSH	HL
   265   0008a7 c5              	PUSH	BC
   266   0008a8 cdd108          	CALL	SPOOLER		;TRY TO CLEAR OUT BUFFER
   267   0008ab c1              	POP	BC
   268   0008ac e1              	POP	HL
   269   0008ad db70            	IN	A,(ATARI)
   270   0008af e602            	AND	00000010B	;TEST ATARI COMMAND LINE AND
   271   0008b1 20e5            	JR	NZ,PWRT3A	;STAY IN LOOP IF INACTIVE
   272                          
   273   0008b3 c9              	RET			;ELSE ABORT PRINTING AND RETURN
   274                          ;
   275   0008b4 7e              PWRIT4:	LD	A,(HL)
   276   0008b5 23              	INC	HL
   277   0008b6 e5              	PUSH	HL
   278   0008b7 c5              	PUSH	BC
   279   0008b8 2a51ff          	LD	HL,(PINP)
   280   0008bb cdf108          	CALL	INDEX		;GET INDEX TO FIFO INPUT PLACE
   281   0008be ed5351ff        	LD	(PINP),DE	;STORE UPDATED INPUT OFFSET
   282   0008c2 77              	LD	(HL),A		;STORE CHARACTER IN QUEUE
   283   0008c3 2a4fff          	LD	HL,(PCOUNT)
   284   0008c6 23              	INC	HL		;BUMP FIFO CHARACTER COUNTER
   285   0008c7 224fff          	LD	(PCOUNT),HL
   286   0008ca c1              	POP	BC
   287   0008cb e1              	POP	HL
   288   0008cc 10c0            	DJNZ	PWRIT3		;REPEAT TO END OF STRING
   289                          
   290   0008ce c3540c          	JP	SENDCOMP	;SEND 'COMPLETE' TO ATARI
   291                          ;	ret
   292                          ;
   293                          ;
   294                          ;
   295                          SPOOLER:
   296   0008d1 2a4fff          	LD	HL,(PCOUNT)
   297   0008d4 7c              	LD	A,H
   298   0008d5 b5              	OR	L
   299   0008d6 c8              	RET	Z		;EXIT IF NO DATA IN FIFO TO PRINT
   300                          
   301   0008d7 cd1500          	CALL	LISTV+3
   302   0008da c0              	RET	NZ		;EXIT IF PRINTER BUSY
   303                          
   304   0008db 2a53ff          	LD	HL,(POUT)
   305   0008de cdf108          	CALL	INDEX		;GET POINTER WITH AUTO-INCREMENT
   306   0008e1 ed5353ff        	LD	(POUT),DE
   307   0008e5 4e              	LD	C,(HL)
   308   0008e6 cd1200          	CALL	LISTV		;PRINT CHARACTER AND EXIT
   309   0008e9 2a4fff          	LD	HL,(PCOUNT)
   310   0008ec 2b              	DEC	HL		;DIMINISH BUFFER COUNT BY ONE
   311   0008ed 224fff          	LD	(PCOUNT),HL
   312   0008f0 c9              	RET
   313                          ;
   314                          ;
   315                          ;
   316                          ;
   317                          INDEX:
   318   0008f1 eb              	EX	DE,HL
   319   0008f2 2a4bff          	LD	HL,(PBASE)
   320   0008f5 19              	ADD	HL,DE		;ADD OFFSET TO FIFO BASE ADDRESS
   321   0008f6 e5              	PUSH	HL
   322   0008f7 13              	INC	DE		;BUMP OFFSET NOW IN DE
   323   0008f8 2a4dff          	LD	HL,(PSIZE)
   324   0008fb b7              	OR	A
   325   0008fc ed52            	SBC	HL,DE		;COMPARE TO MAX OFFSET VALUE
   326   0008fe 3003            	JR	NC,INDEX2
   327   000900 110000          	LD	DE,0		;SET OFFSET TO ZERO IF ROLL-OVER
   328   000903 e1              INDEX2:	POP	HL
   329   000904 c9              	RET			;RETURN DE=OFFSET AND HL=POINTER
   330                          ;
   331                          ;
   332                          ;
   333                          ;	... DISK WRITE COMMAND PROCESSOR ...
   334                          ;
   335                          DISKPUT:
   336   000905 af              	XOR	A
   337   000906 1802            	JR	DWRT0
   338                          ;
   339                          DISKWRITE:
   340   000908 3e01            	LD	A,1
   341   00090a 32b5ff          DWRT0:	LD	(VFLAG),A
   342   00090d cd280c          	CALL	DRVINDEX	;INDEX TO GET DRIVE PARAMETER POINTER
   343   000910 d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   344                          
   345   000911 cd4a0c          	CALL	SENDACK
   346   000914 cdb906          	CALL	RECVBUFF	;ELSE GO QUICK TO READ DATA FRAME
   347   000917 c0              	RET	NZ		;EXIT IF BAD CHECKSUM
   348                          
   349   000918 22a9ff          	LD	(LOGSIZ),HL	;SAVE DATA BLOCK LENGTH
   350   00091b 118000          	LD	DE,128
   351   00091e b7              	OR	A
   352   00091f ed52            	SBC	HL,DE		;TEST FOR 128 BYTE FRAME
   353   000921 2804            	JR	Z,DWRT1
   354   000923 b7              	OR	A
   355   000924 ed52            	SBC	HL,DE		;TEST FOR 256 BYTE FRAME
   356   000926 c0              	RET	NZ
   357                          
   358   000927 cd4a0c          DWRT1:	CALL	SENDACK		;SEND 'ACK' IF BLOCKSIZE IS 128 OR 256
   359   00092a cd100a          	CALL	SECTRAN		;SET DISK PARAMETERS FOR WRITE
   360   00092d 204e            	JR	NZ,DWRT4	;JUMP IF ERROR FROM 'SECTRAN'
   361                          
   362   00092f 2100c1          	LD	HL,IOBUFF
   363   000932 229cff          	LD	(DKIOCB+DSKPTR),HL
   364   000935 3aa9ff          	LD	A,(LOGSIZ)
   365   000938 47              	LD	B,A		;PREPARE TO COMPLIMENT DISK DATA BLOCK
   366   000939 7e              DWRT2:	LD	A,(HL)
   367   00093a 2f              	CPL
   368   00093b 77              	LD	(HL),A		;COMPLIMENT DISK DATA BLOCK
   369   00093c 23              	INC	HL
   370   00093d 10fa            	DJNZ	DWRT2		;REPEAT TO END OF BLOCK
   371   00093f 3e02            	LD	A,PUTSEC
   372   000941 3298ff          	LD	(DKIOCB+DSKOP),A
   373   000944 dd2198ff        	LD	IX,DKIOCB
   374   000948 cd0f00          	CALL	DISKV		;CALL PHYSICAL DISK DRIVER
   375   00094b 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   376   00094e b7              	OR	A
   377   00094f 202c            	JR	NZ,DWRT4	;BOMB OUT NOW IF DISK ERROR
   378                          
   379   000951 3ab5ff          	LD	A,(VFLAG)
   380   000954 b7              	OR	A
   381   000955 2826            	JR	Z,DWRT4		;EXIT OK IF NOT WRITE WITH VERIFY
   382                          
   383   000957 3e01            	LD	A,GETSEC
   384   000959 3298ff          	LD	(DKIOCB+DSKOP),A
   385   00095c 2100c3          	LD	HL,IOBUFF+LEN
   386   00095f 229cff          	LD	(DKIOCB+DSKPTR),HL
   387   000962 cd0f00          	CALL	DISKV		;ELSE READ SECTOR BACK FOR VERIFY
   388   000965 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   389   000968 b7              	OR	A
   390   000969 2012            	JR	NZ,DWRT4	;BOMB AGAIN IF READ ERROR
   391                          
   392   00096b 2100c1          	LD	HL,IOBUFF
   393   00096e 1100c3          	LD	DE,IOBUFF+LEN
   394   000971 3a9eff          	LD	A,(DKIOCB+DSKAUX)
   395   000974 47              	LD	B,A		;PREPARE TO COMPARE 128 OR 256 BYTES
   396   000975 1a              DWRT3:	LD	A,(DE)
   397   000976 ae              	XOR	(HL)
   398   000977 200b            	JR	NZ,DWRT5
   399   000979 23              	INC	HL
   400   00097a 13              	INC	DE
   401   00097b 10f8            	djnz	DWRT3		;fall through last time with acc=0
   402                          
   403   00097d cde309          DWRT4:	CALL	SETSTAT		;DO STATUS SETTING STUFF
   404   000980 7b              	LD	A,E
   405   000981 c3560c          	JP	SENDCHAR	;SEND 'COMPLETE' OR 'ERROR' TO ATARI
   406                          ;	ret
   407                          ;
   408   000984 af              DWRT5:	xor	a
   409   000985 cd060a          	call	SSTS4		;set hardware status=0 but set bad r/w
   410   000988 7b              	ld	a,e
   411   000989 c3560c          	jp	SENDCHAR
   412                          ;	ret
   413                          ;
   414                          ;
   415                          ;
   416                          ;	... DISK READ COMMAND PROCESSOR ...
   417                          ;
   418                          DISKREAD:
   419   00098c cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   420   00098f d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   421                          
   422   000990 cd4a0c          	CALL	SENDACK
   423   000993 cd100a          	CALL	SECTRAN		;SET PARAMETERS FOR DISK OPERATION
   424   000996 f5              	PUSH	AF		;SAVE ERROR STATUS FROM 'SECTRAN'
   425   000997 280f            	JR	Z,DRD2		;JUMP IF PARAMS SET OK
   426                          
   427   000999 fd5606          	LD	D,(IY+SECLEN)
   428   00099c fd5e07          	LD	E,(IY+SECLEN+1)	;LOAD DE WITH SECTOR LEN FROM 'DMATRIX'
   429   00099f 7a              	LD	A,D
   430   0009a0 b3              	OR	E
   431   0009a1 2009            	JR	NZ,DRD2A	;JUMP IF LENGTH <> 0
   432                          
   433   0009a3 118000          	LD	DE,128		;ELSE REVERT TO 128 BYTES
   434   0009a6 1804            	JR	DRD2A
   435                          ;
   436   0009a8 ed5b9eff        DRD2:	LD	DE,(DKIOCB+DSKAUX) ;LOAD DE WITH PHYSICAL SECTOR LENGTH
   437   0009ac 2afdc2          DRD2A:	LD	HL,(CFRAME+2)
   438   0009af 010400          	LD	BC,4
   439   0009b2 b7              	OR	A
   440   0009b3 ed42            	SBC	HL,BC		;TEST IF ACCESSING SECTOR# 1,2 OR 3
   441   0009b5 3003            	JR	NC,DRD3		;JUMP IF NOT ACCESSING A BOOT SECTOR
   442   0009b7 118000          	LD	DE,128
   443   0009ba ed53a9ff        DRD3:	LD	(LOGSIZ),DE
   444   0009be 2100c3          	LD	HL,IOBUFF+LEN
   445   0009c1 b7              	OR	A
   446   0009c2 ed52            	SBC	HL,DE		;COMPUTE STARTING PLACE IN BUFFER
   447   0009c4 f1              	POP	AF
   448   0009c5 2014            	JR	NZ,DRD4		;JUMP IF ERROR FROM 'SECTRAN' ABOVE
   449                          
   450   0009c7 229cff          	LD	(DKIOCB+DSKPTR),HL
   451   0009ca 3e01            	LD	A,GETSEC
   452   0009cc 3298ff          	LD	(DKIOCB+DSKOP),A
   453   0009cf dd2198ff        	LD	IX,DKIOCB
   454   0009d3 e5              	PUSH	HL
   455   0009d4 cd0f00          	CALL	DISKV		;CALL DISK I/O HANDLER
   456   0009d7 e1              	POP	HL
   457   0009d8 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   458                          
   459   0009db cde309          DRD4:	CALL	SETSTAT		;TEST AND STORE STATUS STUFF
   460   0009de 16ff            	LD	D,255		;SET MASK TO INVERT DISK DATA
   461   0009e0 c36c06          	JP	SENDBUFF	;SEND RESPONSE TO ATARI
   462                          ;	ret
   463                          ;
   464                          ;
   465                          ;
   466                          ;	ROUTINE TO CHECK STATUS AFTER READ/WRITE
   467                          ;
   468                          SETSTAT:
   469   0009e3 b7              	OR	A
   470   0009e4 200a            	JR	NZ,SSTS1	;JUMP IF SOME DISK ERROR INDICATED
   471                          
   472   0009e6 fd770d          	LD	(IY+HDWSTS),A	;ELSE STORE ZEROS IN HARDWARE STATUS
   473   0009e9 1e43            	LD	E,'C'		;LOAD E WITH 'COMPLETE' CHARACTER
   474   0009eb fdcb0c96        	RES	BADRW,(IY+CMDSTS)
   475   0009ef c9              	RET
   476                          ;
   477                          ;	ACC HOLDS NON-ZERO VALUE INDICATING A DISK ERROR
   478                          ;
   479   0009f0 cb77            SSTS1:	BIT	6,A		;BIT HOLDS WPROT STATUS AFTER WRITE
   480   0009f2 2802            	JR	Z,SSTS2
   481                          
   482   0009f4 e69f            	AND	10011111B
   483                          
   484   0009f6 cb6f            SSTS2:	BIT	5,A		;HOLDS DD MARK STATUS AFTER READ
   485   0009f8 2802            	JR	Z,SSTS3
   486                          
   487   0009fa f660            	OR	01100000B	;CREATE 1771 DD ADDRESS MARK STATUS
   488                          
   489   0009fc 4f              SSTS3:	LD	C,A
   490   0009fd e681            	AND	10000001B	;TEST FOR 'READY' OR 'BUSY' BITS SET
   491   0009ff 79              	LD	A,C
   492   000a00 2804            	JR	Z,SSTS4		;JUMP IF NOT READY/BUSY LOCK UP
   493                          
   494   000a02 e67e            	AND	01111110B	;ELSE CLEAR BOTH BITS AND REPLACE
   495   000a04 f610            	OR	00010000B	; WITH 'RNF' ERROR BIT INSTEAD
   496                          
   497   000a06 fd770d          SSTS4:	LD	(IY+HDWSTS),A	;STORE HARDWARE STATUS FOR ATARI
   498   000a09 1e45            	LD	E,'E'		;LOAD E WITH 'ERROR' CHARACTER
   499   000a0b fdcb0cd6        	SET	BADRW,(IY+CMDSTS)
   500   000a0f c9              	RET
   501                          ;
   502                          ;
   503                          ;
   504                          ;
   505                          ;
   506                          ;
   507                          SECTRAN:
   508                          ;	BIT	CONFIG,(IY+FLAGS)
   509                          ;	JP	NZ,STRAN3	;SKIP IF DRIVE HAS BEEN CONFIGURED
   510                          
   511   000a10 3a2eff          	LD	A,(DRVOFF)
   512   000a13 b7              	OR	A
   513   000a14 2811            	JR	Z,STRAN2	;JUMP IF DRIVES HAVE NOT BEEN STOPPED
   514                          
   515   000a16 af              	XOR	A
   516   000a17 322eff          	LD	(DRVOFF),A	;CLEAR DRIVES-STOPPED FLAGS
   517   000a1a 2164ff          	LD	HL,DMATRIX+FLAGS
   518   000a1d 111000          	LD	DE,16
   519   000a20 0604            	LD	B,4
   520   000a22 cb86            STRAN1:	RES	FIRST,(HL)	;ZIP THRU ARRAY RESETING 'FIRST' FLAGS
   521   000a24 19              	ADD	HL,DE		; TO FORCE MEDIA TO BE EXAMINED ANEW
   522   000a25 10fb            	DJNZ	STRAN1
   523                          
   524   000a27 fdcb0e46        STRAN2:	BIT	FIRST,(IY+FLAGS)
   525   000a2b 206d            	JR	NZ,STRAN3	;SKIP MEDIA CHECK IF DRIVE IS ACTIVE
   526                          
   527   000a2d 3e03            	LD	A,GETID
   528   000a2f 3298ff          	LD	(DKIOCB+DSKOP),A
   529   000a32 3a99ff          	LD	A,(DKIOCB+DSKDRV)
   530   000a35 2120ff          	LD	HL,DRVTAB
   531   000a38 85              	ADD	A,L
   532   000a39 6f              	LD	L,A		;POINT TO HEAD POSITION FOR DRIVE#
   533   000a3a 7e              	LD	A,(HL)
   534   000a3b fe50            	CP	80
   535   000a3d 3801            	JR	C,STR20		;JUMP IF TRACK# IN VALID RANGE
   536   000a3f af              	XOR	A		;ELSE GOTO TRACK ZERO
   537   000a40 329aff          STR20:	LD	(DKIOCB+DSKTRK),A
   538   000a43 21abff          	LD	HL,IDBUF
   539   000a46 229cff          	LD	(DKIOCB+DSKPTR),HL
   540   000a49 dd2198ff        	LD	IX,DKIOCB
   541   000a4d cd0f00          	CALL	DISKV		;READ AN ID MARK FROM CURRENT TRACK
   542   000a50 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   543   000a53 b7              	OR	A
   544   000a54 c0              	RET	NZ		;EXIT IF DISK ERROR ON READ-ID
   545                          ;
   546                          ;	ARRIVE HERE TO SET DISK PARAMS IMPLICITLY
   547                          ;
   548   000a55 3aaeff          	LD	A,(IDBUF+3)	;GET SECTOR LENGTH BYTE FROM ID
   549   000a58 cdcd0a          	call	getsize		;compute sector length in bytes
   550   000a5b fd7006          	ld	(iy+SECLEN),b
   551   000a5e fd7107          	ld	(iy+SECLEN+1),c	;store result in 'seclen' param slot
   552   000a61 3a9eff          	LD	A,(DKIOCB+DSKAUX)
   553   000a64 07              	RLCA
   554   000a65 07              	RLCA
   555   000a66 07              	RLCA
   556   000a67 2f              	CPL
   557   000a68 e606            	AND	00000110B	;MAKE PERCOM DENSITY/SIZE BITS
   558   000a6a fd7705          	LD	(IY+MEDIA),A
   559   000a6d cb4f            	BIT	SIZE,A
   560   000a6f 2807            	JR	Z,STR25		;JUMP IF FIVE INCH DISK SELECTED
   561                          
   562   000a71 3e4d            	LD	A,77
   563   000a73 211a00          	LD	HL,26
   564   000a76 1805            	JR	STR26
   565                          ;
   566   000a78 3e28            STR25:	LD	A,40
   567   000a7a 211200          	LD	HL,18
   568   000a7d fdbe00          STR26:	cp	(iy+NTRKS)
   569   000a80 3803            	jr	c,STR27		;skip if ntrks has been set > default
   570   000a82 fd7700          	ld	(iy+NTRKS),a	;else set param to default value
   571   000a85 fd7402          STR27:	LD	(IY+NSECS),H
   572   000a88 fd7503          	LD	(IY+NSECS+1),L	;STORE SECTORS PER TRACK PARAM
   573                          
   574   000a8b fdcb0ec6        	SET	FIRST,(IY+FLAGS)
   575   000a8f 2a96ff          	LD	HL,(OLDPTR)
   576   000a92 7c              	LD	A,H
   577   000a93 b5              	OR	L
   578   000a94 2004            	JR	NZ,STRAN3	;JUMP IF NOT THE FIRST-EVER DISKOP
   579                          
   580   000a96 fd2296ff        	LD	(OLDPTR),IY	;ELSE SET POINTER TO THIS GUYS STUFF
   581                          ;
   582                          ;	ARRIVE HERE TO COMPUTE TRACK/SECTOR AND SET DISK BYTECOUNT
   583                          ;
   584   000a9a 2afdc2          STRAN3:	LD	HL,(CFRAME+2)
   585   000a9d 2b              	DEC	HL		;REMOVE +1 BIAS FROM SECTOR NUMBER
   586   000a9e 1600            	LD	D,0
   587   000aa0 fd5e03          	LD	E,(IY+NSECS+1)
   588   000aa3 3eff            	LD	A,-1
   589   000aa5 3c              STRAN4:	INC	A
   590   000aa6 b7              	OR	A
   591   000aa7 ed52            	SBC	HL,DE
   592   000aa9 30fa            	JR	NC,STRAN4	;DIVIDE ABSOLUTE SECTOR NUMBER BY SPT
   593   000aab 19              	ADD	HL,DE
   594   000aac 23              	INC	HL		;RESTORE +1 BIAS TO SECTOR NUMBER
   595   000aad 4d              	LD	C,L
   596   000aae 219bff          	LD	HL,DKIOCB+DSKSEC
   597   000ab1 71              	LD	(HL),C		;STORE PHYSICAL SECTOR#
   598                          
   599   000ab2 fdbe00          	CP	(IY+NTRKS)	;COMPARE RESULT FROM TRACK# COMPUTATION
   600   000ab5 3808            	JR	C,STRAN5	; TO 'NTRKS' PARAM AND JUMP IF LESS
   601                          
   602   000ab7 fd9600          	SUB	(IY+NTRKS)	;ELSE SUBTRACT EXTRA AND SELECT SIDE# 1
   603   000aba 2199ff          	LD	HL,DKIOCB+DSKDRV
   604   000abd cbfe            	SET	7,(HL)
   605                          
   606   000abf 329aff          STRAN5:	LD	(DKIOCB+DSKTRK),A  ;STORE PHYSICAL TRACK#
   607   000ac2 fd6606          	LD	H,(IY+SECLEN)
   608   000ac5 fd6e07          	LD	L,(IY+SECLEN+1)
   609   000ac8 229eff          	LD	(DKIOCB+DSKAUX),HL  ;STORE PHYSICAL SECTOR SIZE FOR I/O
   610   000acb af              	XOR	A
   611   000acc c9              	RET
   612                          ;
   613                          ;
   614                          ;
   615                          getsize:
   616   000acd 018000          	ld	bc,128
   617   000ad0 e603            	and	00000011b
   618   000ad2 c8              	ret	z		;sector length code=0 means 128 bytes
   619                          
   620   000ad3 cb21            getsz2:	sla	c
   621   000ad5 cb10            	rl	b		;else multiply 128 by 2,4 or 8
   622   000ad7 3d              	dec	a
   623   000ad8 20f9            	jr	nz,getsz2
   624   000ada c9              	ret
   625                          ;
   626                          ;
   627                          ;
   628                          ;
   629                          ;
   630                          ;	... DISK STATUS COMMAND PROCESSOR ...
   631                          ;
   632                          DISKSTAT:
   633   000adb cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   634   000ade d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   635                          
   636   000adf cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
   637   000ae2 cdd30b          	CALL	HASPARMS	;CHECK IF HAS NEVER BEEN ACCESSED
   638   000ae5 3ac9ff          	LD	A,(DRVTMR)
   639   000ae8 f5              	PUSH	AF		;SAVE DRIVE TIMER VALUE RIGHT NOW
   640   000ae9 3e00            	LD	A,TSTRDY
   641   000aeb 3298ff          	LD	(DKIOCB+DSKOP),A
   642   000aee dd2198ff        	LD	IX,DKIOCB
   643   000af2 cd0f00          	CALL	DISKV		;CALL DISK HANDLER TO GET TYPE 1 STATUS
   644                          
   645   000af5 fd4e0c          	LD	C,(IY+CMDSTS)	;PREPARE TO DERRIVE REST OF 'CMDSTS'
   646   000af8 fd360c00        	LD	(IY+CMDSTS),0	; AND RESET OLD STATUS BITS
   647   000afc f1              	POP	AF
   648   000afd b7              	OR	A
   649   000afe 2804            	JR	Z,DSTAT1	;JUMP IF DRIVES WERE PREVIOUSLY STOPPED
   650                          
   651   000b00 cbe1            	SET	ACTIVE,C
   652   000b02 1802            	JR	DSTAT2
   653                          ;
   654   000b04 cba1            DSTAT1:	RES	ACTIVE,C
   655   000b06 fdcb0556        DSTAT2:	BIT	DENSTY,(IY+MEDIA)
   656   000b0a 2804            	JR	Z,DSTAT3	;JUMP IF DRIVE SET FOR SINGLE DENSITY
   657                          
   658   000b0c cbe9            	SET	SEC256,C
   659   000b0e 1802            	JR	DSTAT4
   660                          ;
   661   000b10 cba9            DSTAT3:	RES	SEC256,C
   662   000b12 ddcb0876        DSTAT4:	BIT	6,(IX+DSKSTS)
   663   000b16 2804            	JR	Z,DSTAT5	;JUMP IF DRIVE IS NOT WRITE PROTECTED
   664                          
   665   000b18 cbd9            	SET	WRPROT,C
   666   000b1a 1802            	JR	DSTAT6
   667                          ;
   668   000b1c cb99            DSTAT5:	RES	WRPROT,C
   669   000b1e 21fcc2          DSTAT6:	LD	HL,IOBUFF+LEN-4
   670   000b21 e5              	PUSH	HL
   671   000b22 71              	LD	(HL),C		;STORE DRIVE COMMAND STATUS IN BUFFER
   672   000b23 23              	INC	HL
   673   000b24 fd7e0d          	LD	A,(IY+HDWSTS)
   674   000b27 2f              	CPL
   675   000b28 77              	LD	(HL),A		;STORE HARDWARE POOP NEXT
   676   000b29 23              	INC	HL
   677   000b2a 36e0            	LD	(HL),224	;STORE MAX TIMEOUT AFTER THAT
   678   000b2c 23              	INC	HL
   679   000b2d 3a2dff          	LD	A,(TRACK)
   680   000b30 77              	LD	(HL),A		;STORE TRACK# AS FOURTH BYTE
   681   000b31 e1              	POP	HL
   682   000b32 114300          	LD	DE,'C'		;SEND DISK STATUS W/O COMPLIMENT
   683   000b35 c36c06          	JP	SENDBUFF
   684                          ;	ret
   685                          ;
   686                          ;
   687                          ;
   688                          ;	... DISK FORMAT COMMAND PROCESSOR ...
   689                          ;
   690                          DISKINIT:
   691   000b38 cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   692   000b3b d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   693                          
   694   000b3c 2a4fff          	LD	HL,(PCOUNT)
   695   000b3f 7c              	LD	A,H
   696   000b40 b5              	OR	L
   697   000b41 c0              	RET	NZ		;REFUSE TO FORMAT IF SPOOLER ACTIVE
   698                          
   699   000b42 cdd30b          	CALL	HASPARMS
   700   000b45 c8              	RET	Z		;REFUSE TO FORMAT IF PARAMS NOT SET
   701                          
   702   000b46 cd4a0c          	CALL	SENDACK
   703   000b49 3e00            	LD	A,TSTRDY
   704   000b4b 3298ff          	LD	(DKIOCB+DSKOP),A
   705   000b4e dd2198ff        	LD	IX,DKIOCB
   706   000b52 cd0f00          	CALL	DISKV		;CALL DRIVER TO TEST READY/WRITE PROT
   707   000b55 cdb603          	CALL	STOPTMR		;THEN KILL CTC3 TO STOP DISK TIMER
   708   000b58 3a2fff          	LD	A,(OUTCPY)
   709   000b5b fdcb0556        	BIT	DENSTY,(IY+MEDIA)
   710   000b5f 2807            	JR	Z,DINIT2
   711                          
   712   000b61 cbbf            	RES	7,A		;RESET DENSITY BIT OF CONTROL BYTE
   713   000b63 2100c2          	LD	HL,IOBUFF+LEN-256
   714   000b66 1805            	JR	DINIT3
   715                          ;
   716   000b68 cbff            DINIT2:	SET	7,A		;SET SD/DD BIT IF SINGLE DENSITY
   717   000b6a 2180c2          	LD	HL,IOBUFF+LEN-128
   718   000b6d 322fff          DINIT3:	LD	(OUTCPY),A
   719   000b70 d330            	OUT	(LATCH),A
   720   000b72 e5              	PUSH	HL
   721   000b73 22c1ff          	LD	(SEQPTR),HL	;STORE POINTER FOR BAD SECTOR LIST
   722   000b76 210100          	LD	HL,1
   723   000b79 22bfff          	LD	(SEQNUM),HL	;RESET BAD SECTOR COUNTER
   724   000b7c 2a49ff          	LD	HL,(FMTPTR)
   725   000b7f 11b6ff          	LD	DE,FMTSTUFF
   726   000b82 010700          	LD	BC,FMTLEN
   727   000b85 07              	RLCA
   728   000b86 07              	RLCA
   729   000b87 e603            	AND	00000011B
   730   000b89 2804            	JR	Z,SFMT3
   731   000b8b 09              SFMT2:	ADD	HL,BC
   732   000b8c 3d              	DEC	A
   733   000b8d 20fc            	JR	NZ,SFMT2	;INDEX TO PROPER PARAMS FOR DISK TYPE
   734   000b8f edb0            SFMT3:	LDIR			;THEN COPY PARAMS TO 'FMTSTUFF'
   735   000b91 3aa0ff          	LD	A,(DKIOCB+DSKSTS)
   736   000b94 e6c0            	AND	11000000B
   737   000b96 2013            	JR	NZ,DINIT6	;ERROR IF NOT READY OR WRITE PROTECTED
   738                          
   739   000b98 fd7e04          	ld	a,(iy+NSIDES)	;set for SS/DS init
   740   000b9b 32bdff          	ld	(sides),a
   741   000b9e fd7e00          	ld	a,(iy+NTRKS)	;set for number of tracks
   742   000ba1 32beff          	ld	(tracks),a
   743   000ba4 fde5            	PUSH	IY
   744   000ba6 cdbe0c          	CALL	FORMAT		;CALL FORMAT SUBROUTINE
   745   000ba9 fde1            	POP	IY
   746                          
   747   000bab e1              DINIT6:	POP	HL
   748   000bac cde309          	CALL	SETSTAT		;UPDATE STATUS AS SPECIFIED BY ACC
   749   000baf 1600            	LD	D,0
   750   000bb1 cd6c06          	CALL	SENDBUFF	;SEND BAD SECTOR DATA FRAME
   751   000bb4 c33c00          	JP	ACTIVON		;THEN RESTART THE DISK TIMER
   752                          ;	ret
   753                          ;
   754                          ;
   755                          ;
   756                          ;
   757                          ;
   758                          FMTS:
   759   000bb7 9f0e            	DEFW	DD8N26		;DOUBLE DENSITY 8 INCH
   760   000bb9 e20e            	DEFW	SKEW17
   761   000bbb 1a              	DEFB	26
   762   000bbc b028            	DEFW	10416
   763                          
   764   000bbe 350e            	DEFW	DD5N18		;DOUBLE DENSITY 5 INCH
   765   000bc0 680e            	DEFW	SKEWDD
   766   000bc2 12              	DEFB	18
   767   000bc3 6a18            	DEFW	6250
   768                          
   769   000bc5 7a0e            	DEFW	SD8N26		;SINGLE DENSITY 8 INCH
   770   000bc7 c80e            	DEFW	SKEW13
   771   000bc9 1a              	DEFB	26
   772   000bca 5814            	DEFW	5208
   773                          
   774   000bcc 160e            	DEFW	SD5N18		;SINGLE DENSITY 5 INCH
   775   000bce 560e            	DEFW	SKEWSD
   776   000bd0 12              	DEFB	18
   777   000bd1 350c            	DEFW	3125
   778                          ;
   779                          ;
   780                          ;
   781                          ;
   782                          HASPARMS:
   783   000bd3 fd7e00          	LD	A,(IY+NTRKS)
   784   000bd6 b7              	OR	A
   785   000bd7 c0              	RET	NZ		;EXIT IF PARAMS HAVE BEEN SET
   786                          
   787   000bd8 2a96ff          	LD	HL,(OLDPTR)
   788   000bdb 7c              	LD	A,H		;IF POINTER IS ZERO THEN NO DRIVE
   789   000bdc b5              	OR	L		; PARAMS HAVE EVER BEEN SET
   790   000bdd c8              	RET	Z
   791                          
   792   000bde fde5            	PUSH	IY
   793   000be0 d1              	POP	DE
   794   000be1 010c00          	LD	BC,12
   795   000be4 edb0            	LDIR			;COPY BOOT DISK'S PARAMS TO THIS GUY
   796   000be6 c9              	RET
   797                          ;
   798                          ;
   799                          ;
   800                          ;
   801                          ;	... PERCOM 'N' COMMAND PROCESSOR ...
   802                          ;
   803                          GETPARAMS:
   804   000be7 cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   805   000bea d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   806                          
   807   000beb cdd30b          	CALL	HASPARMS
   808   000bee c8              	RET	Z		;EXIT IF DISK PARAMS NOT KNOWN
   809                          
   810   000bef cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
   811                          ;	SET	CONFIG,(IY+FLAGS)
   812   000bf2 fde5            	PUSH	IY
   813   000bf4 e1              	POP	HL
   814   000bf5 11f4c2          	LD	DE,IOBUFF+LEN-12
   815   000bf8 d5              	PUSH	DE
   816   000bf9 010c00          	LD	BC,12
   817   000bfc edb0            	LDIR			;COPY PARAMS TO OUTPUT BUFFER
   818   000bfe e1              	POP	HL
   819   000bff 114300          	LD	DE,'C'
   820   000c02 c36c06          	JP	SENDBUFF	;SEND 'C' AND PARAMS DATA FRAME
   821                          ;	ret
   822                          ;
   823                          ;
   824                          ;
   825                          ;	... PERCOM 'O' COMMAND PROCESSOR ...
   826                          ;
   827                          PUTPARAMS:
   828   000c05 cd280c          	CALL	DRVINDEX	;POINT IY TO DRIVE'S DATA AREA
   829   000c08 d8              	RET	C		;EXIT IF NOT A DRIVE IN OUR BOX
   830                          
   831   000c09 cd4a0c          	CALL	SENDACK
   832   000c0c cdb906          	CALL	RECVBUFF	;ATTEMPT TO READ DATA FRAME FROM ATARI
   833   000c0f c0              	RET	NZ
   834                          
   835   000c10 110c00          	LD	DE,12
   836   000c13 b7              	OR	A
   837   000c14 ed52            	SBC	HL,DE
   838   000c16 c0              	RET	NZ		;ERROR IF DATA FRAME NOT 12 BYTES
   839                          
   840   000c17 cd4a0c          	CALL	SENDACK		;ELSE SEND 'ACK' FOR DATA FRAME
   841                          ;	SET	CONFIG,(IY+FLAGS)  ;INDICATE DRIVE IS NOW CONFIGURED
   842   000c1a 2100c1          	LD	HL,IOBUFF
   843   000c1d fde5            	PUSH	IY
   844   000c1f d1              	POP	DE		;POINT DE TO PARAMETERS FOR DRIVE(N)
   845   000c20 010c00          	LD	BC,12
   846   000c23 edb0            	LDIR			;COPY NEW STUFF IN THE PLACE
   847   000c25 c3540c          	JP	SENDCOMP	;SEND 'COMPLETE' BACK TO ATARI
   848                          ;	ret
   849                          ;
   850                          ;
   851                          ;
   852                          ;	... DATA STRUCTURE FOR DRIVE PARAMETER BLOCKS ...
   853                          ;
   854                          ;NTRKS	EQU	0		;NUMBER OF TRACKS
   855                          ;STEPRT	EQU	1		;STEP RATE
   856                          ;NSECS	EQU	2		;SECTORS PER TRACK (HI/LOW)
   857                          ;NSIDES	EQU	4		;NUMBER OF SIDES
   858                          ;MEDIA	EQU	5		;MEDIA SIZE AND FORMAT BITS
   859                          ;SECLEN	EQU	6		;SECTOR LENGTH (HI/LOW)
   860                          ;DSKBITS	EQU	8		;MISC NAUGHTY BITS
   861                          ;SPARE0	EQU	9
   862                          ;SPARE1	EQU	10
   863                          ;SPARE2	EQU	11
   864                          ;
   865                          ;CMDSTS	EQU	12		;COMMAND STATUS
   866                          ;HDWSTS	EQU	13		;HARDWARE STATUS
   867                          ;
   868                          ;FLAGS	EQU	14		;FLAGS BYTE FOR DISK OPERATION
   869                          ;SPARE3	EQU	15
   870                          ;;
   871                          ;;
   872                          ;;	EQUATES FOR BITS IN 'MEDIA' BYTE
   873                          ;;
   874                          ;SIZE	EQU	1		;DISK SIZE (1=EIGHT, 0=FIVE)
   875                          ;DENSTY	EQU	2		;DENSITY (1=DOUBLE, 0=SINGLE)
   876                          ;;
   877                          ;;
   878                          ;;	EQUATES FOR BITS IN 'DSKBITS' BYTE
   879                          ;;
   880                          ;PRESENT	EQU	6		;DRIVE PRESENT (1=PRESENT)
   881                          ;;
   882                          ;;
   883                          ;;	EQUATES FOR BITS IN 'CMDSTS' BYTE
   884                          ;;
   885                          ;BADCMD	EQU	0		;BAD COMMAND FRAME BIT
   886                          ;BADDAT	EQU	1		;BAD DATA FRAME BIT
   887                          ;BADRW	EQU	2		;BAD READ/WRITE OPERATION BIT
   888                          ;WRPROT	EQU	3		;WRITE PROTECTED BIT
   889                          ;ACTIVE	EQU	4		;DRIVE READY INDICATOR BIT
   890                          ;SEC256	EQU	5		;LONG/SHORT SECTOR BIT
   891                          ;;
   892                          ;;
   893                          ;;	EQUATES FOR BITS IN 'FLAGS' BYTE
   894                          ;;
   895                          ;FIRST	EQU	0		;FIRST ACCESS FLAG (0=NOT ACCESSED)
   896                          ;CONFIG	EQU	1		;DRIVE CONFIGURED BIT (0=UNCONFIGED)
   897                          ;
   898                          ;
   899                          ;
   900                          ;
   901                          ;
   902                          DRVINDEX:
   903   000c28 3afbc2          	LD	A,(CFRAME)	;GET DRIVE# FROM COMAND FRAME
   904   000c2b d631            	SUB	'1'
   905   000c2d fe04            	CP	4
   906   000c2f 3f              	CCF
   907   000c30 d8              	RET	C		;EXIT IF NOT DRIVE 1,2,3 OR 4
   908                          
   909   000c31 2600            	LD	H,0
   910   000c33 6f              	LD	L,A
   911   000c34 29              	ADD	HL,HL
   912   000c35 29              	ADD	HL,HL
   913   000c36 29              	ADD	HL,HL
   914   000c37 29              	ADD	HL,HL		;MULTIPLY DRIVE INDEX BY 16
   915   000c38 0156ff          	LD	BC,DMATRIX
   916   000c3b 09              	ADD	HL,BC		;INDEX TO DRIVE'S PARAMETERS
   917   000c3c e5              	PUSH	HL
   918   000c3d fde1            	POP	IY		;GET POINTER INTO IY FOR RETURN
   919   000c3f fdcb0876        	BIT	PRESENT,(IY+DSKBITS)
   920   000c43 37              	SCF
   921   000c44 c8              	RET	Z		;EXIT IT DRIVE NOT PRESENT
   922                          
   923   000c45 3299ff          	LD	(DKIOCB+DSKDRV),A
   924   000c48 af              	XOR	A
   925   000c49 c9              	RET
   926                          ;
   927                          ;
   928                          ;
   929                          ;
   930                          SENDACK:
   931   000c4a db70            	IN	A,(ATARI)
   932   000c4c cb4f            	BIT	1,A
   933   000c4e 28fa            	JR	Z,SENDACK
   934                          
   935   000c50 3e41            	LD	A,'A'
   936   000c52 1802            	JR	SENDCHAR
   937                          ;
   938                          SENDCOMP:
   939   000c54 3e43            	LD	A,'C'
   940                          SENDCHAR:
   941   000c56 2101c3          	LD	HL,IOBUFF+LEN+1
   942   000c59 77              	LD	(HL),A
   943   000c5a 1600            	LD	D,0		;SET FOR TRUE DATA
   944   000c5c c38406          	JP	XMITBUF		;SEND 1 BYTE BLOCK TO ATARI
   945                          ;	ret
   946                          ;
   947                          ;
   948                          ;
   949                          ;
   950                          ;	... Z80 MEMORY READ COMMAND PROCESSOR ...
   951                          ;
   952                          Z80READ:
   953   000c5f cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND
   954   000c62 cd9c0c          	CALL	ZLENGTH		;GET ZCMD BYTECOUNT INTO BC
   955   000c65 2100c3          	LD	HL,IOBUFF+LEN
   956   000c68 b7              	OR	A
   957   000c69 ed42            	SBC	HL,BC
   958   000c6b e5              	PUSH	HL
   959   000c6c eb              	EX	DE,HL
   960   000c6d 2ab20c          	LD	HL,(MEMPTR)
   961   000c70 f3              	DI
   962   000c71 edb0            	LDIR			;DO BLOCK MOVE INTO BUFFER
   963   000c73 fb              	EI
   964   000c74 e1              	POP	HL
   965   000c75 114300          	LD	DE,'C'		;SEND DATA W/O INVERSION
   966   000c78 c36c06          	JP	SENDBUFF
   967                          ;	ret
   968                          ;
   969                          ;
   970                          ;
   971                          ;	... Z80 MEMORY WRITE COMMAND PROCESSOR ...
   972                          ;
   973                          Z80WRITE:
   974   000c7b cd4a0c          	CALL	SENDACK		;SEND 'ACK' FOR COMMAND FRAME
   975   000c7e cdb906          	CALL	RECVBUFF	;ATTEMPT TO READ DATA FRAME FROM ATARI
   976   000c81 c0              	RET	NZ
   977                          
   978   000c82 cd9c0c          	CALL	ZLENGTH		;GET BYTECOUNT FROM CMD FRAME
   979   000c85 b7              	OR	A
   980   000c86 ed42            	SBC	HL,BC
   981   000c88 c0              	RET	NZ		;ERROR IF DATA FRAME LENGTH NOT SAME
   982                          
   983   000c89 c5              	PUSH	BC
   984   000c8a cd4a0c          	CALL	SENDACK		;ELSE SEND 'ACK' FOR DATA FRAME
   985   000c8d c1              	POP	BC
   986   000c8e 2100c1          	LD	HL,IOBUFF
   987   000c91 ed5bb20c        	LD	DE,(MEMPTR)
   988   000c95 f3              	DI
   989   000c96 edb0            	LDIR			;DO BLOCK MOVE INTO BUFFER
   990   000c98 fb              	EI
   991   000c99 c3540c          	JP	SENDCOMP	;SEND 'COMPLETE' BACK TO ATARI
   992                          ;	ret
   993                          ;
   994                          ;
   995                          ;
   996                          ZLENGTH:
   997   000c9c 3afdc2          	LD	A,(CFRAME+2)	;GET BYTECOUNT FROM COMMAND FRAME
   998   000c9f 4f              	LD	C,A
   999   000ca0 0600            	LD	B,0		;LOAD BC WITH BYTECOUNT
  1000   000ca2 b7              	OR	A
  1001   000ca3 c0              	RET	NZ		;EXIT IF BYTECOUNT NOT=0
  1002                          
  1003   000ca4 04              	INC	B		;ELSE MAKE BC=256
  1004   000ca5 c9              	RET
  1005                          ;
  1006                          ;
  1007                          ;	... Z80 SET MEMORY POINTER COMMAND PROCESSOR ...
  1008                          ;
  1009                          Z80SET:
  1010   000ca6 cd4a0c          	CALL	SENDACK
  1011   000ca9 2afdc2          	LD	HL,(CFRAME+2)	;SET MEMORY POINTER FROM COMMAND
  1012   000cac 22b20c          	LD	(MEMPTR),HL
  1013   000caf c3540c          	JP	SENDCOMP
  1014                          ;	ret
  1015                          ;
  1016                          ;
  1017   000cb2 0000            MEMPTR:	DEFW	0		;POINTER FOR MEMORY READ/WRITE
  1018                          ;
  1019                          ;
  1020                          ;	... Z80 GOTO MEMORY LOCATION COMMAND PROCESSOR ...
  1021                          ;
  1022                          Z80GOTO:
  1023   000cb4 cd4a0c          	CALL	SENDACK
  1024   000cb7 cd540c          	CALL	SENDCOMP
  1025   000cba 2afdc2          	LD	HL,(CFRAME+2)
  1026   000cbd e9              	jp	(hl)		;execute routine @hl
  1027                          ;
  1028                          ;
  1029                          ;
  1030                          ;
  1031                          
sally2-f000.asm:
    49                          		INCLUDE	"FORMAT.MAC"
FORMAT.MAC:
     1                          	;PAGE
     2                          ;****************************************************************
     3                          ;*								*
     4                          ;*								*
     5                          ;****************************************************************
     6                          ;
     7                          ;	... DISKETTE INITIALIZATION ROUTINE ...
     8                          ;
     9                          ;	'IOBUFF' UTILIZATION IN FORMAT FUNCTION:
    10                          ;
    11                          ;	|---------------|  IOBUFF
    12                          ;	|		|
    13                          ;	| BAD SEC NUMS	|	STARTS @ LEN-(128+1) OR LEN-(256+1)
    14                          ;	|		|
    15                          ;	|---------------|  +LEN
    16                          ;	|		|
    17                          ;	|  WRTTRK CODE  |	VARIABLE LENGTH HALT/NMI/OUTI ROUTINE
    18                          ;	|		|
    19                          ;	|---------------|  +N
    20                          ;	|		|
    21                          ;	|  TRACK IMAGE  |	POINTED TO BY 'TRKPTR'
    22                          ;	|		|
    23                          ;	|		|  +10200
    24                          ;
    25                          ;
    26                          ;
    27                          FORMAT:
    28   000cbe af              	XOR	A
    29   000cbf d356            	OUT	(INDXSET),A	;SET FLIPFLOP FOR NORMAL INDEX PULSES
    30   000cc1 3c              	INC	A
    31   000cc2 d354            	OUT	(INDXCLR),A
    32                          ;	LD	A,RSTCMD+HLOAD+3
    33   000cc4 3e01            	LD	A,RSTCMD+HLOAD+1;WD1772: 1=12ms step rate
    34   000cc6 cd5903          	CALL	TYP1CMD		;ISSUE SLOW RESTORE COMMAND
    35   000cc9 ee04            	XOR	00000100B	;FLIP TK0 STATUS BIT
    36   000ccb e684            	AND	10000100B
    37   000ccd c29a0d          	JP	NZ,FORMX	;EXIT IF TRACK ZERO NOT INDICATED
    38                          
    39   000cd0 2100c3          	LD	HL,IOBUFF+LEN	;PREP TO BUILD IN-LINE CODE FOR FORMAT
    40   000cd3 3abcff          	LD	A,(TRKSIZ+1)
    41   000cd6 3c              	INC	A
    42   000cd7 47              	LD	B,A		;LOAD B WITH # OF PAGES/TRACK PLUS ONE
    43   000cd8 3676            FORM2:	LD	(HL),076H	;STORE 'HALT' OPCODE
    44   000cda 23              	INC	HL
    45   000cdb 36ed            	LD	(HL),0EDH	;STORE 'OUTI' OPCODE BYTE #1
    46   000cdd 23              	INC	HL
    47   000cde 36a3            	LD	(HL),0A3H	;STORE 'OUTI' OPCODE BYTE #2
    48   000ce0 23              	INC	HL
    49   000ce1 3620            	LD	(HL),020H	;STORE 'JRNZ' OPCODE BYTE
    50   000ce3 23              	INC	HL
    51   000ce4 36fb            	LD	(HL),-5		;STORE JUMP OFFSET FOR LOOP
    52   000ce6 23              	INC	HL
    53   000ce7 10ef            	DJNZ	FORM2
    54   000ce9 3ec9            	LD	A,0C9H
    55   000ceb 77              	LD	(HL),A		;STORE 'RET' OPCODE AT END
    56   000cec 326600          	LD	(0066H),A	;ALSO PLUNK ONE DOWN AT NMI VECTOR
    57   000cef 23              	INC	HL
    58   000cf0 22c3ff          	LD	(TRKPTR),HL	;SAVE ADDRESS TO BEGIN TRACK IMAGE
    59                          
    60   000cf3 af              	XOR	A
    61   000cf4 322dff          FORM3:	LD	(TRACK),A	;A HOLDS NEXT TRACK NUMBER
    62   000cf7 b7              	OR	A
    63   000cf8 2805            	JR	Z,FORM3A	;SKIP STEP-IN IF ON TRACK ZERO
    64                          ;	LD	A,STEPIN+HLOAD+3
    65   000cfa 3e41            	LD	A,STEPIN+HLOAD+1
    66   000cfc cd5903          	CALL	TYP1CMD		;STEP TO NEXT TRACK
    67   000cff dd2ab6ff        FORM3A:	LD	IX,(FRMPTR)	;GET SELECTED FORMAT DATA POINTER
    68   000d03 fd2ab8ff        	LD	IY,(SKWPTR)	;GET SELECTED SKEW TABLE POINTER
    69   000d07 3abdff          	ld	a,(sides)
    70   000d0a 1f              	rra
    71   000d0b 3a2fff          	ld	a,(OUTCPY)
    72   000d0e 3007            	jr	nc,form3b	;jump if not formatting both sides
    73   000d10 ee20            	xor	00100000b
    74   000d12 322fff          	ld	(OUTCPY),a	;else flip side select bit in latch
    75   000d15 d330            	out	(LATCH),a
    76   000d17 cda40d          form3b:	call	BUILD
    77   000d1a 3a2dff          	LD	A,(TRACK)
    78   000d1d d341            	OUT	(TRKREG),A
    79   000d1f 2ac3ff          	LD	HL,(TRKPTR)	;POINT TO START OF TRACK IMAGE
    80   000d22 f3              	DI
    81   000d23 3ef4            	LD	A,11110100B	;write track + 30ms settle delay
    82   000d25 cd7403          	CALL	CMDOUT		;ISSUE WRITE TRACK COMMAND
    83   000d28 3abbff          	LD	A,(TRKSIZ)
    84   000d2b 47              	LD	B,A		;LOAD B WITH TRACK SIZE MOD 256
    85   000d2c 0e43            	LD	C,DATREG
    86   000d2e cd00c3          	CALL	IOBUFF+LEN	;EXECUTE WRITE TRACK FROM BUFFER
    87   000d31 fb              	EI
    88   000d32 db40            FORM4:	IN	A,(STSREG)
    89   000d34 cb47            	BIT	0,A
    90   000d36 20fa            	JR	NZ,FORM4
    91   000d38 ed5bbfff        	LD	DE,(SEQNUM)	;LOAD DE WITH SEQUENCE NUMBER
    92   000d3c 2ac1ff          	LD	HL,(SEQPTR)	; AND HL WITH CACA TABLE POINTER
    93   000d3f 3abaff          	LD	A,(NSECTS)
    94   000d42 47              	LD	B,A
    95   000d43 dd2ab8ff        	LD	IX,(SKWPTR)	;POINT TO SECTOR TABLE
    96   000d47 dd7e00          FORM5:	LD	A,(IX)
    97   000d4a dd23            	INC	IX
    98   000d4c d342            	OUT	(SECREG),A
    99   000d4e 3a2fff          	ld	a,(OUTCPY)
   100   000d51 e620            	and	00100000b
   101   000d53 3e80            	ld	a,RDCMD		;determine if reading side 0 or 1
   102   000d55 2802            	jr	z,form51
   103   000d57 cbcf            	set	1,a		;WD1772 no side-no in cmd (I leave it there, doesn't seem to matter)
   104   000d59 cd5003          form51:	call	TYP2CMD		;read sector discarding the data
   105   000d5c e698            	AND	10011000B	;TEST FOR READY/RNF/CRC ERROR INDICATION
   106   000d5e 2814            	JR	Z,FORM6		;JUMP IF SECTOR READ OK
   107                          
   108   000d60 e680            	AND	10000000B
   109   000d62 2036            	JR	NZ,FORMX	;QUIT TRYING IF NOT-READY ERROR
   110   000d64 e5              	PUSH	HL
   111   000d65 c5              	PUSH	BC
   112   000d66 01fdc2          	LD	BC,IOBUFF+LEN-3
   113   000d69 b7              	OR	A
   114   000d6a ed42            	SBC	HL,BC		;TEST IF CA-CA SECTOR LIST IS FULL
   115   000d6c c1              	POP	BC
   116   000d6d e1              	POP	HL
   117   000d6e 3004            	JR	NC,FORM6	;SKIP IF NO MORE ROOM
   118   000d70 73              	LD	(HL),E
   119   000d71 23              	INC	HL
   120   000d72 72              	LD	(HL),D
   121   000d73 23              	INC	HL		;STORE BAD SECTOR NUMBER
   122   000d74 13              FORM6:	INC	DE
   123   000d75 10d0            	DJNZ	FORM5
   124   000d77 ed53bfff        	LD	(SEQNUM),DE	;STORE UPDATED ERROR TRACE STUFF
   125   000d7b 22c1ff          	LD	(SEQPTR),HL
   126   000d7e 3a2fff          	ld	a,(OUTCPY)
   127   000d81 e620            	and	00100000b
   128   000d83 c2ff0c          	jp	nz,FORM3A	;go back and do side 0 if on side 1 now
   129   000d86 3a2dff          	LD	A,(TRACK)
   130   000d89 3c              	INC	A
   131   000d8a 21beff          	ld	hl,tracks
   132   000d8d be              	CP	(HL)
   133   000d8e daf40c          	JP	C,FORM3		;FORMAT UP TO LAST TRACK ON DISK
   134                          
   135   000d91 2ac1ff          	LD	HL,(SEQPTR)
   136   000d94 36ff            	LD	(HL),255	;STORE TERMINATOR ON CA-CA BUFFER
   137   000d96 23              	INC	HL
   138   000d97 36ff            	LD	(HL),255
   139   000d99 af              	XOR	A		;INDICATE FORMAT COMPLETED
   140   000d9a f5              FORMX:	PUSH	AF
   141   000d9b 3eff            	LD	A,255
   142   000d9d 322dff          	LD	(TRACK),A
   143   000da0 d341            	OUT	(TRKREG),A	;FORCE DISK HANDLER TO RECALIBRATE
   144   000da2 f1              	POP	AF
   145   000da3 c9              	RET			;RETURN COMPLETION STATUS IN A
   146                          ;
   147                          ;
   148                          ;
   149                          ;
   150                          ;	... SUBROUTINE TO BUILD IMAGE OF FORMATTED TRACK ...
   151                          ;
   152                          ;	PARAMETERS ARE:  IX ....... (POINTER TO FORMAT PARAMETERS)
   153                          ;			 IY ....... (TABLE OF SECTOR NUMBERS)
   154                          ;			 TRKPTR ... (POINTER TO TRACK DATA BUFFER)
   155                          ;			 TRACK .... (TRACK NUMBER)
   156                          ;			 NSECTS ... (NUMBER OF SECTORS)
   157                          ;			 sides .... (copy of 'nsides' param)
   158                          ;
   159                          BUILD:
   160   000da4 3abaff          	LD	A,(NSECTS)
   161   000da7 4f              	LD	C,A
   162   000da8 dde5            	PUSH	IX
   163   000daa e1              	POP	HL
   164   000dab 46              	LD	B,(HL)		;LOAD B WITH # OF FIELDS IN PREAMBLE
   165   000dac 23              	INC	HL
   166   000dad ed5bc3ff        	LD	DE,(TRKPTR)
   167   000db1 cd0b0e          BUILD1:	CALL	INSERT		;INSERT FIELDS OF PREAMBLE
   168   000db4 10fb            	DJNZ	BUILD1
   169                          
   170   000db6 46              	LD	B,(HL)		;LOAD B WITH NUMBER OF ITEMS IN SECTOR
   171   000db7 23              	INC	HL
   172   000db8 e5              	PUSH	HL
   173   000db9 dde1            	POP	IX		;IX POINTS TO START OF SECTOR POOP
   174   000dbb 3a2dff          BUILD3:	LD	A,(TRACK)
   175   000dbe dd7707          	LD	(IX+7),A	;STORE TRACK# FOR TRACK BEING FORMATTED
   176   000dc1 3a2fff          	ld	a,(OUTCPY)
   177   000dc4 e620            	and	00100000b
   178   000dc6 3e00            	ld	a,0
   179   000dc8 2801            	jr	z,bild31	;jump if formatting side 0
   180   000dca 3c              	inc	a
   181   000dcb dd7709          bild31:	ld	(ix+9),a	;store side# in id
   182   000dce fd7e00          	LD	A,(IY)
   183   000dd1 fd23            	INC	IY
   184   000dd3 dd770b          	LD	(IX+11),A	;STORE SECTOR# INTO FORMAT CONSTANTS
   185                          
   186   000dd6 dde5            	PUSH	IX
   187   000dd8 e1              	POP	HL		;POINT HL TO SECTOR POOP
   188   000dd9 c5              	PUSH	BC
   189   000dda cd0b0e          BUILD4:	CALL	INSERT
   190   000ddd 10fb            	DJNZ	BUILD4		;INSERT ITEMS UP TO SECTOR DATA FIELD
   191                          
   192   000ddf dd7e0d          	LD	A,(IX+13)
   193   000de2 cdcd0a          	call	getsize		;compute sector size in bytes
   194   000de5 3eff            BUILD6:	ld	a,0ffh
   195   000de7 12              	ld	(de),a		;fill sector data with ff's
   196   000de8 13              	INC	DE
   197   000de9 0b              	DEC	BC		;REPEAT TILL SECTOR IMAGE IS FILLED
   198   000dea 78              	LD	A,B
   199   000deb b1              	OR	C
   200   000dec 20f7            	JR	NZ,BUILD6
   201                          
   202   000dee 46              	LD	B,(HL)		;GET #FIELDS IN POST-SECTOR STUFF
   203   000def 23              	INC	HL
   204   000df0 cd0b0e          BUILD7:	CALL	INSERT		;INSERT FIELDS UP TO GAP 3
   205   000df3 10fb            	DJNZ	BUILD7
   206   000df5 c1              	POP	BC
   207                          
   208   000df6 0d              	DEC	C
   209   000df7 20c2            	JR	NZ,BUILD3
   210                          
   211   000df9 2ac3ff          	LD	HL,(TRKPTR)
   212   000dfc 01d827          	LD	BC,10200
   213   000dff 09              	ADD	HL,BC		;COMPUTE END OF LONGEST TRACK IMAGE
   214   000e00 ed52            	SBC	HL,DE		;COMPUTE BYTES NECESSARY TO GET THERE
   215   000e02 44              	LD	B,H
   216   000e03 4d              	LD	C,L
   217   000e04 62              	LD	H,D
   218   000e05 6b              	LD	L,E
   219   000e06 13              	INC	DE
   220   000e07 77              	LD	(HL),A
   221   000e08 edb0            	LDIR			;FILL REST OF BUFFER
   222   000e0a c9              	RET
   223                          ;
   224                          ;
   225                          ;
   226   000e0b c5              INSERT:	PUSH	BC
   227   000e0c 46              	LD	B,(HL)
   228   000e0d 23              	INC	HL
   229   000e0e 7e              	LD	A,(HL)
   230   000e0f 23              	INC	HL
   231   000e10 12              INS2:	LD	(DE),A
   232   000e11 13              	INC	DE
   233   000e12 10fc            	DJNZ	INS2
   234   000e14 c1              	POP	BC
   235   000e15 c9              	RET
   236                          ;
   237                          ;
   238                          ;
   239                          ;
   240                          ;	... DISK FORMAT DATA TABLES FOR 5/8 DD/SD STANDARDS ...
   241                          ;
   242                          ;
   243   000e16 01              SD5N18:	DEFB	1
   244   000e17 10ff            	DEFB	16,0FFH
   245                          
   246   000e19 0b              	DEFB	11
   247   000e1a 0300            	DEFB	3,00H		;GAP 3 (DONE AS 2 FIELDS TO MAKE
   248   000e1c 0300            	DEFB	3,00H		; ID FIELD COME OUT IN RIGHT LOCATION)
   249   000e1e 01fe            	DEFB	1,0FEH		;ID ADDRESS MARK
   250   000e20 0100            	DEFB	1,00H		;TRACK
   251   000e22 0100            	DEFB	1,00H		;SIDE
   252   000e24 0100            	DEFB	1,00H		;SECTOR
   253   000e26 0100            	DEFB	1,00H		;LENGTH
   254   000e28 01f7            	DEFB	1,0F7H		;GENERATE CRC
   255   000e2a 0bff            	DEFB	11,0FFH		;GAP2
   256   000e2c 0600            	DEFB	6,00H		;GAP2
   257   000e2e 01fb            	DEFB	1,0FBH		;DATA ADDRESS MARK
   258                          
   259   000e30 02              	DEFB	2
   260   000e31 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   261   000e33 09ff            	DEFB	9,0FFH		;GAP 3
   262                          ;
   263                          ;
   264                          ;
   265                          ;
   266                          ;
   267   000e35 01              DD5N18:	DEFB	1
   268   000e36 204e            	DEFB	32,4EH		;GAP 1
   269                          
   270   000e38 0c              	DEFB	12
   271   000e39 0c00            	DEFB	12,00H		;SECOND PART OF GAP 3
   272   000e3b 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   273   000e3d 01fe            	DEFB	1,0FEH		;GENERATE ID ADDRESS MARK
   274   000e3f 0100            	DEFB	1,0		;TRACK#
   275   000e41 0100            	DEFB	1,00000000B	;SIDE
   276   000e43 0100            	DEFB	1,0		;SECTOR#
   277   000e45 0101            	DEFB	1,00000001B	;LENGTH
   278   000e47 01f7            	DEFB	1,0F7H		;GENERATE CRC
   279   000e49 164e            	DEFB	22,4EH		;FIRST PART OF GAP 2
   280   000e4b 0c00            	DEFB	12,00H		;SECOND PART OF GAP 2
   281   000e4d 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   282   000e4f 01fb            	DEFB	1,0FBH		;GENERATE DATA ADDRESS MARK
   283                          
   284   000e51 02              	DEFB	2
   285   000e52 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   286   000e54 104e            	DEFB	16,4EH		;FIRST PART OF GAP 3
   287                          ;
   288                          ;
   289                          ;
   290   000e56 12100e0c0a080604SKEWSD:	DEFB	18,16,14,12,10,8,6,4,2
                02              
   291   000e5f 110f0d0b09070503	DEFB	17,15,13,11,9,7,5,3,1
                01              
   292                          ;
   293   000e68 01070d          SKEWDD:	DEFB	1,7,13
   294   000e6b 060c12          	DEFB	6,12,18
   295   000e6e 050b11          	DEFB	5,11,17
   296   000e71 040a10          	DEFB	4,10,16
   297   000e74 03090f          	DEFB	3,9,15
   298   000e77 02080e          	DEFB	2,8,14
   299                          ;
   300                          ;
   301                          ;
   302   000e7a 04              SD8N26:	DEFB	4		;PREAMBLE FIELD
   303   000e7b 28ff            	DEFB	40,0FFH		;GAP 4
   304   000e7d 0600            	DEFB	6,00
   305   000e7f 01fc            	DEFB	1,0FCH		;INDEX ADDRESS MARK
   306   000e81 1aff            	DEFB	26,0FFH
   307                          
   308   000e83 0b              	DEFB	11
   309   000e84 0300            	DEFB	3,00H		;GAP 3 (DONE AS 2 FIELDS)
   310   000e86 0300            	DEFB	3,00H		;
   311   000e88 01fe            	DEFB	1,0FEH		;ID ADDRESS MARK
   312   000e8a 0100            	DEFB	1,00H		;TRACK
   313   000e8c 0100            	DEFB	1,00H		;SIDE
   314   000e8e 0100            	DEFB	1,00H		;SECTOR
   315   000e90 0100            	DEFB	1,00H		;LENGTH
   316   000e92 01f7            	DEFB	1,0F7H		;GENERATE CRC
   317   000e94 0bff            	DEFB	11,0FFH		;GAP2
   318   000e96 0600            	DEFB	6,00H		;GAP2
   319   000e98 01fb            	DEFB	1,0FBH		;DATA ADDRESS MARK
   320                          
   321   000e9a 02              	DEFB	2
   322   000e9b 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   323   000e9d 1bff            	DEFB	27,0FFH		;GAP 3
   324                          ;
   325                          ;
   326                          ;
   327   000e9f 05              DD8N26:	DEFB	5
   328   000ea0 504e            	DEFB	80,4EH		;POST-INDEX GAP
   329   000ea2 0c00            	DEFB	12,00H		;INDEX SYNC
   330   000ea4 03f6            	DEFB	3,0F6H		;GENERATE SYNC=C1 HEX
   331   000ea6 01fc            	DEFB	1,0FCH		;GENERATE INDEX ADDRESS MARK
   332   000ea8 324e            	DEFB	50,4EH		;GAP 1
   333                          
   334   000eaa 0c              	DEFB	12
   335   000eab 0c00            	DEFB	12,00H		;SECOND PART OF GAP 3
   336   000ead 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   337   000eaf 01fe            	DEFB	1,0FEH		;GENERATE ID ADDRESS MARK
   338   000eb1 0100            	DEFB	1,0		;TRACK#
   339   000eb3 0100            	DEFB	1,00000000B	;SIDE
   340   000eb5 0100            	DEFB	1,0		;SECTOR#
   341   000eb7 0101            	DEFB	1,00000001B	;LENGTH
   342   000eb9 01f7            	DEFB	1,0F7H		;GENERATE CRC
   343   000ebb 164e            	DEFB	22,4EH		;FIRST PART OF GAP 2
   344   000ebd 0c00            	DEFB	12,00H		;SECOND PART OF GAP 2
   345   000ebf 03f5            	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
   346   000ec1 01fb            	DEFB	1,0FBH		;GENERATE DATA ADDRESS MARK
   347                          
   348   000ec3 02              	DEFB	2
   349   000ec4 01f7            	DEFB	1,0F7H		;GENERATE CRC BYTES
   350   000ec6 354e            	DEFB	53,4EH		;FIRST PART OF GAP 3
   351                          ;
   352                          ;
   353                          ;
   354   000ec8 010e031005120714SKEW13:	DEFB	1,14,3,16,5,18,7,20,9,22,11,24,13,26
                09160b180d1a    
   355   000ed6 020f041106130815	DEFB	2,15,4,17,6,19,8,21,10,23,12,25
                0a170c19        
   356                          ;
   357                          ;
   358   000ee2 0112091a11081910SKEW17:	DEFB	1,18,9,26,17,8,25,16,7,24,15,6,23
                07180f0617      
   359   000eef 0e05160d04150c03	DEFB	14,5,22,13,4,21,12,3,20,11,2,19,10
                140b02130a      
   360                          ;
   361                          ;
   362                          
sally2-f000.asm:
    50                          
    51   000efc ffffffff        		DEFB	255,255,255,255	;HEAD POSITIONS FOR 4 DRIVES
    52   000f00 00000000        		DEFB	0,0,0,0		;DENSITY/TYPE/SELECT BITS FOR 4 DRIVES
    53   000f04 10101010        		DEFB	16,16,16,16	;SETTLING DELAYS / STEP RATES TABLE
    54   000f08 00              		DEFB	0		;CURRENTLY SELECTED DISK#
    55   000f09 ff              		DEFB	255		;TRACK POSITION OF SELECTED DRIVE
    56   000f0a 01              		DEFB	1		;DRIVES-OFF FLAG FROM DISK TIMER IRQ
    57   000f0b 00              		DEFB	00000000B	;COPY OF DISK CONTROL LATCH
    58   000f0c 0000            		DEFW	0		;DISK SPIN PERIOD
    59   000f0e 32              		DEFB	50		;HEAD LOAD DELAY
    60   000f0f 0a              		DEFB	10		;MAX NUMBER OF READ/WRITE RETRIES
    61   000f10 00000000        		DEFB	0,0,0,0		;ROOM FOR EXPANSION
    62                          					;24 bytes
    63                          
    64   000f14 2108            		DEFW	IDTAB		;POINTER TO DEVICE ID TABLE
    65   000f16 be07            		DEFW	PWRWAIT		;POINTER FOR ATARI TASK STATE MACHINE
    66   000f18 e107            		DEFW	DUMMY		;POINTER FOR EXTRA TASK PROCESSOR
    67   000f1a 020d0a0000      		DEFB	2,CR,LF,0,0	;PRINTER NEWLINE CHARACTERS
    68   000f1f 00003c00        		DEFB	0,0,60,0	;PRINTER STATUS FRAME
    69   000f23 80              		DEFB	10000000B	;MASK ALL BITS BUT 'BUSY'
    70   000f24 00              		DEFB	00000000B	;COMPARE TO ZERO FOR READY
    71   000f25 b70b            		DEFW	FMTS		;POINTER TO STANDARD FORMAT TABLES
    72   000f27 00c5            		DEFW	IOBUFF+(2*LEN)	;PUT PRINT BUFFER AFTER HERE
    73   000f29 ff0f            		DEFW	4095		;MAX BUFFER INDEX OFFSET
    74                          					;23 bytes
    75                          					;--------
    76                          					;47 bytes
    77                          					;========
    78                          ;--------------------------------------------------
    79                          ; set to zero in startup code until 0ffffh
    80                          ;--------------------------------------------------
    81   000f2b 73              ff2a:		db	73h
    82   000f2c 00                   		nop
    83   000f2d 00                   		nop
    84   000f2e 00                   		nop
    85   000f2f 00                   		nop
    86   000f30 00                   		nop
    87   000f31 00                   		nop
    88   000f32 00                   		nop
    89   000f33 00              ff33:     	nop
    90   000f34 00                   		nop
    91   000f35 00                   		nop
    92   000f36 00                   		nop
    93   000f37 524f4c4c49203120		db	"ROLLI 1 Rev 1.00"
                52657620312e3030
    94                          
    95                          
